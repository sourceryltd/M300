{"version":3,"sources":["components/Common/OptionCard/OptionCard.js","Utility/helpers.js","components/Setup/PrinterType/PrinterType.js","Utility/useMountEffect.js","components/Setup/NetworkType/WifiConnect.js","components/Setup/NetworkType/HotspotConnect.js","components/Setup/NetworkType/NetworkType.js","components/Setup/UserLevel/UserLevel.js","components/Menu/MenuTabs/Update.js","components/Setup/Setup.js","components/Common/Tabs/TabList.js","components/Print/PrintStatus/PrintStatus.js","components/Print/PrintComplete/PrintComplete.js","components/Common/FileManager/FileManager.js","components/Print/Print.js","components/Control/Moving/Moving.js","components/Control/Heating/thermometer/index.js","components/Control/Heating/Heating.js","components/Control/Control.js","components/Menu/MenuTabs/About.js","components/Menu/MenuTabs/Settings.js","components/Menu/Menu.js","components/Tune/Tune.js","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","card","margin","border","textAlign","OptionCard","title","description","onClick","classes","Card","className","CardActionArea","CardContent","Typography","variant","setStorage","key","val","console","log","localStorage","setItem","getStorage","getItem","header","fontSize","PrinterType","setStep","handleClick","useMountEffect","fun","useEffect","accordion","display","justifyContent","backdrop","zIndex","color","button","alignSelf","height","marginLeft","connecting","flexDirection","alignItems","marginBottom","container","item","padding","keyboard","position","bottom","left","right","WifiConnect","setShowSnack","setSnackMessage","setConnectWifi","handleSnackClose","useState","expanded","setExpanded","layout","setLayout","input","setInput","wifiArr","setWifiArr","setConnecting","useRef","a","fetch","response","json","getNetworks","then","data","networks","filter","obj","pos","arr","map","mapObj","indexOf","ssid","handleSubmit","setNetwork","body","method","headers","JSON","stringify","password","status","onChangeInput","event","target","value","current","IconButton","aria-label","List","network","Accordion","AccordionSummary","content","ListItem","Button","panel","AccordionDetails","TextField","id","label","type","onChange","length","Backdrop","open","CircularProgress","keyboardRef","r","layoutName","onKeyPress","buttonContainer","width","marginTop","HotspotConnect","Grid","spacing","direction","NetworkType","connectWifi","justify","endIcon","ArrowForward","removeItem","UserLevel","handleOnboarding","networkType","checker","flex","updateContainer","Update","autoCheck","checking","setChecking","text","setText","updates","setUpdates","checkDisabled","setCheckDisabled","handleCheck","setTimeout","style","userMode","disabled","welcome","Setup","step","showSnack","snackMessage","Container","size","Snackbar","autoHideDuration","message","onClose","TabList","tabList","handleTabClick","activeTab","disabledNav","Tabs","centered","tab","Tab","minWidth","textCenter","PrintStatus","lastMessage","progressState","state","setDisabledNav","paused","setPaused","setValue","completion","prevState","file","files","icon","faPlay","faPause","faStop","LinearProgress","theme","drawerContainer","printButton","summary","cursor","backgroundColor","palette","secondary","main","selected","hover","fontWeight","FileManager","drawerOpen","setDrawerOpen","fileLocation","setSelected","loading","setLoading","setFiles","getFiles","Drawer","anchor","paper","toUpperCase","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","moment","date","format","bytes","decimals","k","dm","sizes","i","Math","floor","parseFloat","pow","toFixed","formatBytes","Print","setActiveMode","extruder","bed","connected","feed","printing","progress","setState","uploadedFile","printState","setPrintState","jobState","setJobState","setProgressState","fileDrawerOpen","setFileDrawerOpen","setFileLocation","fetchFiles","location","React","parse","substring","hasOwnProperty","job","name","e","FormData","persist","append","btnContainer","centerBtns","tabs","textTransform","units","Moving","unit","setUnit","sendGcode","gcode","homeAxis","axis","moveAxis","negative","command","Box","xs","Paper","u","ArrowUpward","ArrowDownward","Thermometer","props","min","max","Heating","Control","setBed","setExtruder","x","y","z","setPosition","temps","parseInt","tool0","actual","payload","About","Settings","componentContainer","MenuArray","component","Menu","activeComponent","setActiveComponent","Fragment","handleDrawer","ListItemText","primary","Divider","Tune","offset","setOffset","ButtonGroup","appBar","top","Home","mode","setActiveTab","Components","AppBar","createMuiTheme","App","onboarded","setOnboarded","isOnboarded","socketUrl","messageHistory","useWebSocket","shouldReconnect","closeEvent","reconnectAttempts","reconnectInterval","onOpen","onError","sendMessage","readyState","useMemo","concat","connectionStatus","ReadyState","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","CssBaseline","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.271a86f1.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  CardActionArea,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  card: {\n    margin: '32px',\n    border: '2px solid rgba(0, 0, 0, 0.12)',\n    textAlign: 'center',\n  },\n});\nconst OptionCard = ({ title, description, onClick }) => {\n  const classes = useStyles();\n\n  return (\n    <Card onClick={onClick} className={classes.card}>\n      <CardActionArea>\n        <CardContent>\n          <Typography variant=\"h2\">{title}</Typography>\n          <p>{description}</p>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default OptionCard;\n","export const formatBytes = (bytes, decimals = 2) => {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n};\n\nexport const setStorage = (key, val) => {\n  console.log(key);\n  console.log(val);\n  return localStorage.setItem(key, val);\n};\nexport const getStorage = (key) => {\n  return localStorage.getItem(key);\n};\nexport const removeStorage = (key) => {\n  return localStorage.removeItem(key);\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport OptionCard from '../../Common/OptionCard/OptionCard';\nimport { setStorage } from '../../../Utility/helpers';\nconst useStyles = makeStyles({\n  header: {\n    textAlign: 'center',\n    fontSize: '32px',\n  },\n});\n\nconst PrinterType = ({ setStep }) => {\n  const classes = useStyles();\n  const handleClick = (val) => {\n    setStorage('printerProfile', val);\n    setStep(1);\n  };\n  return (\n    <div>\n      <h2 className={classes.header}>Where will this printer be used?</h2>\n      <OptionCard title=\"Home\" onClick={() => handleClick('Home')} />\n      <OptionCard title=\"Classroom\" onClick={() => handleClick('Classroom')} />\n    </div>\n  );\n};\n\nexport default PrinterType;\n","import { useEffect } from 'react';\n\nexport const useMountEffect = (fun) => useEffect(fun, []);\n","import React, { useRef, useState } from 'react';\nimport { useMountEffect } from '../../../Utility/useMountEffect';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Backdrop,\n  Button,\n  CircularProgress,\n  IconButton,\n  List,\n  ListItem,\n  TextField,\n} from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Keyboard from 'react-simple-keyboard';\nimport 'react-simple-keyboard/build/css/index.css';\n\nconst useStyles = makeStyles({\n  accordion: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  backdrop: {\n    zIndex: 10000,\n    color: '#fff',\n  },\n  button: {\n    alignSelf: 'flex-end',\n    height: '36px',\n    marginLeft: '25px',\n  },\n  connecting: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& h4': {\n      marginBottom: '24px',\n    },\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  item: {\n    padding: '30px 15px',\n    fontSize: '24px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  keyboard: {\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    color: '#000',\n  },\n});\nconst WifiConnect = ({\n  setStep,\n  setShowSnack,\n  setSnackMessage,\n  handleSnackClose,\n  setConnectWifi,\n}) => {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = useState(false);\n  const [layout, setLayout] = useState('default');\n  const [input, setInput] = useState('');\n  const [wifiArr, setWifiArr] = useState([]);\n  const [connecting, setConnecting] = useState(false);\n\n  const keyboard = useRef();\n\n  useMountEffect(() => {\n    async function getNetworks() {\n      // Default options are marked with *\n      const response = await fetch(`http://makerhub.local:8990/networks/scan`);\n      return response.json(); // parses JSON response into native JavaScript objects\n    }\n    //Fetch http://makerhub.local:8990/networks/scan\n    //setWifiArr response.networks\n    getNetworks().then((data) => {\n      let networks = data.networks.filter((obj, pos, arr) => {\n        return (\n          arr.map((mapObj) => mapObj['ssid']).indexOf(obj['ssid']) === pos &&\n          obj.ssid != null\n        );\n      });\n      setWifiArr(networks);\n    });\n  });\n\n  const handleSubmit = async () => {\n    const body = { ssid: expanded, password: input };\n    //set loading screen\n    setExpanded(false);\n    setConnecting(true);\n    setInput('');\n    //await POST body to http://makerhub.local:8990/connect\n    async function setNetwork(body) {\n      console.log(body);\n      // Default options are marked with *\n      const response = await fetch(`http://makerhub.local:8990/connect`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      });\n      return response.json(); // parses JSON response into native JavaScript objects\n    }\n    setNetwork(body).then((data) => {\n      //after, display success or failure\n      setConnecting(false);\n      if (data.status == 'connected!') {\n        setSnackMessage('Successfully Connected');\n        //Go to next screen\n        setStep(2);\n      } else {\n        setSnackMessage('Connection Failed');\n        // show snack message \"Failure\"\n      }\n      setShowSnack(() => true);\n    });\n  };\n  const onChange = (input) => {\n    setInput(input);\n    console.log('Input changed', input);\n  };\n  const handleShift = () => {\n    const newLayoutName = layout === 'default' ? 'shift' : 'default';\n    setLayout(newLayoutName);\n  };\n  const onKeyPress = (button) => {\n    /**\n     * If you want to handle the shift and caps lock buttons\n     */\n    (button === '{shift}' || button === '{lock}') && handleShift();\n    button === '{enter}' && handleSubmit();\n  };\n  const handleExpand = (panel) => {\n    setExpanded(panel);\n  };\n  const onChangeInput = (event) => {\n    const input = event.target.value;\n    setInput(input);\n    keyboard.current.setInput(input);\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.header}>\n        <IconButton\n          aria-label=\"back\"\n          onClick={() => setConnectWifi(() => null)}\n        >\n          <ArrowBackIcon />\n        </IconButton>\n        <h2>Wi-Fi</h2>\n      </div>\n\n      <List>\n        {wifiArr.map((network) => {\n          return (\n            <Accordion\n              expanded={expanded === network.ssid}\n              key={`${network.ssid}-list-item`}\n            >\n              <AccordionSummary classes={{ content: 'accordion-style' }}>\n                <ListItem className={classes.item}>\n                  {network.ssid}\n                  <Button\n                    color={expanded === network.ssid ? 'secondary' : 'primary'}\n                    variant=\"contained\"\n                    onClick={() => {\n                      if (expanded === network.ssid) {\n                        setExpanded(() => false);\n                        setInput('');\n                      } else {\n                        handleExpand(network.ssid);\n                      }\n                    }}\n                  >\n                    {expanded === network.ssid ? 'Close' : 'Join'}\n                  </Button>\n                </ListItem>\n              </AccordionSummary>\n              <AccordionDetails className={classes.accordion}>\n                <TextField\n                  id=\"standard-password-input\"\n                  label=\"Password\"\n                  type=\"password\"\n                  color=\"secondary\"\n                  value={input}\n                  onChange={onChangeInput}\n                />\n                <Button\n                  color=\"primary\"\n                  variant=\"contained\"\n                  className={classes.button}\n                  onClick={() => {\n                    if (input.length > 0) {\n                      handleSubmit();\n                    } else {\n                      setSnackMessage('Password required');\n                      setShowSnack(true);\n                    }\n                  }}\n                >\n                  Connect\n                </Button>\n              </AccordionDetails>\n            </Accordion>\n          );\n        })}\n      </List>\n      {connecting && (\n        <Backdrop className={classes.backdrop} open={connecting}>\n          <div className={classes.connecting}>\n            <h4>Connecting</h4>\n            <CircularProgress color=\"inherit\" />\n          </div>\n        </Backdrop>\n      )}\n      {expanded && (\n        <div className={classes.keyboard}>\n          <Keyboard\n            keyboardRef={(r) => (keyboard.current = r)}\n            layoutName={layout}\n            onChange={onChange}\n            onKeyPress={onKeyPress}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WifiConnect;\n","import React from 'react';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  buttonContainer: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-around',\n    marginTop: '56px',\n  },\n  container: {\n    padding: '32px',\n    textAlign: 'center',\n    '& p': {\n      fontSize: '2.125rem',\n    },\n  },\n});\nconst HotspotConnect = ({ setStep, setConnectWifi, type }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      item\n      spacing={6}\n      direction=\"column\"\n      alignItems=\"center\"\n      className={classes.container}\n    >\n      <h2>\n        Your SSID is\n        <Typography color=\"secondary\" variant=\"body1\">\n          Maker300X\n        </Typography>\n      </h2>\n      <h2>\n        Your password is\n        <Typography color=\"secondary\" variant=\"body1\">\n          makermade\n        </Typography>\n      </h2>\n      {type === 'ethernet' && (\n        <Grid item>\n          <Typography variant=\"h4\">Please connect your cable</Typography>\n        </Grid>\n      )}\n      <Grid item className={classes.buttonContainer}>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => setConnectWifi(null)}\n        >\n          Back\n        </Button>\n        <Button color=\"primary\" variant=\"contained\" onClick={() => setStep(2)}>\n          Next\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default HotspotConnect;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Button } from '@material-ui/core';\nimport { ArrowForward } from '@material-ui/icons';\nimport { setStorage, removeStorage } from '../../../Utility/helpers';\nimport OptionCard from '../../Common/OptionCard/OptionCard';\nimport WifiConnect from './WifiConnect';\nimport HotspotConnect from './HotspotConnect';\n\nconst useStyles = makeStyles({\n  header: {\n    display: 'flex',\n    '& h2': {\n      fontSize: '28px',\n    },\n  },\n});\nconst NetworkType = ({\n  setStep,\n  setSnackMessage,\n  setShowSnack,\n  handleSnackClose,\n}) => {\n  const classes = useStyles();\n  const [connectWifi, setConnectWifi] = useState(null);\n\n  const handleClick = (val) => {\n    setStorage('networkProfile', val);\n    setConnectWifi(val);\n  };\n  return (\n    <>\n      {connectWifi === null ? (\n        <>\n          <Grid\n            container\n            justify=\"space-between\"\n            alignItems=\"center\"\n            className={classes.header}\n          >\n            <h2>Network</h2>\n            <Button\n              aria-label=\"skip\"\n              endIcon={<ArrowForward />}\n              onClick={() => {\n                removeStorage('networkProfile');\n                setStep(2);\n              }}\n            >\n              Skip\n            </Button>\n          </Grid>\n          <OptionCard title=\"Wi-Fi\" onClick={() => handleClick('wifi')} />\n          <OptionCard title=\"Hotspot\" onClick={() => handleClick('hotspot')} />\n          <OptionCard\n            title=\"Ethernet\"\n            onClick={() => handleClick('ethernet')}\n          />\n        </>\n      ) : connectWifi === 'wifi' ? (\n        <WifiConnect\n          setStep={setStep}\n          setShowSnack={setShowSnack}\n          setSnackMessage={setSnackMessage}\n          handleSnackClose={handleSnackClose}\n          setConnectWifi={setConnectWifi}\n        />\n      ) : (\n        <HotspotConnect\n          setStep={setStep}\n          setConnectWifi={setConnectWifi}\n          type={connectWifi}\n        />\n      )}\n    </>\n  );\n};\n\nexport default NetworkType;\n","import React from 'react';\nimport OptionCard from '../../Common/OptionCard/OptionCard';\nimport { getStorage, setStorage } from '../../../Utility/helpers';\n\nimport './UserLevel.css';\nconst UserLevel = ({ handleOnboarding, setStep }) => {\n  const handleClick = async (val) => {\n    const networkType = await getStorage('networkProfile');\n    setStorage('userMode', val);\n    setStorage('onboarded', true);\n    if (networkType === 'wifi' || networkType === 'ethernet') {\n      //check for updates\n      setStep(3);\n    } else {\n      handleOnboarding(val);\n    }\n  };\n  return (\n    <div className=\"menu-container\">\n      <h3>Please choose a mode</h3>\n      <div className=\"menu-options-container\">\n        <OptionCard\n          title=\"Beginner\"\n          description=\"For beginners. We will walk you through how to operate your 3D\n                printer, step by step.\"\n          onClick={() => handleClick(0)}\n        />\n        <OptionCard\n          title=\"Standard\"\n          description=\"For users familiar with 3D printing.\"\n          onClick={() => handleClick(1)}\n        />\n        <OptionCard\n          title=\"Advanced\"\n          description=\"For advanced users, unlocks features to customize your printer\n          firmware any way you like!\"\n          onClick={() => handleClick(2)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default UserLevel;\n","import React, { useState } from 'react';\nimport { Button, Grid, CircularProgress, Typography } from '@material-ui/core';\nimport { ArrowForward } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useMountEffect } from '../../../Utility/useMountEffect';\nimport { getStorage } from '../../../Utility/helpers';\n\nconst useStyles = makeStyles({\n  checker: {\n    flex: 2,\n    '& button': {\n      width: '200px',\n      height: '50px',\n      fontSize: '14px',\n    },\n  },\n  updateContainer: {\n    flex: 3,\n    '& h3': {\n      fontSize: '28px',\n      textAlign: 'center',\n    },\n  },\n});\n\nconst Update = ({ autoCheck, handleOnboarding }) => {\n  const classes = useStyles();\n\n  const [checking, setChecking] = useState(false);\n  const [text, setText] = useState('Update device');\n  const [updates, setUpdates] = useState(false);\n  const [checkDisabled, setCheckDisabled] = useState(false);\n  useMountEffect(() => {\n    if (autoCheck) {\n      handleCheck();\n    }\n  });\n  const handleCheck = () => {\n    setText('Checking for updates...');\n    setChecking(true);\n    //make api call\n    setTimeout(() => {\n      //after api call\n      setChecking(false);\n      //if updates present\n      setText('Updates available!');\n      setUpdates(true);\n      //if no updates\n      // setText('All up to date');\n    }, 3000);\n  };\n  const handleDownload = () => {\n    //call download api\n    setChecking(true);\n    setText('Downloading, please wait...');\n    setUpdates(false);\n    setTimeout(() => {\n      //after api call\n      setChecking(false);\n      //on success\n      setText('Update successful, please reboot the printer.');\n      setCheckDisabled(true);\n      //on failure\n      // setText('Something went wrong, please try again.');\n      // setUpdates(true);\n      // setCheckDisabled(true);\n    }, 3000);\n  };\n  const handleSkip = () => {\n    const userMode = getStorage('userMode');\n    handleOnboarding(userMode);\n  };\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      style={{ height: '100%' }}\n    >\n      {autoCheck && !checkDisabled && (\n        <Button\n          style={{ alignSelf: 'flex-end', marginTop: '15px' }}\n          aria-label=\"skip\"\n          endIcon={<ArrowForward />}\n          onClick={handleSkip}\n        >\n          Skip\n        </Button>\n      )}\n\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.updateContainer}\n      >\n        {checking && <CircularProgress color=\"secondary\" />}\n        {text.length > 0 && <Typography variant=\"h3\">{text}</Typography>}\n        {updates && (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handleDownload}\n            style={{ marginTop: '24px' }}\n          >\n            Download Update\n          </Button>\n        )}\n      </Grid>\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.checker}\n      >\n        {!updates && !checking && (\n          <Button\n            variant=\"contained\"\n            disabled={checking || checkDisabled}\n            onClick={handleCheck}\n          >\n            Check for updates\n          </Button>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Update;\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Container,\n  Grid,\n  Snackbar,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport PrinterType from './PrinterType/PrinterType';\nimport NetworkType from './NetworkType/NetworkType';\nimport UserLevel from './UserLevel/UserLevel';\nimport Update from '../Menu/MenuTabs/Update';\nconst useStyles = makeStyles({\n  container: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  welcome: {\n    textAlign: 'center',\n    height: '100%',\n    '& h2': {\n      fontSize: '92px',\n    },\n    '& h3': {\n      fontSize: '32px',\n      marginTop: '16px',\n    },\n  },\n});\nconst Setup = ({ handleOnboarding }) => {\n  const classes = useStyles();\n\n  const [step, setStep] = useState(null);\n  const [showSnack, setShowSnack] = useState(false);\n  const [snackMessage, setSnackMessage] = useState('');\n  const handleSnackClose = () => {\n    setShowSnack(() => false);\n    setSnackMessage('');\n  };\n\n  return (\n    <Container className={classes.container}>\n      {step === null && (\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"space-around\"\n          alignItems=\"center\"\n          spacing={3}\n          className={classes.welcome}\n        >\n          <Grid\n            item\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{ flex: 1 }}\n          >\n            <Typography variant=\"h2\">Welcome</Typography>\n            <Typography variant=\"h3\">Let's get you set up</Typography>\n          </Grid>\n          <Grid\n            item\n            container\n            alignItems=\"flex-start\"\n            justify=\"center\"\n            style={{ flex: 1 }}\n          >\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color=\"secondary\"\n              style={{ width: '190px', height: '65px', fontSize: '18px' }}\n              onClick={() => setStep(0)}\n            >\n              Get Started\n            </Button>\n          </Grid>\n        </Grid>\n      )}\n      {step === 0 && <PrinterType setStep={setStep} />}\n      {step === 1 && (\n        <NetworkType\n          setStep={setStep}\n          setShowSnack={setShowSnack}\n          setSnackMessage={setSnackMessage}\n          handleSnackClose={handleSnackClose}\n        />\n      )}\n      {step === 2 && (\n        <UserLevel handleOnboarding={handleOnboarding} setStep={setStep} />\n      )}\n      {step === 3 && (\n        <Update autoCheck={true} handleOnboarding={handleOnboarding} />\n      )}\n      <Snackbar\n        open={showSnack}\n        autoHideDuration={6000}\n        message={snackMessage}\n        onClose={handleSnackClose}\n      ></Snackbar>\n    </Container>\n  );\n};\n\nexport default Setup;\n","import React from 'react';\nimport { Tabs, Tab } from '@material-ui/core';\n\nimport './TabList.css';\nconst TabList = ({ tabList, handleTabClick, activeTab, disabledNav }) => {\n  return (\n    <Tabs value={activeTab} onChange={handleTabClick} centered>\n      {tabList.map((tab) => (\n        <Tab\n          style={{ height: '70px', fontSize: '20px', minWidth: '140px' }}\n          label={tab}\n          key={`tab - ${tab}`}\n          disabled={disabledNav}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nexport default TabList;\n","import React, { useState, useEffect } from 'react';\nimport { Container } from '@material-ui/core';\nimport { Button, LinearProgress } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPause, faPlay, faStop } from '@fortawesome/free-solid-svg-icons';\n\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: '10px',\n  },\n    textCenter: {\n      textAlign: 'center',\n      marginTop: '10px',\n    },\n});\n\nconst PrintStatus = ({ lastMessage, progressState, setDisabledNav, state }) => {\n  const classes = useStyles();\n  const [paused, setPaused] = useState(false);\n  const [value, setValue] = useState(0);\n\n  let sendGcode = function(gcode) {\n    fetch(`http://makerhub.local:8080/api/v1/send`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        gcode: gcode\n      })\n    });\n  }\n\n\n  useEffect(() => {\n    if(progressState.completion !== value) {\n      setValue(progressState.completion);\n      console.log(value);\n    }\n  }, [progressState]);\n\n  return (\n    <>\n      <Container>\n      <div className=\"print-btn-container\">\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => {\n            setPaused((prevState) => !prevState);\n            fetch(`http://makerhub.local:8080/api/v1/job`, {\n              method: \"PATCH\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({\n                file: state.files[state.file]\n              })\n            });\n          }}\n        >\n          {!paused ? (\n            <span>\n              <FontAwesomeIcon icon={faPause} /> Pause\n            </span>\n          ) : (\n            <span>\n              <FontAwesomeIcon icon={faPlay} /> Play\n            </span>\n          )}\n        </Button>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => {\n            fetch(`http://makerhub.local:8080/api/v1/job`, {\n              method: \"DELETE\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({\n                file: state.files[state.file]\n              })\n            });\n          }}\n        >\n          <span>\n            <FontAwesomeIcon icon={faStop} /> Stop\n          </span>\n        </Button>\n      </div>\n      <div className=\"print-status-bar\">\n        <LinearProgress variant=\"determinate\" value={value} />\n      </div>\n      </Container>\n    </>\n  );\n};\n\nexport default PrintStatus;\n","import React from 'react';\nimport { Container } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: '10px',\n  },\n});\n\nconst PrintComplete = ({ setStatus, progressState, jobState, setActiveMode }) => {\n  const classes = useStyles();\n  return (\n    <>\n    <Container className={classes.buttonContainer}>\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={() => {\n          fetch(`http://makerhub.local:8080/api/v1/job/${jobState.file.name}`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" }\n          });\n        }}\n        size=\"large\"\n      >\n        Print Again\n      </Button>\n      </Container>\n      <Container className={classes.buttonContainer}>\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        size=\"large\"\n        onClick={() => setStatus(0)}\n        style={{ marginTop: '12px' }}\n      >\n        Exit\n      </Button>\n      </Container>\n    </>\n  );\n};\n\nexport default PrintComplete;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Backdrop,\n  Button,\n  CircularProgress,\n  Drawer,\n  IconButton,\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Theme,\n} from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport moment from 'moment';\nimport { formatBytes } from '../../../Utility/helpers';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  drawerContainer: {\n    width: '100%',\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  item: {\n    height: '100px',\n    padding: '0 22px',\n  },\n  printButton: {\n    width: '120px',\n    height: '40px',\n    alignSelf: 'center',\n    marginTop: 'auto',\n    marginBottom: '100px',\n  },\n  summary: {\n    height: '56px',\n    cursor: 'pointer',\n    '&$selected, &$selected:hover': {\n      backgroundColor: theme.palette.secondary.main,\n    },\n  },\n  selected: {},\n  hover: {},\n  text: {\n    fontSize: '1.5em',\n    fontWeight: 'bold',\n  },\n}));\n\nconst FileManager = ({ drawerOpen, setDrawerOpen, fileLocation }) => {\n  const classes = useStyles();\n  const [selected, setSelected] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [files, setFiles] = useState([]);\n\n  useEffect(() => {\n    if (drawerOpen) {\n      setLoading(true);\n      //make api call to fetch files\n      //use fileLocation (usb or local) to determine which call to make\n      //TODO:REMOVE TIMEOUT\n      async function getFiles() {\n        // Default options are marked with *\n        let response = null;\n\n        if (fileLocation == 'local') {\n          response = await fetch(`http://makerhub.local:8080/api/v1/files`, {\n            method: 'GET',\n          });\n        } else {\n          await fetch('http://makerhub.local:8080/api/v1/usb/refresh', {\n            method: 'POST',\n          });\n          response = await fetch(\n            `http://makerhub.local:8080/api/v1/usb/files`,\n            { method: 'GET' }\n          );\n        }\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n      getFiles().then((data) => {\n        console.log(data);\n        setFiles(data.files);\n        setLoading(false);\n      });\n    }\n  }, [drawerOpen]);\n\n  const handleSelect = () => {\n    console.log(selected);\n    if (fileLocation == 'local') {\n      //call api to print file\n      fetch(`http://makerhub.local:8080/api/v1/job/${selected}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n      });\n    } else {\n      //call api to copy and print file\n      fetch(`http://makerhub.local:8080/api/v1/usb/copy/${selected}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n      }).then((data) => {\n        fetch(`http://makerhub.local:8080/api/v1/job/${selected}`, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n        });\n      });\n    }\n\n    setDrawerOpen(() => false);\n    //call function or swap to status screen\n    setSelected('');\n  };\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={drawerOpen}\n      onClose={() => setDrawerOpen(false)}\n      classes={{\n        paper: classes.drawerContainer,\n      }}\n    >\n      <div className={classes.header}>\n        <IconButton aria-label=\"back\" onClick={() => setDrawerOpen(false)}>\n          <ArrowBackIcon />\n        </IconButton>\n        <h2>{fileLocation.toUpperCase()}</h2>\n      </div>\n      {loading ? (\n        <Backdrop className={classes.backdrop} open={true}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      ) : (\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Size</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {files &&\n                files.map((file) => {\n                  return (\n                    <TableRow\n                      key={file.display}\n                      onClick={() => setSelected(file.display)}\n                      selected={selected === file.display}\n                      className={classes.summary}\n                      classes={{\n                        selected: classes.selected,\n                        hover: classes.hover,\n                      }}\n                    >\n                      <TableCell>{file.display}</TableCell>\n                      <TableCell>\n                        {moment(file.date).format('MM/DD/YYYY LTS')}\n                      </TableCell>\n                      <TableCell>{formatBytes(file.size)}</TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n      <Button\n        variant=\"contained\"\n        disabled={selected.length <= 0}\n        onClick={() => handleSelect()}\n        className={classes.printButton}\n      >\n        Print\n      </Button>\n    </Drawer>\n  );\n};\n\nexport default FileManager;\n","import React, { useState } from 'react';\nimport { Container, Grid } from '@material-ui/core';\nimport OptionCard from '../Common/OptionCard/OptionCard';\nimport PrintStatus from './PrintStatus/PrintStatus';\nimport PrintComplete from './PrintComplete/PrintComplete';\n\nimport FileManager from '../Common/FileManager/FileManager';\nimport './Print.css';\n\nimport { Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: '10px',\n  },\n  textCenter: {\n    textAlign: 'center',\n    marginTop: '10px',\n  },\n});\n\nconst Print = ({ lastMessage, setActiveMode, setDisabledNav }) => {\n  const classes = useStyles();\n  let [state, setState] = useState({\n    extruder: 0,\n    bed: 0,\n    connected: false,\n    feed: '1',\n    file: -1,\n    files: [],\n    printing: false,\n    progress: 0,\n    paused: false,\n  });\n  const [file, uploadedFile] = useState(false);\n  const [status, setStatus] = useState(null);\n  const [printState, setPrintState] = useState(null);\n  const [jobState, setJobState] = useState(null);\n  const [progressState, setProgressState] = useState(null);\n  const [fileDrawerOpen, setFileDrawerOpen] = useState(false);\n  const [fileLocation, setFileLocation] = useState('');\n\n  const fetchFiles = (location) => {\n    setFileLocation(location);\n    setFileDrawerOpen(true);\n  };\n\n  React.useEffect(() => {\n    if (\n      typeof lastMessage !== 'undefined' &&\n      lastMessage &&\n      typeof lastMessage.data !== 'undefined' &&\n      lastMessage.data.length > 1\n    ) {\n      let json = JSON.parse(lastMessage.data.substring(1));\n      console.log(json);\n      if (json[0].hasOwnProperty('current') && json[0].current.state) {\n        console.log(json[0].current.state);\n        setPrintState(json[0].current.state);\n        console.log(printState);\n      }\n\n      if (json[0].hasOwnProperty('current') && json[0].current.job) {\n        console.log(json[0].current.job);\n        setJobState(json[0].current.job);\n        console.log(jobState);\n      }\n\n      if (json[0].hasOwnProperty('current') && json[0].current.progress) {\n        setProgressState(json[0].current.progress);\n        console.log(progressState);\n      }\n    }\n  }, [lastMessage]);\n\n  return (\n    <Grid>\n      {progressState &&\n      jobState &&\n      jobState.file.name &&\n      progressState.completion < 100 ? (\n        <PrintStatus\n          lastMessage={lastMessage}\n          progressState={progressState}\n          setDisabledNav={setDisabledNav}\n          state={state}\n        />\n      ) : (\n        <Grid>\n          <OptionCard title=\"Local\" onClick={() => fetchFiles('local')} />\n          <OptionCard title=\"USB\" onClick={() => fetchFiles('usb')} />\n          <FileManager\n            setDrawerOpen={setFileDrawerOpen}\n            drawerOpen={fileDrawerOpen}\n            fileLocation={fileLocation}\n          />\n          <div className=\"Files\">\n            <label className=\"Files-Upload\">\n              <span>Upload</span>\n              <input\n                type=\"file\"\n                onChange={async (e) => {\n                  let data = new FormData();\n                  console.log(e.target.files);\n                  e.persist();\n                  data.append('file', e.target.files[0]);\n                  // Upload the file\n                  await fetch(\n                    `http://makerhub.local:8080/api/v1/files/${e.target.files[0].name}`,\n                    { method: 'POST', body: data }\n                  );\n                  // Print the file\n                  await fetch(\n                    `http://makerhub.local:8080/api/v1/job/${e.target.files[0].name}`,\n                    {\n                      method: 'POST',\n                      headers: { 'Content-Type': 'application/json' },\n                    }\n                  );\n                  state.printing = true;\n                  uploadedFile(true);\n                  setState({\n                    files: [...state.files, e.target.files[0].name],\n                    file: 0,\n                  });\n                }}\n              ></input>\n            </label>\n          </div>\n        </Grid>\n      )}\n      <div>\n        <Grid>\n          {printState &&\n            jobState &&\n            (jobState.file ? (\n              <div>\n                <div className={classes.textCenter}>\n                  {printState.text} {jobState.file.display}\n                </div>\n                <div className={classes.buttonContainer}>\n                  {progressState &&\n                    (progressState.completion == null ||\n                      progressState.completion == 100) &&\n                    jobState &&\n                    jobState.file.display && (\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => {\n                          fetch(\n                            `http://makerhub.local:8080/api/v1/job/${jobState.file.name}`,\n                            {\n                              method: 'POST',\n                              headers: { 'Content-Type': 'application/json' },\n                            }\n                          );\n                        }}\n                      >\n                        Print\n                      </Button>\n                    )}\n                </div>\n              </div>\n            ) : (\n              <span>Not Printing</span>\n            ))}\n        </Grid>\n      </div>\n    </Grid>\n  );\n};\n\nexport default Print;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Tab,\n  Tabs,\n  Typography,\n} from '@material-ui/core';\nimport {\n  ArrowDownward,\n  ArrowForward,\n  ArrowUpward,\n  ArrowBack,\n  Home,\n} from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './Moving.css';\n\nconst useStyles = makeStyles({\n  btnContainer: {\n    marginTop: '14px',\n    marginBottom: '28px',\n    textAlign: 'center',\n  },\n  centerBtns: {\n    '& button': {\n      margin: '0 12px',\n    },\n  },\n  tabs: {\n    '& button': {\n      textTransform: 'none',\n    },\n  },\n});\n\nconst units = [0.1, 1.0, 10];\n\nconst Moving = ({ position }) => {\n  const classes = useStyles();\n\n  const [unit, setUnit] = useState(1);\n\n  let sendGcode = function (gcode) {\n    fetch(`http://makerhub.local:8080/api/v1/send`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        gcode: gcode,\n      }),\n    });\n  };\n  const homeAxis = (axis) => {\n    //homing commands\n    // const x = 'G28 X\\nM114\\n';\n    // const y = 'G28 Y\\nM114\\n';\n    // const z = 'G28 Z\\nM114\\n';\n    fetch(`http://makerhub.local:8080/api/v1/send`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        gcode: `G28 ${axis}\\nM114\\n`,\n      }),\n    });\n  };\n\n  const moveAxis = (axis, negative) => {\n    //example move commands\n    // const x = 'G91\\nG0 X-10\\nM114\\n';\n    // const y = 'G91\\nG0 Y-1\\nM114\\n';\n    // const z = 'G91\\nG0 Z10\\nM114\\n';\n    const command = `${axis}${negative ? -units[unit] : units[unit]}`;\n    fetch(`http://makerhub.local:8080/api/v1/send`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        gcode: `M220 S200\\nG91\\nG0 ${command}\\nM220 S100\\nM114\\n`,\n      }),\n    });\n  };\n\n  return (\n    <Box style={{ textAlign: 'center' }}>\n      <Typography variant=\"h4\">Moving</Typography>\n      <Grid container justify=\"flex-start\" spacing={6} style={{ margin: 0 }}>\n        <Grid\n          item\n          xs={6}\n          style={{ display: 'flex', justifyContent: 'space-between' }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => {\n              sendGcode('G28\\nM114\\n');\n            }}\n          >\n            Home All <Home />\n          </Button>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => {\n              sendGcode('G29 T\\nM114\\n');\n            }}\n          >\n            Level Bed\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        justify=\"center\"\n        className={classes.btnContainer}\n        spacing={3}\n      >\n        <Grid item>\n          <Paper>\n            <Tabs\n              value={unit}\n              className={classes.tabs}\n              onChange={(e, val) => setUnit(val)}\n            >\n              {units.map((u) => (\n                <Tab label={`${u}mm`} key={u} />\n              ))}\n            </Tabs>\n          </Paper>\n        </Grid>\n        <Grid item container xs={10}>\n          <Grid\n            container\n            item\n            xs={6}\n            justify=\"center\"\n            alignItems=\"flex-start\"\n            spacing={1}\n          >\n            <Grid item xs={12} style={{ alignSelf: 'flex-start' }}>\n              <Typography variant=\"body1\">X</Typography>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => moveAxis('X', true)}\n              >\n                <ArrowBack />\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => homeAxis('X')}\n              >\n                <Home />\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => moveAxis('X', false)}\n              >\n                <ArrowForward />\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            item\n            xs\n            direction=\"column\"\n            alignItems=\"center\"\n            spacing={1}\n          >\n            <Grid item xs={12}>\n              <Typography variant=\"body1\">Y</Typography>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => moveAxis('Y', false)}\n              >\n                <ArrowUpward />\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => homeAxis('Y')}\n              >\n                <Home />\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => moveAxis('Y', true)}\n              >\n                <ArrowDownward />\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            item\n            xs\n            direction=\"column\"\n            alignItems=\"center\"\n            spacing={1}\n          >\n            <Grid item xs={12}>\n              <Typography variant=\"body1\">Z</Typography>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => moveAxis('Z', false)}\n              >\n                <ArrowUpward />\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => homeAxis('Z')}\n              >\n                <Home />\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => moveAxis('Z', true)}\n              >\n                <ArrowDownward />\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Moving;\n","import React from \"react\";\n\nimport \"./style.css\";\n\nexport default function Thermometer(props) {\n  return (\n    <div className=\"Thermometer\">\n      {props.label}\n      <div className=\"Thermometer-Container\">\n        <div className=\"Thermometer-Bulb-Container\"></div>\n        <div className=\"Thermometer-Indicator-Container\">\n          <div\n            className=\"Thermometer-Indicator\"\n            style={{\n              height: `${25 +\n                100 * ((props.value - props.min) / (props.max - props.min))}%`\n            }}\n          ></div>\n          <div className=\"Thermometer-Bulb\">\n            <span>{props.value}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Button,\n} from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport Thermometer from './thermometer';\nimport './Heating.css';\n\nconst Heating = ({ bed, extruder }) => {\n  let sendGcode = function (gcode) {\n    fetch(`http://makerhub.local:8080/api/v1/send`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        gcode: gcode,\n      }),\n    });\n  };\n\n  return (\n    <Accordion>\n      <AccordionSummary classes={{ content: 'accordion-style' }}>\n        <h3 style={{ margin: 0 }}>Heating</h3>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => {\n            sendGcode('M104 S0\\nM140 S0\\n');\n          }}\n        >\n          Cooldown All\n        </Button>\n        <ArrowForwardIosIcon />\n      </AccordionSummary>\n      <AccordionDetails>\n        <div className=\"control-heating-container\">\n          <h4>Nozzle</h4>\n          <div>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                sendGcode('M104 S220\\n');\n              }}\n            >\n              Preheat PLA\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                sendGcode('M104 S0\\n');\n              }}\n            >\n              Cooldown\n            </Button>\n          </div>\n          <h4>Bed</h4>\n          <div style={{ display: 'flex' }}>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                sendGcode('M140 S50\\n');\n              }}\n            >\n              Preheat PLA\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                sendGcode('M140 S0\\n');\n              }}\n            >\n              Cooldown\n            </Button>\n          </div>\n        </div>\n        <div className=\"monitor-heating-container\">\n          <div className=\"Guages\">\n            <div>\n              <Thermometer\n                label=\"Nozzle\"\n                value={extruder}\n                min={0}\n                max={400}\n              ></Thermometer>\n              {/*<input placeholder=\"N/A\"></input>*/}\n            </div>\n            <div>\n              <Thermometer\n                label=\"Bed\"\n                value={bed}\n                min={0}\n                max={150}\n              ></Thermometer>\n              {/*<input placeholder=\"N/A\"></input>*/}\n            </div>\n          </div>\n        </div>\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default Heating;\n","import React from 'react';\nimport Moving from './Moving/Moving';\nimport Heating from './Heating/Heating';\n\nimport './Control.css';\n\nconst Control = (lastMessage) => {\n  const [bed, setBed] = React.useState(0);\n  const [extruder, setExtruder] = React.useState(0);\n  const [position, setPosition] = React.useState({ x: 0, y: 0, z: 0 });\n\n  React.useEffect(() => {\n    if (\n      typeof lastMessage !== 'undefined' &&\n      typeof lastMessage.lastMessage !== 'undefined' &&\n      lastMessage.lastMessage &&\n      typeof lastMessage.lastMessage.data !== 'undefined' &&\n      lastMessage.lastMessage.data.length > 1\n    ) {\n      let json = JSON.parse(lastMessage.lastMessage.data.substring(1));\n      console.log(json);\n      if (json[0].hasOwnProperty('current') && json[0].current.temps[0]) {\n        if (json[0].current.temps[0]) {\n          let temps = json[0].current.temps[0];\n          setExtruder(parseInt(temps.tool0.actual));\n          setBed(parseInt(temps.bed.actual));\n        }\n      }\n\n      if (\n        json[0].hasOwnProperty('event') &&\n        json[0].event.hasOwnProperty('payload')\n      ) {\n        if (json[0].event.payload) {\n          setPosition({\n            x: json[0].event.payload.x,\n            y: json[0].event.payload.y,\n            z: json[0].event.payload.z,\n          });\n        }\n      }\n    }\n  }, [lastMessage]);\n\n  return (\n    <>\n      <Moving position={position} />\n      <Heating extruder={extruder} bed={bed} />\n    </>\n  );\n};\n\nexport default Control;\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nconst About = () => {\n  return (\n    <Accordion>\n      <AccordionSummary classes={{ content: 'accordion-style' }}>\n        <h3 style={{ margin: '0' }}>About</h3>\n        <ArrowForwardIosIcon />\n      </AccordionSummary>\n      <AccordionDetails>\n        <div>\n          <h3>List Hardware Stats</h3>\n          <h3>Firmware Version</h3>\n        </div>\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nconst Settings = () => {\n  return (\n    <div>\n      <Grid xs={3}>Network</Grid>\n      <Grid xs={3}>Printer Type</Grid>\n      <Grid xs={3}> User Type</Grid>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React, { useState } from 'react';\nimport {\n  Container,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Update from './MenuTabs/Update';\nimport About from './MenuTabs/About';\nimport Settings from './MenuTabs/Settings';\nconst useStyles = makeStyles({\n  componentContainer: {\n    display: 'flex',\n    flex: 1,\n  },\n  drawerContainer: {\n    width: '100%',\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  item: {\n    height: '100px',\n    padding: '0 22px',\n  },\n  text: {\n    fontSize: '1.5em',\n    fontWeight: 'bold',\n  },\n});\n\nconst MenuArray = [\n  { name: 'Tutorials', component: null },\n  { name: 'Settings', component: <Settings /> },\n  { name: 'Manage Storage', component: null },\n  { name: 'Update', component: <Update /> },\n  { name: 'Reset', component: null },\n  { name: 'About', component: <About /> },\n];\n\nconst Menu = ({ setActiveMode }) => {\n  const classes = useStyles();\n\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [activeComponent, setActiveComponent] = useState({});\n  // const resetMode = () => {\n  //   setActiveMode(null);\n  // };\n  const handleDrawer = (item) => {\n    //call setActiveComponent\n    setActiveComponent(item);\n    setDrawerOpen(true);\n  };\n  return (\n    <div>\n      <List>\n        {MenuArray.map((item) => {\n          return (\n            <React.Fragment key={`${item.name}-item`}>\n              <ListItem\n                button\n                onClick={() => handleDrawer(item)}\n                className={classes.item}\n              >\n                <ListItemText\n                  primary={\n                    <Typography className={classes.text}>\n                      {item.name}\n                    </Typography>\n                  }\n                />\n                <ArrowForwardIosIcon />\n              </ListItem>\n              <Divider />\n            </React.Fragment>\n          );\n        })}\n      </List>\n      <Drawer\n        anchor=\"right\"\n        open={drawerOpen}\n        onClose={() => setDrawerOpen(false)}\n        classes={{\n          paper: classes.drawerContainer,\n        }}\n      >\n        <div className={classes.header}>\n          <IconButton aria-label=\"back\" onClick={() => setDrawerOpen(false)}>\n            <ArrowBackIcon />\n          </IconButton>\n          <h2>{activeComponent.name}</h2>\n        </div>\n        <Container className={classes.componentContainer}>\n          {activeComponent.component}\n        </Container>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React, { useState } from 'react';\nimport ComingSoon from '../Common/ComingSoon';\nimport Moving from '../Control/Moving/Moving';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nconst Tune = () => {\n  const [offset, setOffset] = useState(0);\n\n  let sendGcode = function (gcode) {\n    fetch(`http://makerhub.local:8080/api/v1/send`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        gcode: gcode,\n      }),\n    });\n  };\n  let position = { x: 0, y: 0, z: 0 };\n\n  return (\n    <div>\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={() => {\n          sendGcode('M851 Z0.00\\nM500\\nM501\\nG28\\nG90\\nM211 S0\\nG1 Z0\\n');\n        }}\n      >\n        Start Z Offset <FontAwesomeIcon />\n      </Button>\n      <hr />\n      <ButtonGroup aria-label=\"outlined primary button group\">\n        <Button\n          size=\"large\"\n          onClick={() => {\n            sendGcode('G91\\nG0 Z-1\\nM114\\n');\n            setOffset(offset - 1);\n            console.log(offset);\n          }}\n        >\n          -1\n        </Button>\n        <Button\n          size=\"large\"\n          onClick={() => {\n            sendGcode('G91\\nG0 Z-0.5\\nM114\\n');\n            setOffset(offset - 0.5);\n            console.log(offset);\n          }}\n        >\n          -0.5\n        </Button>\n        <Button\n          size=\"large\"\n          onClick={() => {\n            sendGcode('G91\\nG0 Z-0.1\\nM114\\n');\n            setOffset(offset - 0.1);\n            console.log(offset);\n          }}\n        >\n          -0.1\n        </Button>\n        <Button\n          size=\"large\"\n          onClick={() => {\n            sendGcode('G91\\nG0 Z-0.01\\nM114\\n');\n            setOffset(offset - 0.01);\n            console.log(offset);\n          }}\n        >\n          -0.01\n        </Button>\n        <Button\n          size=\"large\"\n          onClick={() => {\n            sendGcode('G90\\nG1 Z0\\n');\n            setOffset(0);\n            console.log(offset);\n          }}\n        >\n          0\n        </Button>\n        <Button\n          size=\"large\"\n          onClick={() => {\n            sendGcode('G91\\nG0 Z0.01\\nM114\\n');\n            setOffset(offset + 0.01);\n            console.log(offset);\n          }}\n        >\n          +0.01\n        </Button>\n        <Button\n          size=\"large\"\n          onClick={() => {\n            sendGcode('G91\\nG0 Z0.1\\nM114\\n');\n            setOffset(offset + 0.1);\n            console.log(offset);\n          }}\n        >\n          +0.1\n        </Button>\n        <Button\n          size=\"large\"\n          onClick={() => {\n            sendGcode('G91\\nG0 Z0.5\\nM114\\n');\n            setOffset(offset + 0.5);\n            console.log(offset);\n          }}\n        >\n          +0.5\n        </Button>\n        <Button\n          size=\"large\"\n          onClick={() => {\n            sendGcode('G91\\nG0 Z1\\nM114\\n');\n            setOffset(offset + 1);\n            console.log(offset);\n          }}\n        >\n          +1\n        </Button>\n      </ButtonGroup>\n      <hr />\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={() => {\n          sendGcode('G90\\nM851 Z' + offset + '\\nM211 S1\\nM500\\nM501\\nG28\\n');\n          console.log(offset);\n        }}\n      >\n        Complete Z Offset <FontAwesomeIcon />\n      </Button>\n    </div>\n  );\n};\n\nexport default Tune;\n","import React, { useState } from 'react';\nimport { AppBar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TabList from '../Common/Tabs/TabList';\nimport Print from '../Print/Print';\nimport Control from '../Control/Control';\nimport Menu from '../Menu/Menu';\nimport Tune from '../Tune/Tune';\n\nimport './Home.css';\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n}));\nconst tabList = ['Print', 'Control', 'Tune', 'Menu'];\nconst Home = ({ lastMessage, mode, setActiveMode }) => {\n  const classes = useStyles();\n  const [activeTab, setActiveTab] = useState('Print');\n  const [disabledNav, setDisabledNav] = useState(false);\n\n  const handleTabClick = (event, val) => {\n    setActiveTab(tabList[val]);\n  };\n  const Components = {\n    Print: (\n      <Print\n        lastMessage={lastMessage}\n        setActiveMode={setActiveMode}\n        setDisabledNav={setDisabledNav}\n      />\n    ),\n    Control: <Control lastMessage={lastMessage} />,\n    Menu: <Menu setActiveMode={setActiveMode} />,\n    Tune: <Tune />,\n  };\n  return (\n    <div className=\"home-container\">\n      <AppBar\n        position=\"fixed\"\n        color=\"primary\"\n        className={classes.appBar}\n        disabled={true}\n      >\n        <TabList\n          tabList={tabList}\n          handleTabClick={handleTabClick}\n          activeTab={tabList.indexOf(activeTab)}\n          disabledNav={disabledNav}\n        />\n      </AppBar>\n      <div className=\"component-container\">{Components[activeTab]}</div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useMemo, useRef } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Setup from './components/Setup/Setup';\nimport Home from './components/Home/Home';\nimport {\n  createMuiTheme,\n  MuiThemeProvider,\n  // makeStyles,\n} from '@material-ui/core/styles';\nimport { Box, CircularProgress } from '@material-ui/core';\nimport { getStorage } from './Utility/helpers';\nimport { useMountEffect } from './Utility/useMountEffect';\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: 'rgb(42, 57, 131)',\n    },\n    secondary: {\n      main: '#CD6930',\n    },\n    type: 'dark',\n  },\n});\n// const useStyles = makeStyles({});\nconst App = () => {\n  // const classes = useStyles();\n\n  const [mode, setActiveMode] = useState(null);\n  const [onboarded, setOnboarded] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useMountEffect(() => {\n    const isOnboarded = getStorage('onboarded');\n    const userMode = getStorage('userMode');\n    setOnboarded(isOnboarded);\n    setActiveMode(userMode);\n    setLoading(false);\n  });\n\n  const handleOnboarding = (val) => {\n    setActiveMode(val);\n    setOnboarded(true);\n  };\n  const [socketUrl, setSocketUrl] = useState(\n    'ws://makerhub.local:9000/sockjs/718/qerksnvm/websocket'\n  );\n  const messageHistory = useRef([]);\n\n  const { sendMessage, lastMessage, readyState } = useWebSocket(socketUrl, {\n    //Will attempt to reconnect on all close events, such as server shutting down\n    shouldReconnect: (closeEvent) => true,\n    reconnectAttempts: 999999, // default: 20\n    reconnectInterval: 0, // default: 5000\n    onOpen: () => {\n      console.log('socket opened');\n    },\n    onError: () => {\n      console.log('socket error');\n    },\n    onClose: () => {\n      // force reconnect somehow like sending message?\n      console.log('socket closed');\n    },\n  });\n\n  messageHistory.current = useMemo(\n    () => messageHistory.current.concat(lastMessage),\n    [lastMessage]\n  );\n\n  const connectionStatus = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\n  }[readyState];\n\n  React.useEffect(() => {\n    console.log(connectionStatus);\n    if (connectionStatus == 'Open') {\n      sendMessage('{ \"auth\": \"E7BFE47F2DBF489B9E78A3D9D042874A\" }');\n      sendMessage('{ \"current\": \"state\" }');\n    }\n  }, [connectionStatus]);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box height=\"100vh\" display=\"flex\" flexDirection=\"column\">\n        {loading ? (\n          <CircularProgress\n            style={{\n              alignSelf: 'center',\n              marginTop: 'auto',\n              marginBottom: 'auto',\n            }}\n          />\n        ) : !onboarded ? (\n          <Setup handleOnboarding={handleOnboarding} />\n        ) : (\n          <Home\n            mode={mode}\n            lastMessage={lastMessage}\n            setActiveMode={setActiveMode}\n          />\n        )}\n      </Box>\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}