{"version":3,"sources":["components/thermometer/index.js","App.js","serviceWorker.js","index.js"],"names":["Thermometer","props","className","label","style","height","value","min","max","ws","WebSocket","App","state","extruder","bed","ports","lines","port","baud","connected","feed","file","files","printing","progress","paused","recieved","data","json","channel","this","setState","indexOf","temp","split","parseInt","find","elem","substring","sendGcode","gcode","fetch","method","headers","body","JSON","stringify","statusReq","status","path","filesReq","onmessage","msg","a","async","length","parse","console","log","hasOwnProperty","current","logs","completion","to","onChange","e","target","disabled","onFocus","res","hidden","map","i","key","defaultValue","onClick","setTimeout","type","FormData","persist","append","name","color","background","rem","Array","from","splice","icon","faArrowUp","faArrowLeft","faArrowRight","faArrowDown","faLongArrowAltUp","faLongArrowAltDown","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2cd37888.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./style.css\";\n\nexport default function Thermometer(props) {\n  return (\n    <div className=\"Thermometer\">\n      {props.label}\n      <div className=\"Thermometer-Container\">\n        <div className=\"Thermometer-Bulb-Container\"></div>\n        <div className=\"Thermometer-Indicator-Container\">\n          <div\n            className=\"Thermometer-Indicator\"\n            style={{\n              height: `${25 +\n                100 * ((props.value - props.min) / (props.max - props.min))}%`\n            }}\n          ></div>\n          <div className=\"Thermometer-Bulb\">\n            <span>{props.value}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Thermometer from \"./components/thermometer\";\nimport Console from \"./components/console\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowUp,\n  faArrowDown,\n  faArrowLeft,\n  faArrowRight,\n  faLongArrowAltUp,\n  faLongArrowAltDown\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlet ws = new WebSocket(\"ws://makerhub.local:9000/sockjs/031/ata1s5hb/websocket\");\n\nexport default class App extends React.Component {\n  state = {\n    extruder: 0,\n    bed: 0,\n    ports: [],\n    lines: [],\n    port: \"0\",\n    baud: 250000,\n    connected: false,\n    feed: \"1\",\n    file: -1,\n    files: [],\n    printing: false,\n    progress: 0,\n    paused: false\n  };\n\n  recieved = function(data) {\n    let json = data;\n    if (json.channel === \"serial\") {\n      if (this.state.progress !== json.progress) {\n        this.setState({ progress: json.progress });\n      }\n      if (json.data.indexOf(\"T:\") !== -1) {\n        let temp = json.data.split(\" \");\n        this.setState({\n          extruder: parseInt(\n            temp.find(elem => elem.indexOf(\"T:\") !== -1).substring(2)\n          ),\n          bed: parseInt(\n            temp.find(elem => elem.indexOf(\"B:\") !== -1).substring(2)\n          )\n        });\n      }\n    } else if (json.channel === \"print\") {\n      if (json.data === \"done\") {\n        this.setState({ printing: false });\n      }\n    }\n  }\n\n  sendGcode = function(gcode) {\n    fetch(`http://makerhub.local:8080/api/v1/send`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        gcode: gcode\n      })\n    });\n  }\n\n\n  async componentDidMount() {\n    let statusReq = await fetch(\"http://makerhub.local:8080/api/v1/status\");\n    let status = await statusReq.json();\n    let file = null;\n    if (status.port) {\n      if (status.progress) {\n        file = status.progress.file;\n        this.setState({\n          connected: true,\n          port: status.port.path,\n          ports: [status.port.path],\n          baud: status.port.baud,\n          printing: true\n        });\n      } else {\n        this.setState({\n          connected: true,\n          port: status.port.path,\n          ports: [status.port.path],\n          baud: status.port.baud\n        });\n      }\n    }\n    let filesReq = await fetch(\"http://makerhub.local:8080/api/v1/files\");\n    let json = await filesReq.json();\n    this.setState({\n      files: json.files,\n      file: file !== null ? json.files.indexOf(file) : -1\n    });\n    //this.sendGcode(\"M155 S10\\n\");\n    ws.onmessage = async msg => {\n      if(msg.data.length > 1) {\n        let json = JSON.parse(msg.data.substring(1));\n        console.log(json);\n        if (json[0].hasOwnProperty('current') && json[0].current.logs[0]) {\n          if (this.state.progress !== json[0].current.progress.completion) {\n            this.setState({ progress: json[0].current.progress.completion });\n          }\n          if (json[0].current.logs[0].indexOf(\"T:\") !== -1) {\n            let temp = json[0].current.logs[0].split(\" \");\n            this.setState({\n              extruder: parseInt(\n                temp.find(elem => elem.indexOf(\"T:\") !== -1).substring(2)\n              ),\n              bed: parseInt(\n                temp.find(elem => elem.indexOf(\"B:\") !== -1).substring(2)\n              )\n            });\n          }\n        } else if (json[0].current.progress.completion === 100) {\n            this.setState({ printing: false });\n        }\n      }\n    };\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <header className=\"App-Header\">\n            <NavLink className=\"Makerhub-Header\" to=\"/\">\n              <h2>makerhub</h2>\n            </NavLink>\n            <div className=\"Header-Divider\"></div>\n            <nav className=\"App-Nav\">\n              <ul>\n                <li>\n                  <NavLink className=\"Nav-Link\" to=\"/\">\n                    Status\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink className=\"Nav-Link\" to=\"/console\">\n                    Console\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink className=\"Nav-Link\" to=\"/camera\">\n                    Camera\n                  </NavLink>\n                </li>\n              </ul>\n            </nav>\n          </header>\n          <div className=\"App-Content\">\n            <aside className=\"App-Sidebar\">\n              <div className=\"Connection\">\n                <label>\n                  Port\n                  <select\n                    onChange={e => this.setState({ port: e.target.value })}\n                    disabled={this.state.connected}\n                    value={this.state.port}\n                    onFocus={async () => {\n                      let res = await fetch(\n                        \"http://makerhub.local:8080/api/v1/serial-ports\"\n                      );\n                      let json = await res.json();\n                      this.setState({ ports: json.ports });\n                    }}\n                  >\n                    <option value=\"0\" disabled hidden>\n                      Select a Port\n                    </option>\n                    {this.state.ports.length === 0 ? (\n                      <option value=\"na\" disabled>\n                        No Available Ports\n                      </option>\n                    ) : null}\n                    {this.state.ports.map((port, i) => (\n                      <option key={i} value={port}>\n                        {port}\n                      </option>\n                    ))}\n                  </select>\n                </label>\n                <label>\n                  Baud\n                  <select\n                    onChange={e =>\n                      this.setState({ baud: parseInt(e.target.value) })\n                    }\n                    disabled={this.state.connected}\n                    defaultValue={this.state.baud}\n                  >\n                    <option value={19200}>19200</option>\n                    <option value={38400}>38400</option>\n                    <option value={57600}>57600</option>\n                    <option value={115200}>115200</option>\n                    <option value={250000}>250000</option>\n                  </select>\n                </label>\n                <button\n                  disabled={this.state.port === \"0\"}\n                  className={this.state.connected ? \"Disconnect\" : \"Connect\"}\n                  onClick={async () => {\n                    if (!this.state.connected) {\n                      await fetch(\n                        \"http://makerhub.local:8080/api/v1/serial-ports\",\n                        {\n                          method: \"POST\",\n                          headers: { \"Content-Type\": \"application/json\" },\n                          body: JSON.stringify({\n                            port: this.state.port,\n                            baud: this.state.baud\n                          })\n                        }\n                      );\n                      setTimeout(() => this.sendGcode(\"M155 S10\\n\"), 3000);\n                      this.setState({ connected: true });\n                    } else {\n                      await fetch(\n                        \"http://makerhub.local:8080/api/v1/serial-ports\",\n                        {\n                          method: \"DELETE\"\n                        }\n                      );\n                      this.setState({ connected: false, printing: false });\n                    }\n                  }}\n                >\n                  {this.state.connected ? \"Disconnect\" : \"Connect\"}\n                </button>\n              </div>\n              <div className=\"Aside-Divider\"></div>\n              <div className=\"Files\">\n                <label className=\"Files-Upload\">\n                  <span>Upload</span>\n                  <input\n                    type=\"file\"\n                    onChange={async e => {\n                      let data = new FormData();\n                      console.log(e.target.files);\n                      e.persist();\n                      data.append(\"file\", e.target.files[0]);\n                      await fetch(\n                        `http://makerhub.local:8080/api/v1/files/${e.target.files[0].name}`,\n                        { method: \"POST\", body: data }\n                      );\n                      this.setState({\n                        files: [...this.state.files, e.target.files[0].name]\n                      });\n                    }}\n                  ></input>\n                </label>\n                <ul className=\"Files-List\">\n                  {this.state.files.map((file, i) => (\n                    <li key={i}>\n                      <button\n                        style={{\n                          color:\n                            this.state.printing && this.state.file === i\n                              ? \"#ffffff\"\n                              : \"\",\n                          background:\n                            this.state.printing && this.state.file === i\n                              ? `linear-gradient(to right, #1f79f1 ${this.state.progress}%, #757575 ${this.state.progress}%)`\n                              : \"\"\n                        }}\n                        disabled={this.state.printing}\n                        onClick={() => this.setState({ file: i })}\n                        className={this.state.file === i ? \"Active-File\" : \"\"}\n                      >\n                        <span>\n                          {this.state.printing && this.state.file === i\n                            ? `${this.state.progress}%`\n                            : file}\n                        </span>\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n                <ul className=\"Files-Actions\">\n                  <li>\n                    <button\n                      onClick={async () => {\n                        if (this.state.printing) {\n                          fetch(`http://makerhub.local:8080/api/v1/job`, {\n                            method: \"PATCH\",\n                            headers: { \"Content-Type\": \"application/json\" },\n                            body: JSON.stringify({\n                              file: this.state.files[this.state.file]\n                            })\n                          });\n                          if (this.state.paused) {\n                            this.setState({ paused: false });\n                          } else {\n                            this.setState({ paused: true });\n                          }\n                        } else {\n                          fetch(`http://makerhub.local:8080/api/v1/job/${this.state.files[this.state.file]}`, {\n                            method: \"POST\",\n                            headers: { \"Content-Type\": \"application/json\" }\n                          });\n                          this.setState({ printing: true });\n                        }\n                      }}\n                      disabled={this.state.file === -1}\n                      className=\"Files-Print\"\n                    >\n                      {this.state.printing\n                        ? this.state.paused\n                          ? \"Resume\"\n                          : \"Pause\"\n                        : \"Print\"}\n                    </button>\n                  </li>\n                  <li>\n                    <button\n                      disabled={this.state.file === -1}\n                      className=\"Files-Delete\"\n                      onClick={async () => {\n                        if (this.state.printing) {\n                          this.sendGcode(\"M77\\n\");\n                          this.setState({ paused: false, printing: false });\n                        } else {\n                          await fetch(\n                            `http://makerhub.local:8080/api/v1/files/${\n                              this.state.files[this.state.file]\n                            }`,\n                            {\n                              method: \"DELETE\"\n                            }\n                          );\n                          let rem = Array.from(this.state.files);\n                          rem.splice(this.state.file, 1);\n                          this.setState({\n                            files: rem,\n                            file: -1\n                          });\n                        }\n                      }}\n                    >\n                      {this.state.printing ? \"Cancel\" : \"Delete\"}\n                    </button>\n                  </li>\n                </ul>\n                {/*\n            <label>\n              Upload\n              <input type=\"file\"></input>\n            </label>\n            */}\n              </div>\n            </aside>\n            <Switch>\n              <Route path=\"/camera\"></Route>\n              <Route path=\"/console\">\n                {/*\n                <div className=\"Console-Container\">\n                  <Console lines={[\"a\", \"b\", \"c\"]}></Console>\n                </div>*/}\n              </Route>\n              <Route path=\"/\">\n                <div className=\"Printer-Status\">\n                  <div className=\"Jog\">\n                    <div className=\"Controls\">\n                      <div className=\"Controls-XY\">\n                        <button\n                          disabled={\n                            !this.state.connected || this.state.printing\n                          }\n                          onClick={() => {\n                            this.sendGcode(\"G91\\nG0 Y\" + this.state.feed + \"\\n\");\n                          }}\n                        >\n                          <FontAwesomeIcon icon={faArrowUp}></FontAwesomeIcon>\n                        </button>\n                        <div className=\"Controls-X\">\n                          <button\n                            disabled={\n                              !this.state.connected || this.state.printing\n                            }\n                            onClick={() => {\n                              this.sendGcode(\"G91\\nG0 X-\" + this.state.feed + \"\\n\");\n                            }}\n                          >\n                            <FontAwesomeIcon\n                              icon={faArrowLeft}\n                            ></FontAwesomeIcon>\n                          </button>\n                          <button\n                            disabled={\n                              !this.state.connected || this.state.printing\n                            }\n                            onClick={() => {\n                              this.sendGcode(\"G91\\nG0 X\" + this.state.feed + \"\\n\");\n                            }}\n                          >\n                            <FontAwesomeIcon\n                              icon={faArrowRight}\n                            ></FontAwesomeIcon>\n                          </button>\n                        </div>\n                        <button\n                          disabled={\n                            !this.state.connected || this.state.printing\n                          }\n                          onClick={() => {\n                            this.sendGcode(\"G91\\nG0 Y-\" + this.state.feed + \"\\n\");\n                          }}\n                        >\n                          <FontAwesomeIcon icon={faArrowDown}></FontAwesomeIcon>\n                        </button>\n                      </div>\n                      <div className=\"Controls-Z\">\n                        <button\n                          disabled={\n                            !this.state.connected || this.state.printing\n                          }\n                          onClick={() => {\n                            this.sendGcode(\"G91\\nG0 Z\" + this.state.feed + \"\\n\");\n                          }}\n                        >\n                          <FontAwesomeIcon\n                            icon={faLongArrowAltUp}\n                          ></FontAwesomeIcon>\n                        </button>\n                        <button\n                          disabled={\n                            !this.state.connected || this.state.printing\n                          }\n                          onClick={() => {\n                            this.sendGcode(\"G91\\nG0 Z-\" + this.state.feed + \"\\n\");\n                          }}\n                        >\n                          <FontAwesomeIcon\n                            icon={faLongArrowAltDown}\n                          ></FontAwesomeIcon>\n                        </button>\n                      </div>\n                    </div>\n                    <div className=\"Controls-Feed\">\n                      <button\n                        onClick={() => this.setState({ feed: \"0.1\" })}\n                        className={\n                          this.state.feed === \"0.1\" ? \"Feed-Active\" : \"\"\n                        }\n                      >\n                        0.1\n                      </button>\n                      <button\n                        onClick={() => this.setState({ feed: \"1\" })}\n                        className={this.state.feed === \"1\" ? \"Feed-Active\" : \"\"}\n                      >\n                        1\n                      </button>\n                      <button\n                        onClick={() => this.setState({ feed: \"10\" })}\n                        className={\n                          this.state.feed === \"10\" ? \"Feed-Active\" : \"\"\n                        }\n                      >\n                        10\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"Guages\">\n                    <div>\n                      <Thermometer\n                        label=\"Bed\"\n                        value={this.state.bed}\n                        min={0}\n                        max={150}\n                      ></Thermometer>\n                      {/*<input placeholder=\"N/A\"></input>*/}\n                    </div>\n                    <div>\n                      <Thermometer\n                        label=\"Extruder\"\n                        value={this.state.extruder}\n                        min={0}\n                        max={400}\n                      ></Thermometer>\n                      {/*<input placeholder=\"N/A\"></input>*/}\n                    </div>\n                  </div>\n                </div>\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}