{"version":3,"sources":["components/Common/OptionCard/OptionCard.js","Utility/helpers.js","components/Setup/PrinterType/PrinterType.js","components/Setup/NetworkType/NetworkSettings.js","Utility/useMountEffect.js","components/Setup/NetworkType/WifiConnect.js","components/Setup/NetworkType/HotspotConnect.js","components/Setup/UserLevel/UserLevel.js","components/Setup/NetworkType/NetworkType.js","components/Menu/MenuTabs/Update.js","components/Tutorials/TutorialLayouts.js","components/Tutorials/TutorialDefinitions.js","components/Tutorials/TutorialThermometer/TutorialThermometer.js","components/Tutorials/GCodeBuilder.js","TempContext.js","components/Tutorials/Tutorial/Tutorial.js","components/Setup/NetworkSelect/NetworkSelect.js","components/Setup/Setup.js","components/Common/Tabs/TabList.js","components/Print/PrintStatus/PrintStatus.js","components/Common/FileManager/FileManager.js","components/Print/Print.js","components/Control/Moving/Moving.js","components/Control/Heating/Heating.js","components/Control/StepperDisable/StepperDisable.js","components/Control/Control.js","components/Menu/MenuTabs/Settings.js","components/Menu/MenuTabs/Tutorials.js","components/Menu/MenuTabs/ResetPrinter.js","components/Menu/Menu.js","components/Tutorials/Tutorial/TutorialButton.js","components/Tune/Tune.js","components/Home/Home.js","App.js","serviceWorker.js","index.js","img/mm-print.svg"],"names":["useStyles","makeStyles","card","margin","border","textAlign","OptionCard","title","description","onClick","classes","Card","className","CardActionArea","CardContent","Typography","variant","setStorage","key","val","localStorage","setItem","getStorage","getItem","header","fontSize","PrinterType","setStep","handleClick","backdrop","zIndex","color","buttonContainer","display","width","justifyContent","marginTop","connecting","flexDirection","alignItems","marginBottom","container","item","padding","props","settingsScreen","keyboard","position","bottom","left","right","NetworkSettings","setShowSnack","setSnackMessage","useState","expanded","setExpanded","layout","setLayout","input","setInput","setConnecting","rebootRequired","setRebootRequired","useRef","old_name","keyBoardOff","handleSubmit","a","host_name","hostname","action","lastHostname","ssid_name","ssid","fetch","method","headers","body","JSON","stringify","json","then","data","status","includes","setTimeout","Grid","spacing","direction","style","paddingTop","xs","TextField","id","label","type","value","onFocus","onChange","event","target","current","Button","button","marginLeft","aria-label","endIcon","ArrowForward","Backdrop","open","CircularProgress","keyboardRef","r","layoutName","default","shift","symbol","number","console","log","onKeyPress","useMountEffect","fun","useEffect","accordion","alignSelf","height","wifiList","overflow","borderRadius","WifiConnect","setConnectWifi","handleSnackClose","onGoBack","setStage","wifiArr","setWifiArr","loading","setLoading","maskPassword","setMaskPassword","response","getNetworks","networks","filter","obj","pos","arr","map","mapObj","indexOf","setNetwork","password","passwordToggle","onChangeInput","IconButton","src","imgPrint","top","List","network","Accordion","AccordionSummary","content","ListItem","panel","AccordionDetails","InputProps","endAdornment","InputAdornment","length","HotspotConnect","UserLevel","handleOnboarding","networkType","checker","flex","updateContainer","Update","autoCheck","firstBoot","checking","setChecking","text","setText","updateChecked","setUpdateChecked","updates","setUpdates","checkDisabled","setCheckDisabled","handleCheck","checkUpdates","update","justify","downloadUpdates","updated","disabled","TutorialLayouts","ButtonSingle","AxisManipulation","ButtonMulti","ThermalGate","DualThermalGate","TutorialDefinitions","firstRun","userVisable","name","exitActions","params","steps","buttonText","buttonActions","axisX","axisY","axisZ","buttons","minimumTemp","gateText","minimumExtruderTemp","minimumBedTemp","blTouchCalibration","bedLevelCornerCalibration","loadFilament","unloadFilament","printTestCube","TutorialThermometer","min","max","GCodeBuilder","this","_actions","retString","i","command","push","GSetZProbeOffset","offset","GMoveToOrigin","x","y","z","GSetSoftwareEndstops","enabled","GLinearMove","doX","doY","doZ","xPos","yPos","zPos","TempContext","React","createContext","bedTarget","nozzleTarget","bed","nozzle","setBedTarget","temp","setNozzleTarget","setBed","setNozzle","steppersEnabled","setSteppersEnabled","Tutorial","evTutorialClose","onTutorialClose","state","tutorialId","tutorialName","tutorialReady","currentStep","exitWarning","tutorial","setState","prevProps","processButtonActions","reason","axis","amount","toLowerCase","codeBuilder","addCommand","sendGcode","build","context","GSetBedTemp","GSetExtruderTemp","find","b","gcode","actions","actionContinue","attemptHome","attemptBlLevel","attemptXYMoveTo","actionJumpTo","attemptSaveZOffset","attemptSetExtruderTemp","attemptSetBedTemp","attemptTestPrint","attemptZOffsetStart","step","tutorialWindow","AppBar","paddingLeft","Container","tutorialContainer","tutorialHeading","tutorialCloseButton","attemptCloseTutorial","CloseSharp","renderTutorialPage","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","attemptExitActions","autoFocus","alignContent","layoutSingleGrid","layoutSingleGridTop","layoutSingleGridText","split","textSegment","tutorialText","layoutSingleGridButton","tutorialButton","tutorialButtonPressed","layoutSingleGridAxisControl","renderAxisControl","layoutSingleGridThermalControl","thermoLabel","ArrowUpward","axisButton","attemptAxisMove","ArrowDownward","Component","contextType","withStyles","theme","backgroundColor","float","marginRight","paddingRight","flexGrow","textTransform","NetworkSelect","stage","enableInternet","selectedInterface","enableHotspot","setNewType","renderHeader","Language","SettingsInputHdmi","complete","SettingsRemote","welcome","Setup","showSnack","snackMessage","size","Snackbar","autoHideDuration","message","onClose","TabList","tabList","handleTabClick","activeTab","disabledNav","Tabs","centered","tab","Tab","minWidth","textCenter","BorderLinearProgress","root","colorPrimary","bar","LinearProgress","PrintStatus","lastMessage","progressState","setDisabledNav","statusText","fileName","paused","setPaused","setValue","completion","toFixed","Consumer","transform","prevState","file","files","startIcon","PlayArrow","Pause","Stop","drawerContainer","modal","modalContainer","printButton","sliceDropdown","slider","maxWidth","summary","cursor","palette","secondary","main","selected","hover","fontWeight","fileLocation","setProfileSettings","slicer","metadata","preferred_quality_type","settings","resolution","children","layer_height","default_value","speed","speed_print","speed_infill","speed_wall","speed_wall_0","speed_wall_x","travel","retraction_enable","material","default_material_print_temperature","material_print_temperature","material_print_temperature_layer_0","material_initial_print_temperature","material_final_print_temperature","default_material_bed_temperature","material_bed_temperature","FileManager","drawerOpen","setDrawerOpen","setSelected","setFiles","showModal","setShowModal","filament","setFilament","quality","setQuality","infill","setInfill","vase","setVase","supports","setSupports","showTooltip","setShowTooltip","setSettings","getFiles","getSettings","onboardSettings","support","support_enable","infill_sparse_density","handleSelect","Drawer","anchor","paper","toUpperCase","TableContainer","fileList","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","moment","date","format","bytes","decimals","k","dm","sizes","Math","floor","parseFloat","pow","formatBytes","endsWith","Modal","Paper","ListItemText","primary","Tooltip","PopperProps","disablePortal","disableFocusListener","disableHoverListener","onOpen","Select","native","e","MenuProps","anchorOrigin","vertical","horizontal","getContentAnchorEl","Slider","defaultValue","newVal","getAriaValueText","valueLabelDisplay","readOnly","Switch","checked","newSettings","percent_density","infill_line_distance","multiplier","infill_pattern","setInfillMultiplier","infillLineDistance","line_width","infill_line_width","setInfillLineDistance","blackmagic","magic_spiralize","handleSlice","cardContent","Print","extruder","connected","feed","printing","progress","printState","setPrintState","jobState","setJobState","setProgressState","fileDrawerOpen","setFileDrawerOpen","setFileLocation","fetchFiles","location","parse","substring","hasOwnProperty","job","btnContainer","centerBtns","tabs","units","Moving","unit","setUnit","homeAxis","moveAxis","negative","Box","u","gauges","nozzleSlider","tempOutputs","Heating","onChangeCommitted","StepperDisable","DisableButton","PowerOff","disableMotors","EnableButton","Power","enableMotors","Control","setPosition","payload","networkOptions","wifi","icon","Wifi","hotspot","WifiTethering","ethernet","SettingsEthernet","none","SignalCellularNull","Settings","networkExpanded","setNetworkExpanded","setNetworkType","printerMode","setPrinterMode","userMode","setUserMode","displayWifi","setDisplayWifi","displaySSID","setDisplaySSID","networkProfile","subheader","ListSubheader","prev","ListItemIcon","ListItemSecondaryAction","Object","entries","option","handleNetworkToggle","LocalLibrary","Class","edge","checkedValue","Tutorials","currentTutorial","selectTutorial","getOwnPropertyNames","tutName","tutorialCard","showClose","closeTutorial","maxHeight","ResetPrinter","clear","window","reload","componentContainer","Menu","activeComponent","setActiveComponent","MenuArray","component","Fragment","handleDrawer","Divider","TutorialButton","tutorialShown","extruderTemp","bedTemp","Tune","setExtruder","temps","parseInt","tool0","actual","appBar","Home","mode","setActiveMode","setActiveTab","Components","createMuiTheme","App","onboarded","setOnboarded","setBedTemp","bedTargetTemp","setBedTargetTemp","nozzleTemp","setNozzleTemp","nozzleTargetTemp","setNozzleTargetTemp","machineName","setMachineName","isOnboarded","printerName","socketUrl","messageHistory","useWebSocket","shouldReconnect","closeEvent","reconnectAttempts","reconnectInterval","onError","onMessage","msg","error","sendMessage","readyState","useMemo","concat","connectionStatus","ReadyState","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","Provider","CssBaseline","Boolean","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.613b6c90.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  CardActionArea,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  card: {\n    margin: '32px',\n    border: '2px solid rgba(0, 0, 0, 0.12)',\n    textAlign: 'center',\n  },\n});\nconst OptionCard = ({ title, description, onClick }) => {\n  const classes = useStyles();\n\n  return (\n    <Card onClick={onClick} className={classes.card}>\n      <CardActionArea>\n        <CardContent>\n          <Typography variant=\"h2\">{title}</Typography>\n          <p>{description}</p>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default OptionCard;\n","export const formatBytes = (bytes, decimals = 2) => {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n};\n\nexport const setStorage = (key, val) => {\n  return localStorage.setItem(key, val);\n};\nexport const getStorage = (key) => {\n  return localStorage.getItem(key);\n};\nexport const removeStorage = (key) => {\n  return localStorage.removeItem(key);\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport OptionCard from '../../Common/OptionCard/OptionCard';\nimport { setStorage } from '../../../Utility/helpers';\nconst useStyles = makeStyles({\n  header: {\n    textAlign: 'center',\n    fontSize: '32px',\n  },\n});\n\nconst PrinterType = ({ setStep }) => {\n  const classes = useStyles();\n  const handleClick = (val) => {\n    setStorage('printerProfile', val);\n    setStep(3);\n  };\n  return (\n    <div>\n      <h2 className={classes.header}>Where will this printer be used?</h2>\n      <OptionCard title=\"Home\" onClick={() => handleClick('home')} />\n      <OptionCard title=\"Classroom\" onClick={() => handleClick('classroom')} />\n    </div>\n  );\n};\n\nexport default PrinterType;\n","import React, { useRef, useState } from \"react\";\nimport {\n  Button, Grid, Typography, TextField, CircularProgress, Backdrop\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ArrowForward } from \"@material-ui/icons\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Keyboard from \"react-simple-keyboard\";\nimport { setStorage, getStorage } from \"../../../Utility/helpers\";\nimport \"react-simple-keyboard/build/css/index.css\";\n\nconst useStyles = makeStyles({\n  backdrop: {\n    zIndex: 10000,\n    color: \"#fff\"\n  },\n  buttonContainer: {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-around\",\n    marginTop: \"56px\"\n  },\n  connecting: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    \"& h4\": {\n      marginBottom: \"24px\"\n    }\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  item: {\n    padding: (props) => (props.settingsScreen ? \"10px\" : \"30px 15px\"),\n    fontSize: (props) => (props.settingsScreen ? \"18px\" : \"24px\"),\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  keyboard: {\n    position: \"fixed\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    color: \"#000\"\n  }\n});\n\nconst NetworkSettings = ({\n  setStep,\n  setShowSnack,\n  setSnackMessage,\n  settingsScreen\n}) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const [layout, setLayout] = useState(\"default\");\n  const [input, setInput] = useState(\"\");\n  const [connecting, setConnecting] = useState(false);\n  const [rebootRequired, setRebootRequired] = useState(false);\n  const type = \"configure\";\n  const keyboard = useRef();\n  const old_name = getStorage(\"printerName\");\n\n  const nextSubmit = () => {\n    keyBoardOff();\n    handleSubmit();\n  }\n\n  const keyBoardOn = () => {\n    setExpanded(true);\n  }\n\n  const keyBoardOff = () => {\n    setExpanded(false);\n  }\n\n  const handleSubmit = async () => {\n\n    if(input) {\n      const host_name = { hostname: input, action: \"add\" };\n      const lastHostname = { hostname: old_name !== null ? old_name : \"300x\", action: \"remove\"};\n      const ssid_name = { ssid: input };\n\n      //after, display success or failure\n      setConnecting(true);\n\n      if(input !== old_name) {\n        const hostname_response = await fetch(`http://localhost:8990/change/hostname`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(host_name)\n        });\n\n        hostname_response.json().then((data) => {\n          if (data.status.includes(\"add\")) {\n            setStorage(\"printerName\", input);\n          } else {\n            setSnackMessage(\"Connection Failed. Try Again\");\n            setShowSnack(() => true);\n            // show snack message \"Failure\"\n          }\n        });\n\n        const ssid_name_response = await fetch(`http://localhost:8990/hotspot/change/ssid/name`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(ssid_name)\n        });\n\n        ssid_name_response.json().then((data) => {\n          setConnecting(false);\n          if (data.status.includes(\"changed\")) {\n            setStorage(\"ssid\", input);\n            setSnackMessage(\"Successfully Named!\");\n            setShowSnack(() => true);\n            //Go to next screen\n            //!settingsScreen && setStep(2);\n          } else {\n            setSnackMessage(\"Connection Failed. Try Again\");\n            setShowSnack(() => true);\n            // show snack message \"Failure\"\n          }\n        });\n\n        if(old_name) {\n          const remove_hostname_response = await fetch(`http://localhost:8990/change/hostname`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(lastHostname)\n          });\n\n          remove_hostname_response.json().then((data) => {\n            if (data.status.includes(\"remove\")) {\n              setConnecting(false);\n              setRebootRequired(true);\n              setTimeout(() => {\n                fetch(`http://localhost:8990/reboot`, {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  }\n                });\n                // go to settings screen\n                //!settingsScreen && setStep(4);\n              }, 3000);\n            }\n          });\n        }\n\n      } else {\n        // nothing to change\n        setSnackMessage(\"Printer name is \" + getStorage(\"printerName\"));\n        setShowSnack(() => true);\n        !settingsScreen && setStep(4);\n      }\n\n    } else {\n      // nothing to change\n      setSnackMessage(\"Printer name is \" + getStorage(\"printerName\"));\n      setShowSnack(() => true);\n      !settingsScreen && setStep(4);\n    }\n\n\n  };\n\n  //update text entered into input field\n  const onChange = (input) => {\n    setInput(input);\n    console.log(\"Input changed\", input);\n  };\n  //toggle keyboard layouts when user presses shift\n  const handleShift = () => {\n    const newLayoutName = layout === \"default\" ? \"shift\" : \"default\";\n    setLayout(newLayoutName);\n  };\n\n  //handle keyboard layout key presses\n  const onKeyPress = (button) => {\n    if (button === \"{ABC}\") {\n      setLayout(\"shift\");\n    } else if (button === \"{abc}\") {\n      setLayout(\"default\");\n    } else if (button === \"{+=#}\") {\n      setLayout(\"symbol\");\n    } else if (button === \"{123}\") {\n      setLayout(\"number\");\n    }\n    (button === \"{shift}\" || button === \"{lock}\") && handleShift();\n  };\n\n  //handle keyboard key presses for input keys\n  const onChangeInput = (event) => {\n    const input = event.target.value;\n    setInput(input);\n    keyboard.current.setInput(input);\n  };\n\n\n  return (\n    <Grid\n      container\n      item\n      spacing={6}\n      direction=\"column\"\n      alignItems=\"center\"\n      className={classes.container}\n    >\n      {type === \"configure\" && (\n        <div>\n          <Grid\n            item\n            spacing={6}\n            direction=\"column\"\n            alignItems=\"center\"\n            style={{ paddingTop: 140 }}\n          >\n            <Typography variant=\"h4\">Your Printer's Name Is:</Typography>\n            <Typography variant=\"h4\" style={{textAlign: 'center'}}>{getStorage(\"printerName\")}</Typography>\n            </Grid>\n          <Grid\n            item\n            spacing={6}\n            direction=\"column\"\n            alignItems=\"center\"\n            style={{ marginTop: 200 }}\n          >\n            <Grid container style={{flexDirection:'row', justifyContent: 'flex-end'}}>\n              <Grid item xs={9}>\n                <TextField\n                  id=\"input\"\n                  label=\"Change Printer Name\"\n                  type=\"text\"\n                  color=\"secondary\"\n                  value={input}\n                  onFocus={keyBoardOn}\n                  onChange={onChangeInput}\n                  style={{ width: \"100%\" }}\n                  />\n              </Grid>\n              <Grid item>\n                <Button\n                  color=\"primary\"\n                  variant=\"contained\"\n                  className={classes.button}\n                  style={{ marginTop: 10 }}\n                  onClick={() => {\n                      nextSubmit()\n                  }}\n                    >\n                  Next\n                </Button>\n              </Grid>\n            </Grid>\n            <Grid\n              item\n              spacing={6}\n              direction=\"column\"\n              alignItems=\"center\"\n              style={{ marginTop: 20, marginLeft: 10 }}\n            >\n              <Button\n                aria-label=\"skip\"\n                endIcon={<ArrowForward />}\n                onClick={() => {\n                  !settingsScreen && setStep(4);\n                }}\n              >\n                Skip\n              </Button>\n            </Grid>\n          </Grid>\n          {rebootRequired && (\n            <Backdrop className={classes.backdrop} open={rebootRequired}>\n              <div className={classes.connecting}>\n                <h4>Reboot Required. Rebooting...</h4>\n                <CircularProgress color=\"inherit\" />\n              </div>\n            </Backdrop>\n          )}\n          {connecting && (\n            <Backdrop className={classes.backdrop} open={connecting}>\n              <div className={classes.connecting}>\n                <h4>Renaming</h4>\n                <CircularProgress color=\"inherit\" />\n              </div>\n            </Backdrop>\n          )}\n          {expanded && (\n            <div className={classes.keyboard}>\n              <Keyboard\n                keyboardRef={(r) => (keyboard.current = r)}\n                layoutName={layout}\n                layout={{\n                  default: [\n                    \"{abc} {ABC} {+=#} {123}\",\n                    \"a b c d e\",\n                    \"f g h i j\",\n                    \"k l m n o\",\n                    \"p q r s t\",\n                    \"u v w x y\",\n                    \"z {space} {bksp}\"\n                  ],\n                  shift: [\n                    \"{abc} {ABC} {+=#} {123}\",\n                    \"A B C D E\",\n                    \"F G H I J\",\n                    \"K L M N O\",\n                    \"P Q R S T\",\n                    \"U V W X Y\",\n                    \"Z {space} {bksp}\"\n                  ],\n                  symbol: [\n                    \"{abc} {ABC} {+=#} {123}\",\n                    \"! @ # $ %\",\n                    \"^ & * ( )\",\n                    \"~ ' _ - =\",\n                    \"[ ] { } \\\\\",\n                    \"| ; ' : ,\",\n                    '\" < > ? .'\n                  ],\n                  number: [\n                    \"{abc} {ABC} {+=#} {123}\",\n                    \"1 2 3\",\n                    \"4 5 6\",\n                    \"7 8 9\",\n                    \"$ 0 .\",\n                    \"{space}\",\n                    \"# {bksp}\"\n                  ]\n                }}\n                display={{\n                  \"{bksp}\": \"Backspace\",\n                  \"{enter}\": \"Enter\",\n                  \"{shift}\": \"Shift\",\n                  \"{space}\": \"Space\",\n                  \"{123}\": \"123\",\n                  \"{ABC}\": \"ABC\",\n                  \"{abc}\": \"abc\",\n                  \"{+=#}\": \"+ = #\"\n                }}\n                onChange={onChange}\n                onKeyPress={onKeyPress}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n    </Grid>\n  );\n};\n\nexport default NetworkSettings;\n","import { useEffect } from 'react';\n\nexport const useMountEffect = (fun) => useEffect(fun, []);\n","import React, { useRef, useState } from \"react\";\nimport { useMountEffect } from \"../../../Utility/useMountEffect\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Backdrop,\n  Button,\n  CircularProgress,\n  IconButton,\n  InputAdornment,\n  List,\n  ListItem,\n  TextField\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport RemoveRedEyeIcon from \"@material-ui/icons/RemoveRedEye\";\nimport Keyboard from \"react-simple-keyboard\";\nimport imgPrint from \"../../../img/mm-print.svg\";\nimport \"react-simple-keyboard/build/css/index.css\";\n\nconst useStyles = makeStyles({\n  accordion: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  backdrop: {\n    zIndex: 10000,\n    color: \"#fff\"\n  },\n  button: {\n    alignSelf: \"flex-end\",\n    height: \"36px\",\n    marginLeft: \"25px\"\n  },\n  connecting: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    \"& h4\": {\n      marginBottom: \"24px\"\n    }\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: \"-40px\"\n  },\n  item: {\n    padding: (props) => (props.settingsScreen ? \"10px\" : \"30px 15px\"),\n    fontSize: (props) => (props.settingsScreen ? \"18px\" : \"24px\"),\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  keyboard: {\n    position: \"fixed\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    color: \"#000\"\n  },\n  wifiList: {\n    height: \"600px\",\n    overflow: \"scroll\",\n    border: \"1px solid #fff\",\n    borderRadius: \"5px\"\n  }\n});\nconst WifiConnect = ({\n  setStep,\n  setShowSnack,\n  setSnackMessage,\n  handleSnackClose,\n  setConnectWifi,\n  settingsScreen,\n  setStage,\n  onGoBack\n}) => {\n  const classes = useStyles({ settingsScreen });\n  const [expanded, setExpanded] = useState(false);\n  const [layout, setLayout] = useState(\"default\");\n  const [input, setInput] = useState(\"\");\n  const [wifiArr, setWifiArr] = useState([]);\n  const [connecting, setConnecting] = useState(false);\n  const keyboard = useRef();\n  const [loading, setLoading] = useState(false);\n  const [maskPassword, setMaskPassword] = useState(true);\n\n  useMountEffect(() => {\n    async function getNetworks() {\n      // Default options are marked with *\n      const response = await fetch(`http://localhost:8990/networks/scan`);\n      return response.json(); // parses JSON response into native JavaScript objects\n    }\n    //Fetch http://localhost:8990/networks/scan\n    //setWifiArr response.networks\n    setLoading(true);\n    getNetworks().then((data) => {\n      let networks = data.networks.filter((obj, pos, arr) => {\n        return (\n          arr.map((mapObj) => mapObj[\"ssid\"]).indexOf(obj[\"ssid\"]) === pos &&\n          obj.ssid != null\n        );\n      });\n      setWifiArr(networks);\n      setLoading(false);\n    });\n  });\n\n  const handleSubmit = async () => {\n    const body = { ssid: expanded, password: input };\n    //set loading screen\n    setExpanded(false);\n    setConnecting(true);\n    setInput(\"\");\n    //await POST body to http://localhost:8990/connect\n    async function setNetwork(body) {\n      // Default options are marked with *\n      const response = await fetch(`http://localhost:8990/connect`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      return response.json(); // parses JSON response into native JavaScript objects\n    }\n    setNetwork(body).then((data) => {\n      //after, display success or failure\n      setConnecting(false);\n      if (data.status === \"connected!\") {\n        setSnackMessage(\"Successfully Connected\");\n        setShowSnack(() => true);\n        !settingsScreen && setStep(1);\n        //Go to next screen\n        //!settingsScreen && setStep(2);\n      } else {\n        setSnackMessage(\"Connection Failed. Try Again\");\n        setShowSnack(() => true);\n        setConnecting(false);\n        // show snack message \"Failure\"\n      }\n    });\n  };\n\n  //toggle password masking\n  const passwordToggle = () => {\n    setMaskPassword(!maskPassword);\n  };\n\n  //update text entered into input field\n  const onChange = (input) => {\n    setInput(input);\n    console.log(\"Input changed\", input);\n  };\n\n  //toggle keyboard layouts when user presses shift\n  const handleShift = () => {\n    const newLayoutName = layout === \"default\" ? \"shift\" : \"default\";\n    setLayout(newLayoutName);\n  };\n\n  //handle keyboard layout key presses\n  const onKeyPress = (button) => {\n    if (button === \"{ABC}\") {\n      setLayout(\"shift\");\n    } else if (button === \"{abc}\") {\n      setLayout(\"default\");\n    } else if (button === \"{+=#}\") {\n      setLayout(\"symbol\");\n    } else if (button === \"{123}\") {\n      setLayout(\"number\");\n    }\n    (button === \"{shift}\" || button === \"{lock}\") && handleShift();\n  };\n  const handleExpand = (panel) => {\n    setExpanded(panel);\n  };\n\n  //handle keyboard key presses for input keys\n  const onChangeInput = (event) => {\n    const input = event.target.value;\n    setInput(input);\n    keyboard.current.setInput(input);\n  };\n  console.log(setSnackMessage);\n  return (\n    <div className={classes.container}>\n      {!settingsScreen && (\n        <div className={classes.header}>\n          <IconButton\n            aria-label=\"back\"\n            onClick={() => {\n              setConnectWifi(() => null);\n              if (onGoBack) {\n                onGoBack();\n              }\n            }}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <h2>Wi-Fi</h2>\n        </div>\n      )}\n      {loading && (\n        <>\n          <img\n            src={imgPrint}\n            style={{\n              width: 200,\n              height: 200,\n              zIndex: 99999999,\n              position: \"absolute\",\n              left: \"calc(50% - 100px)\",\n              top: \"calc(50% - 100px)\"\n            }}\n          ></img>\n          <h4\n            style={{\n              width: 200,\n              zIndex: 99999999,\n              position: \"absolute\",\n              left: \"calc(50% - 100px)\",\n              top: \"calc(50% + 120px)\",\n              textAlign: \"center\"\n            }}\n          >\n            Gathering Networks\n          </h4>\n        </>\n      )}\n      <List className={classes.wifiList}>\n        {wifiArr.map((network) => {\n          return (\n            <Accordion\n              expanded={expanded === network.ssid}\n              key={`${network.ssid}-list-item`}\n            >\n              <AccordionSummary classes={{ content: \"accordion-style\" }}>\n                <ListItem className={classes.item}>\n                  {network.ssid}\n                  <Button\n                    color={expanded === network.ssid ? \"secondary\" : \"primary\"}\n                    variant=\"contained\"\n                    onClick={() => {\n                      if (expanded === network.ssid) {\n                        setExpanded(() => false);\n                        setInput(\"\");\n                      } else {\n                        handleExpand(network.ssid);\n                      }\n                    }}\n                  >\n                    {expanded === network.ssid ? \"Close\" : \"Join\"}\n                  </Button>\n                </ListItem>\n              </AccordionSummary>\n              <AccordionDetails className={classes.accordion}>\n                <TextField\n                  id=\"standard-password-input\"\n                  label=\"Password\"\n                  type={maskPassword ? \"password\" : \"text\"}\n                  color=\"secondary\"\n                  value={input}\n                  onChange={onChangeInput}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <RemoveRedEyeIcon onClick={passwordToggle} />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n                <Button\n                  color=\"primary\"\n                  variant=\"contained\"\n                  className={classes.button}\n                  onClick={() => {\n                    if (input.length > 0) {\n                      handleSubmit();\n                    } else {\n                      setSnackMessage(\"Password required\");\n                      setShowSnack(true);\n                    }\n                  }}\n                >\n                  Connect\n                </Button>\n              </AccordionDetails>\n            </Accordion>\n          );\n        })}\n      </List>\n      {connecting && (\n        <Backdrop className={classes.backdrop} open={connecting}>\n          <div className={classes.connecting}>\n            <h4>Connecting</h4>\n            <CircularProgress color=\"inherit\" />\n          </div>\n        </Backdrop>\n      )}\n      {expanded && (\n        <div className={classes.keyboard}>\n          <Keyboard\n            keyboardRef={(r) => (keyboard.current = r)}\n            layoutName={layout}\n            layout={{\n              default: [\n                \"{abc} {ABC} {+=#} {123}\",\n                \"a b c d e\",\n                \"f g h i j\",\n                \"k l m n o\",\n                \"p q r s t\",\n                \"u v w x y\",\n                \"z {space} {bksp}\"\n              ],\n              shift: [\n                \"{abc} {ABC} {+=#} {123}\",\n                \"A B C D E\",\n                \"F G H I J\",\n                \"K L M N O\",\n                \"P Q R S T\",\n                \"U V W X Y\",\n                \"Z {space} {bksp}\"\n              ],\n              symbol: [\n                \"{abc} {ABC} {+=#} {123}\",\n                \"! @ # $ %\",\n                \"^ & * ( )\",\n                \"~ ' _ - =\",\n                \"[ ] { } \\\\\",\n                \"| ; ' : ,\",\n                '\" < > ? .'\n              ],\n              number: [\n                \"{abc} {ABC} {+=#} {123}\",\n                \"1 2 3\",\n                \"4 5 6\",\n                \"7 8 9\",\n                \"$ 0 .\",\n                \"{space}\",\n                \"# {bksp}\"\n              ]\n            }}\n            display={{\n              \"{bksp}\": \"Backspace\",\n              \"{enter}\": \"Enter\",\n              \"{shift}\": \"Shift\",\n              \"{space}\": \"Space\",\n              \"{123}\": \"123\",\n              \"{ABC}\": \"ABC\",\n              \"{abc}\": \"abc\",\n              \"{+=#}\": \"+ = #\"\n            }}\n            onChange={onChange}\n            onKeyPress={onKeyPress}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WifiConnect;\n","import React from \"react\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles({\n  buttonContainer: {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-around\",\n    marginTop: \"56px\"\n  },\n  container: {\n    padding: \"32px\",\n    textAlign: \"center\",\n    \"& p\": {\n      fontSize: \"2.125rem\"\n    }\n  }\n});\nconst HotspotConnect = ({ setStep, setConnectWifi }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      item\n      spacing={6}\n      direction=\"column\"\n      alignItems=\"center\"\n      className={classes.container}\n    >\n      <h2>\n        Your SSID is\n        <Typography color=\"secondary\" variant=\"body1\">\n          300x\n        </Typography>\n      </h2>\n      <h2>\n        Your password is\n        <Typography color=\"secondary\" variant=\"body1\">\n          makermade\n        </Typography>\n      </h2>\n      <Grid item className={classes.buttonContainer}>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => setConnectWifi(null)}\n        >\n          Back\n        </Button>\n        <Button color=\"primary\" variant=\"contained\" onClick={() => setStep(1)}>\n          Next\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default HotspotConnect;\n","import React from 'react';\nimport OptionCard from '../../Common/OptionCard/OptionCard';\nimport { getStorage, setStorage } from '../../../Utility/helpers';\n\nimport './UserLevel.css';\nconst UserLevel = ({ handleOnboarding, setStep }) => {\n  const handleClick = async (val) => {\n    const networkType = await getStorage('networkProfile');\n    setStorage('userMode', val);\n    setStorage('onboarded', true);\n    if (networkType === 'wifi' || networkType === 'ethernet') {\n      //check for updates\n      setStep(5);\n    } else {\n      setStep(5);\n      handleOnboarding(val);\n    }\n  };\n  return (\n    <div className=\"menu-container\">\n      <h3>Please choose a mode</h3>\n      <div className=\"menu-options-container\">\n        <OptionCard\n          title=\"Beginner\"\n          description=\"For beginners. We will walk you through how to operate your 3D\n                printer, step by step.\"\n          onClick={() => handleClick('beginner')}\n        />\n        <OptionCard\n          title=\"Standard\"\n          description=\"For users familiar with 3D printing.\"\n          onClick={() => handleClick('standard')}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default UserLevel;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Button, Typography } from \"@material-ui/core\";\nimport { ArrowForward } from \"@material-ui/icons\";\nimport { setStorage, getStorage, removeStorage } from \"../../../Utility/helpers\";\nimport OptionCard from \"../../Common/OptionCard/OptionCard\";\nimport WifiConnect from \"./WifiConnect\";\nimport HotspotConnect from \"./HotspotConnect\";\n\nconst useStyles = makeStyles({\n  header: {\n    display: \"flex\",\n    \"& h2\": {\n      fontSize: \"28px\"\n    }\n  }\n});\nconst NetworkType = ({\n  setStep,\n  setSnackMessage,\n  setShowSnack,\n  handleSnackClose,\n  setNewType\n}) => {\n  const classes = useStyles();\n  const [connectWifi, setConnectWifi] = useState(null);\n  const [flowStep, setFlowStep] = useState(\"choose-overall\");\n  const [hotspotFollow, setHotspotFollow] = useState(null);\n\n  const handleClick = (val) => {\n    let oldProfile = getStorage(\"networkProfile\");\n\n    setStorage(\"networkProfile\", val);\n    setConnectWifi(val);\n    setNewType(val);\n\n    if (val === \"hotspot\") {\n      fetch(`http://localhost:8990/hotspot/connect`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    } else if (oldProfile == \"hotspot\" && val === \"wifi\") {\n      fetch(`http://localhost:8990/hotspot/disconnect`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    } else if (val === \"none\") {\n      setStep(1);\n    }\n  };\n  return (\n    <>\n      {connectWifi === null ? (\n        <>\n          <Grid\n            container\n            justify=\"space-between\"\n            alignItems=\"center\"\n            className={classes.header}\n          >\n            <h2>Network</h2>\n            <Button\n              aria-label=\"skip\"\n              endIcon={<ArrowForward />}\n              onClick={() => {\n                removeStorage(\"networkProfile\");\n                setStep(1);\n              }}\n            >\n              Skip\n            </Button>\n          </Grid>\n          {flowStep === \"choose-overall\" && (\n            <>\n              <Typography variant=\"h5\">\n                Do you want to connect this printer to the internet?\n              </Typography>\n              <OptionCard\n                title=\"Yes\"\n                onClick={() => {\n                  setStorage(\"internet\", true);\n                  setFlowStep(\"choose-internet\");\n                }}\n              />\n              <OptionCard\n                title=\"No\"\n                onClick={() => {\n                  setStorage(\"internet\", false);\n                  setFlowStep(\"choose-hotspot\");\n                }}\n              />\n            </>\n          )}\n          {flowStep === \"choose-internet\" && (\n            <>\n              <Typography variant=\"h5\">\n                How will this printer connect to the internet?\n              </Typography>\n              <OptionCard\n                title=\"Wi-Fi\"\n                onClick={() => {\n                  handleClick(\"wifi\");\n                }}\n              />\n              <OptionCard\n                title=\"Ethernet\"\n                onClick={() => {\n                  handleClick(\"ethernet\");\n                }}\n              />\n            </>\n          )}\n          {flowStep === \"choose-hotspot\" && (\n            <>\n              <Typography variant=\"h5\">\n                Would you like to activate the printer's wireless hotspot?\n              </Typography>\n              <Typography variant=\"h6\">\n                This allows you to remotely access and control the printer.\n              </Typography>\n              <OptionCard\n                title=\"Yes\"\n                onClick={() => {\n                  setStorage(\"hotspot\", true);\n                  handleClick(\"hotspot\");\n                }}\n              />\n              <OptionCard\n                title=\"No\"\n                onClick={() => {\n                  setStorage(\"hotspot\", false);\n                }}\n              />\n            </>\n          )}\n          <OptionCard title=\"Wi-Fi\" onClick={() => handleClick(\"wifi\")} />\n          <OptionCard title=\"Hotspot\" onClick={() => handleClick(\"hotspot\")} />\n          <OptionCard\n            title=\"Ethernet\"\n            onClick={() => handleClick(\"ethernet\")}\n          />\n          <OptionCard title=\"None\" onClick={() => handleClick(\"none\")} />\n        </>\n      ) : connectWifi === \"wifi\" ? (\n        <WifiConnect\n          setStep={setStep}\n          setShowSnack={setShowSnack}\n          setSnackMessage={setSnackMessage}\n          handleSnackClose={handleSnackClose}\n          setConnectWifi={setConnectWifi}\n        />\n      ) : (\n        <HotspotConnect\n          setStep={setStep}\n          setConnectWifi={setConnectWifi}\n          type={connectWifi}\n        />\n      )}\n    </>\n  );\n};\n\nexport default NetworkType;\n","import React, { useState } from \"react\";\nimport { Button, Grid, CircularProgress, Typography } from \"@material-ui/core\";\nimport { ArrowForward } from \"@material-ui/icons\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useMountEffect } from \"../../../Utility/useMountEffect\";\nimport { setStorage, getStorage } from \"../../../Utility/helpers\";\n\nconst useStyles = makeStyles({\n  checker: {\n    flex: 2,\n    \"& button\": {\n      width: \"200px\",\n      height: \"50px\",\n      fontSize: \"14px\"\n    }\n  },\n  updateContainer: {\n    flex: 3,\n    \"& h3\": {\n      fontSize: \"28px\",\n      textAlign: \"center\"\n    }\n  }\n});\n\nconst Update = ({ autoCheck, handleOnboarding, firstBoot, setStep }) => {\n  const classes = useStyles();\n\n  const [checking, setChecking] = useState(false);\n  const [text, setText] = useState(\"Update device\");\n  const [updateChecked, setUpdateChecked] = useState(false);\n  const [updates, setUpdates] = useState(false);\n  const [checkDisabled, setCheckDisabled] = useState(false);\n  useMountEffect(() => {\n    if (autoCheck) {\n      handleCheck();\n    }\n  });\n  const handleCheck = () => {\n    if (firstBoot && updateChecked) {\n      setStep(2);\n    } else {\n      setText(\"Checking for updates...\");\n      setChecking(true);\n      //make api call\n      //await POST body to http://localhost:8990/connect\n      async function checkUpdates() {\n        // Default options are marked with *\n        const response = await fetch(\n          `http://localhost:8080/api/v1/update/software/check`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          }\n        );\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n      checkUpdates().then((data) => {\n        console.log(data);\n        //after api call\n        if (data.update) {\n          setChecking(false);\n          //if updates present\n          setText(\"Updates available!\");\n          setUpdates(true);\n          setUpdateChecked(true);\n        } else {\n          setChecking(false);\n          setText(\"All up to date\");\n          setUpdateChecked(true);\n        }\n      });\n    }\n  };\n  const handleDownload = () => {\n    //console.log(\"handleDownload state 1 of 6; Entry point\");\n    //await POST body to http://localhost:8990/connect\n    async function downloadUpdates() {\n      //console.log(\"handleDownload state 2 of 6; downloadUpdates called\");\n      // Default options are marked with *\n      const response = await fetch(\n        `http://localhost:8080/api/v1/update/software`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      );\n      return response.json(); // parses JSON response into native JavaScript objects\n    }\n    setChecking(true);\n    setText(\"Downloading, please wait...\");\n    setUpdates(false);\n    //call download api\n    downloadUpdates().then((data) => {\n      //console.log(\"handleDownload state 3 of 6; Await'd downloadUpdates\");\n      console.log(data);\n      //after api call\n      if (data.updated) {\n        //console.log(\"handleDownload state 4 of 6; data.updated === true\");\n        //after api call\n        setChecking(false);\n        if (firstBoot) {\n          setStorage(\"initialUpdate\", 1);\n        }\n        //on success\n        setText(\n          \"Update successful, rebooting the printer...\\nThis will take approximately 2 minutes\\n   DO NOT TURN OFF YOUR PRINTER UNTIL AFTER IT REBOOTS!\"\n        );\n        setCheckDisabled(true);\n\n        //console.log(\n        //  \"handleDownload state 5 of6 ; Waiting 3 seconds and then calling reboot\"\n        //);\n        setTimeout(() => {\n          //console.log(\"handleDownload state 6 of ; Calling reboot\");\n          fetch(`http://localhost:8990/reboot`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n        }, 3000);\n      } else {\n        console.log(\"handleDownload state error of 6; Entry point\");\n        //on failure\n        setText(\"Something went wrong, please try again.\");\n        setUpdates(true);\n        setCheckDisabled(true);\n      }\n    });\n  };\n  const handleSkip = () => {\n    setStep(2);\n  };\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      style={{ height: \"100%\" }}\n    >\n      {!checkDisabled && firstBoot && (\n        <Button\n          style={{ alignSelf: \"flex-end\", marginTop: \"15px\" }}\n          aria-label=\"skip\"\n          endIcon={<ArrowForward />}\n          onClick={handleSkip}\n        >\n          Skip\n        </Button>\n      )}\n\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.updateContainer}\n      >\n        {checking && <CircularProgress color=\"secondary\" />}\n        <UpdateIcon\n          style={{\n            fontSize: 100,\n            width: \"100%\",\n            textAlign: \"center\",\n            marginBottom: 20\n          }}\n        />\n        {text.length > 0 && <Typography variant=\"h3\">{text}</Typography>}\n        {updates && (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handleDownload}\n            style={{ marginTop: \"24px\" }}\n          >\n            Download Update\n          </Button>\n        )}\n      </Grid>\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.checker}\n      >\n        {!updates && !checking && (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={checking || checkDisabled}\n            onClick={handleCheck}\n          >\n            {firstBoot && updateChecked ? \"Next\" : \"Check for Updates\"}\n          </Button>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Update;\n","const TutorialLayouts = {\n  ButtonSingle: \"single-button\",\n  AxisManipulation: \"axis-manipulation\",\n  ButtonMulti: \"multi-button\",\n  ThermalGate: \"thermal-gate\",\n  DualThermalGate: \"dual-thermal-gate\"\n};\n\nexport default TutorialLayouts;\n","import TutorialLayouts from \"./TutorialLayouts\";\n\nconst TutorialDefinitions = {\n  firstRun: {\n    userVisable: false,\n    name: \"Initial Setup\",\n    description: \"\",\n    exitActions: [\n      {\n        type: \"nozzletemp\",\n        params: [0]\n      },\n      {\n        type: \"bedtemp\",\n        params: [0]\n      }\n    ],\n    steps: [\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Start\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"zoffsetstart\", params: [] }\n        ],\n        text:\n          'Before you get started printing, the BLTouch sensor needs to be calibrated. Make sure the print bed is clear and then tap \"Start\" to begin.'\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [{ type: \"continue\", params: [] }],\n        text: `The BLTouch will move to the middle of the plate, the probe will trigger, and then it will move up off of the surface by a small amount.%BREAK%Grab a piece of printer paper and place it between the printer's nozzle and the build surface.`\n      },\n      {\n        layout: TutorialLayouts.AxisManipulation,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"savezoffset\", params: [] }\n        ],\n        axisX: false,\n        axisY: false,\n        axisZ: true,\n        text: `Using the controls below, adjust the nozzle's Z position so that it makes contact with the paper.%BREAK%First use the \"-1.0mm\" (down) and \"+1.0mm\" (up) buttons to move the nozzle close to the paper.%BREAK%Then use the \"-0.1mm\" (down) and \"+0.1mm\" (up) buttons until the nozzle touches the paper.%BREAK% %BREAK%Dragging the paper back and forth, you should feel a lot of resistance on the paper, possibly leaving scratch marks.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [30, 270] }\n        ],\n        text: `The nozzle will now move to each corner twice.%BREAK%Each time, adjust the corresponding knob under each position until the paper moves with about the same resistance as it did in the center.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [270, 270] }\n        ],\n        text: `Adjust the front left knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [30, 30] }\n        ],\n        text: `Adjust the front right knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [270, 30] }\n        ],\n        text: `Adjust the back left knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [30, 270] }\n        ],\n        text: `Adjust the back right knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [270, 270] }\n        ],\n        text: `Adjust the front left knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [30, 30] }\n        ],\n        text: `Adjust the front right knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [270, 30] }\n        ],\n        text: `Adjust the back left knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [{ type: \"continue\", params: [] }],\n        text: `Adjust the back right knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonMulti,\n        buttons: [\n          {\n            id: \"bYes\",\n            buttonText: \"Yes\",\n            buttonActions: [{ type: \"continue\", params: [] }]\n          },\n          {\n            id: \"bNo\",\n            buttonText: \"No\",\n            buttonActions: [{ type: \"jumpto\", params: [3] }]\n          }\n        ],\n        text: `Are all corners leveled to the same height?`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Start\",\n        buttonActions: [{ type: \"continue\", params: [] }],\n        text:\n          \"To print, you have to have a material loaded into the 3D printer's extruder. The material is called filament, and the extruder is the portion of the machine that moves and melts the filament used to print.%BREAK%The type of filament that came with your printer is PLA, a plant-based plastic that's safe and easy to print with!%BREAK%Press \\\"Start\\\" to begin.\"\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Preheat\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"nozzletemp\", params: [220] }\n        ],\n        text:\n          \"Your printer's nozzle has to be at the proper temperature to melt the filament when you load it. Press \\\"Preheat\\\" to heat up your printer's nozzle. Once it reaches 220 °C, it will be ready to load.%BREAK%Remember, it will be hot, so don't touch it!\"\n      },\n      {\n        layout: TutorialLayouts.ThermalGate,\n        minimumTemp: 220,\n        buttonText: \"Next\",\n        buttonActions: [{ type: \"continue\", params: [] }],\n        text: \"Please wait for the printer's nozzle to reach 220 °C\",\n        gateText:\n          'The nozzle has reached a temperature of 220 °C.%BREAK%Press \"Next\" to continue.'\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [{ type: \"continue\", params: [] }],\n        text:\n          \"You are now ready to load the filament!%BREAK%Take your roll and pull out the end from the storage slot in the side. Cut the bent end of the filament off at a 90 degree angle to make it easier to load.%BREAK%Hang the filament on the spool holder.\"\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [{ type: \"continue\", params: [] }],\n        text:\n          \"To load the filament, squeeze the silver lever next to the gears and push the cut end of the filament by hand into the tube.%BREAK%Push the filament all the way to the end of the tube until you see melted filament coming out of the nozzle.\"\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Preheat\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"nozzletemp\", params: [220] },\n          { type: \"bedtemp\", params: [50] }\n        ],\n        text:\n          'To ensure that the printer is setup correctly, this process will initiate a quick test print.%BREAK%Ensure that there is filament loaded into the machine and then press \"Preheat\" to begin'\n      },\n      {\n        layout: TutorialLayouts.DualThermalGate,\n        minimumExtruderTemp: 220,\n        minimumBedTemp: 50,\n        buttonText: \"Print\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"printtest\", params: [] }\n        ],\n        text:\n          \"Please wait for the printer's nozzle to reach 220 °C and for the bed to reach 60 °C.\",\n        gateText: 'Preheat complete.%BREAK%Press \"Print\" to continue.'\n      },\n      {\n        layout: TutorialLayouts.ButtonMulti,\n        buttons: [\n          {\n            id: \"bYes\",\n            buttonText: \"Yes\",\n            buttonActions: [{ type: \"jumpto\", params: [22] }]\n          },\n          {\n            id: \"bNo\",\n            buttonText: \"No\",\n            buttonActions: [\n              { type: \"continue\", params: [] },\n              { type: \"nozzletemp\", params: [0] },\n              { type: \"bedtemp\", params: [0] }\n            ]\n          }\n        ],\n        text:\n          \"Please wait for the print to complete.%BREAK%Did the print pop off or curl up off of the bed while printing?\"\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Exit\",\n        buttonActions: [{ type: \"exit\", params: [] }],\n        text: \"Congratulations, your printer is now properly setup for use!\"\n      },\n      {\n        layout: TutorialLayouts.ButtonMulti,\n        buttons: [\n          {\n            id: \"bCalibrate\",\n            buttonText: \"Recalibrate\",\n            buttonActions: [\n              { type: \"continue\", params: [] },\n              { type: \"nozzletemp\", params: [0] },\n              { type: \"bedtemp\", params: [0] }\n            ]\n          },\n          {\n            id: \"bExit\",\n            buttonText: \"Exit\",\n            buttonActions: [\n              { type: \"exit\", params: [\"\"] },\n              { type: \"nozzletemp\", params: [0] },\n              { type: \"bedtemp\", params: [0] }\n            ]\n          }\n        ],\n        text:\n          \"Do you want to repeat the calibration process, or skip calibration and exit for now?\"\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Start\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"zoffsetstart\", params: [] }\n        ],\n        text:\n          'Before you get started printing, the BLTouch sensor needs to be calibrated. Make sure the print bed is clear and then tap \"Start\" to begin.'\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [{ type: \"continue\", params: [] }],\n        text: `The BLTouch will move to the middle of the plate, the probe will trigger, and then it will move up off of the surface by a small amount.%BREAK%Grab a piece of printer paper and place it between the printer's nozzle and the build surface.`\n      },\n      {\n        layout: TutorialLayouts.AxisManipulation,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"savezoffset\", params: [] }\n        ],\n        axisX: false,\n        axisY: false,\n        axisZ: true,\n        text: `Using the controls below, adjust the nozzle's Z position so that it makes contact with the paper.%BREAK%First use the \"-1.0mm\" (down) and \"+1.0mm\" (up) buttons to move the nozzle close to the paper.%BREAK%Then use the \"-0.1mm\" (down) and \"+0.1mm\" (up) buttons until the nozzle touches the paper.%BREAK% %BREAK%Dragging the paper back and forth, you should feel a lot of resistance on the paper, possibly leaving scratch marks.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [30, 270] }\n        ],\n        text: `The nozzle will now move to each corner twice.%BREAK%Each time, adjust the corresponding knob under each position until the paper moves with about the same resistance as it did in the center.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [270, 270] }\n        ],\n        text: `Adjust the front left knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [30, 30] }\n        ],\n        text: `Adjust the front right knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [270, 30] }\n        ],\n        text: `Adjust the back left knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [30, 270] }\n        ],\n        text: `Adjust the back right knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [270, 270] }\n        ],\n        text: `Adjust the front left knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [30, 30] }\n        ],\n        text: `Adjust the front right knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [270, 30] }\n        ],\n        text: `Adjust the back left knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [{ type: \"continue\", params: [] }],\n        text: `Adjust the back right knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonMulti,\n        buttons: [\n          {\n            id: \"bYes\",\n            buttonText: \"Yes\",\n            buttonActions: [{ type: \"jumpto\", params: [18] }]\n          },\n          {\n            id: \"bNo\",\n            buttonText: \"No\",\n            buttonActions: [{ type: \"jumpto\", params: [23] }]\n          }\n        ],\n        text: `Are all corners leveled to the same height?`\n      }\n    ]\n  },\n\n  blTouchCalibration: {\n    userVisable: true,\n    name: \"Calibrate BLTouch Sensor\",\n    description: \"Calibrate the z-offset with the BLTouch sensor.\",\n    exitActions: [],\n    steps: [\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Start\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"zoffsetstart\", params: [] }\n        ],\n        text: `Make sure the print bed is clear and then tap \"Start\" to begin.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [{ type: \"continue\", params: [] }],\n        text: `The BLTouch will move to the middle of the plate, the probe will trigger, and then it will move up off of the surface by a small amount.%BREAK%Grab a piece of printer paper and place it between the printer's nozzle and the build surface.`\n      },\n      {\n        layout: TutorialLayouts.AxisManipulation,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"savezoffset\", params: [] }\n        ],\n        axisX: false,\n        axisY: false,\n        axisZ: true,\n        text: `Using the controls below, adjust the nozzle's Z position so that it makes contact with the paper.%BREAK%First use the \"-1.0mm\" (down) and \"+1.0mm\" (up) buttons to move the nozzle close to the paper.%BREAK%Then use the \"-0.1mm\" (down) and \"+0.1mm\" (up) buttons until the nozzle touches the paper.%BREAK% %BREAK%Dragging the paper back and forth, you should feel a lot of resistance on the paper, possibly leaving scratch marks.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Exit\",\n        buttonActions: [{ type: \"exit\", params: [] }],\n        text: `Calibration complete. Press \"Exit\" to finish this tutorial.`\n      }\n    ]\n  },\n\n  bedLevelCornerCalibration: {\n    userVisable: true,\n    name: \"Level the printing bed corners\",\n    description: \"Level the printing bed corners sequentially.\",\n    exitActions: [],\n    steps: [\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Start\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"home\", params: [] },\n          { type: \"movexy\", params: [150, 150] }\n        ],\n        text: `Place a sheet of printer paper on the center of the print bed. Ensure the bed is clear of anything else and then press \"Start\". The nozzle will move to the center of the print bed.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [30, 270] }\n        ],\n        text: `The nozzle will now move to each corner twice.%BREAK%Each time, adjust the corresponding knob under each position until the paper moves with about the same resistance as it does in the center.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [270, 270] }\n        ],\n        text: `Adjust the back left knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [30, 30] }\n        ],\n        text: `Adjust the back right knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [270, 30] }\n        ],\n        text: `Adjust the front left knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [30, 270] }\n        ],\n        text: `Adjust the front right knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [270, 270] }\n        ],\n        text: `Adjust the back left knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [30, 30] }\n        ],\n        text: `Adjust the back right knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"movexy\", params: [270, 30] }\n        ],\n        text: `Adjust the front left knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [{ type: \"continue\", params: [] }],\n        text: `Adjust the front right knob to move the print bed up and down. Move it so that the paper moves with about the same resistance as it did in the center of the print bed.%BREAK%Turn the knob clockwise to lower the bed and counter-clockwise to raise it.`\n      },\n      {\n        layout: TutorialLayouts.ButtonMulti,\n        buttons: [\n          {\n            id: \"bNo\",\n            buttonText: \"No\",\n            buttonActions: [{ type: \"jumpto\", params: [1] }]\n          },\n          {\n            id: \"bYes\",\n            buttonText: \"Yes\",\n            buttonActions: [\n              { type: \"bl_level\", params: [] },\n              { type: \"continue\", params: [] }\n            ]\n          }\n        ],\n        text: `Are all corners leveled to the same height?`\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Exit\",\n        buttonActions: [\n          { type: \"exit\", params: [] }\n        ],\n        text: \"The leveling process is complete.\"\n      }\n    ]\n  },\n  loadFilament: {\n    userVisable: true,\n    name: \"Load Filament\",\n    description: \"The steps required to load a new filament into the printer\",\n    exitActions: [{ type: \"nozzletemp\", params: [0] }],\n    steps: [\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Start\",\n        buttonActions: [{ type: \"continue\", params: [] }],\n        text:\n          \"To print, you have to have a material loaded into the 3D printer's extruder. The material is called filament, and the extruder is the portion of the machine that moves and melts the filament used to print.%BREAK%The type of filament that came with your printer is PLA, a plant-based plastic that's safe and easy to print with!%BREAK%Press \\\"Start\\\" to begin.\"\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Preheat\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"nozzletemp\", params: [220] }\n        ],\n        text:\n          \"Your printer's nozzle has to be at the proper temperature to melt the filament when you load it. Press \\\"Preheat\\\" to heat up your printer's nozzle. Once it reaches 220 °C, it will be ready to load.%BREAK%Remember, it will be hot, so don't touch it!\"\n      },\n      {\n        layout: TutorialLayouts.ThermalGate,\n        minimumTemp: 220,\n        buttonText: \"Next\",\n        buttonActions: [{ type: \"continue\", params: [] }],\n        text: \"Please wait for the printer's nozzle to reach 220 °C\",\n        gateText:\n          'The nozzle has reached a temperature of 220 °C.%BREAK%Press \"Next\" to continue.'\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [{ type: \"continue\", params: [] }],\n        text:\n          \"You are now ready to load the filament!%BREAK%Take your roll and pull out the end from the storage slot in the side. Cut the bent end of the filament off at a 90 degree angle to make it easier to load.%BREAK%Hang the filament on the spool holder.\"\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [{ type: \"continue\", params: [] }],\n        text:\n          \"To load the filament, squeeze the silver lever next to the gears and push the cut end of the filament by hand into the tube.%BREAK%Push the filament all the way to the end of the tube until you see melted filament coming out of the nozzle.\"\n      },\n      {\n        layout: TutorialLayouts.ButtonMulti,\n        buttons: [\n          {\n            id: \"bCooldown\",\n            buttonText: \"Cooldown\",\n            buttonActions: [\n              { type: \"continue\", params: [] },\n              { type: \"nozzletemp\", params: [0] }\n            ]\n          },\n          {\n            id: \"bExit\",\n            buttonText: \"Exit\",\n            buttonActions: [{ type: \"exit\", params: [] }]\n          }\n        ],\n        text:\n          'Your filament is now loaded! If you are not ready to print now, press the \"Cooldown\" button so the printer\\'s extruder does not remain hot. If you are about to print something, press the \"Exit\" button to leave this tutorial while keeping the extruder preheated.'\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Exit\",\n        buttonActions: [{ type: \"exit\", params: [] }],\n        text:\n          'The printer\\'s extruder is now set to cool down. Press the \"Exit\" button to exit this tutorial.'\n      }\n    ]\n  },\n  unloadFilament: {\n    userVisable: true,\n    name: \"Unload Filament\",\n    description:\n      \"The steps required to remove a previously loaded filament from the printer\",\n    exitActions: [{ type: \"nozzletemp\", params: [0] }],\n    steps: [\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Preheat\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"nozzletemp\", params: [220] }\n        ],\n        text:\n          'To unload filament from the printer, the nozzle must be preheated because the filament is solid at room temperature and is consequently stuck inside the extruder.%BREAK%Press \"Preheat\" to start preheating the extruder to 220 °C.%BREAK%Remember that it will be hot, so don\\'t touch it!'\n      },\n      {\n        layout: TutorialLayouts.ThermalGate,\n        minimumTemp: 220,\n        buttonText: \"Next\",\n        buttonActions: [{ type: \"continue\", params: [] }],\n        text: \"Please wait for the printer's nozzle to reach 220 °C\",\n        gateText:\n          'The nozzle has reached a temperature of 220 °C.%BREAK%Press \"Next\" to continue.'\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Next\",\n        buttonActions: [{ type: \"continue\", params: [] }],\n        text:\n          \"To unload the filament, squeeze the silver lever next to the gears and push the filament until you see it coming out of the end of the nozzle. Then, pull the filament out of the tube in one fluid motion. This enures that the end is fully melted and will make it easier to remove from the Bowden tube.\"\n      },\n      {\n        layout: TutorialLayouts.ButtonMulti,\n        buttons: [\n          {\n            id: \"bCooldown\",\n            buttonText: \"Cooldown\",\n            buttonActions: [\n              { type: \"continue\", params: [] },\n              { type: \"nozzletemp\", params: [0] }\n            ]\n          },\n          {\n            id: \"bExit\",\n            buttonText: \"Exit\",\n            buttonActions: [{ type: \"exit\", params: [] }]\n          }\n        ],\n        text:\n          'Your filament is now unloaded! Rewrap the filament around the roll and put the end into the storage slot on the side.%BREAK%If you are not going to load a new filament into the machine, press the \"Cooldown\" button so the extruder does not stay hot.%BREAK%If you are going to load another filament into the machine, pressing \"Exit\" will exit this tutorial while leaving the extruder preheated.'\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Exit\",\n        buttonActions: [{ type: \"exit\", params: [] }],\n        text:\n          'The printer\\'s extruder is now set to cool down. Press the \"Exit\" button to exit this tutorial.'\n      }\n    ]\n  },\n  printTestCube: {\n    userVisable: true,\n    name: \"Test Print\",\n    description:\n      \"Print a small object to test the functionality of your printer\",\n    exitActions: [\n      { type: \"nozzletemp\", params: [0] },\n      { type: \"bedtemp\", params: [0] }\n    ],\n    steps: [\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Preheat\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"nozzletemp\", params: [220] },\n          { type: \"bedtemp\", params: [50] }\n        ],\n        text:\n          'To ensure that the printer is setup correctly, this process will initiate a quick test print.%BREAK%Ensure that there is filament loaded into the machine and then press \"Preheat\" to begin'\n      },\n      {\n        layout: TutorialLayouts.DualThermalGate,\n        minimumExtruderTemp: 220,\n        minimumBedTemp: 50,\n        buttonText: \"Print\",\n        buttonActions: [\n          { type: \"continue\", params: [] },\n          { type: \"printtest\", params: [] }\n        ],\n        text:\n          \"Please wait for the printer's nozzle to reach 220 °C and for the bed to reach 60 °C.\",\n        gateText: 'Preheat complete.%BREAK%Press \"Print\" to continue.'\n      },\n      {\n        layout: TutorialLayouts.ButtonMulti,\n        buttons: [\n          {\n            id: \"bYes\",\n            buttonText: \"Yes\",\n            buttonActions: [{ type: \"jumpto\", params: [4] }]\n          },\n          {\n            id: \"bNo\",\n            buttonText: \"No\",\n            buttonActions: [\n              { type: \"continue\", params: [] },\n              { type: \"nozzletemp\", params: [0] },\n              { type: \"bedtemp\", params: [0] }\n            ]\n          }\n        ],\n        text:\n          \"Please wait for the print to complete.%BREAK%Did the print pop off or curl up off of the bed while printing?\"\n      },\n      {\n        layout: TutorialLayouts.ButtonSingle,\n        buttonText: \"Exit\",\n        buttonActions: [{ type: \"exit\", params: [] }],\n        text: \"Congratulations, your printer is now properly setup for use!\"\n      },\n      {\n        layout: TutorialLayouts.ButtonMulti,\n        buttons: [\n          {\n            id: \"bCalibrate\",\n            buttonText: \"Recalibrate\",\n            buttonActions: [\n              { type: \"exit\", params: [\"request-calibration\"] },\n              { type: \"nozzletemp\", params: [0] },\n              { type: \"bedtemp\", params: [0] }\n            ]\n          },\n          {\n            id: \"bExit\",\n            buttonText: \"Exit\",\n            buttonActions: [\n              { type: \"exit\", params: [\"\"] },\n              { type: \"nozzletemp\", params: [0] },\n              { type: \"bedtemp\", params: [0] }\n            ]\n          }\n        ],\n        text:\n          \"Do you want to repeat the calibration process, or skip calibration and exit for now?\"\n      }\n    ]\n  }\n};\n\nexport default TutorialDefinitions;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction TutorialThermometer(props) {\n  return (\n    <div className=\"big-thermometer\">\n      <div className=\"big-thermometer-container\">\n        <div className=\"big-thermometer-bulb-container\"></div>\n        <div className=\"big-thermometer-indicator-container\">\n          <div\n            className=\"big-thermometer-indicator\"\n            style={{\n              height: `${\n                15 + 85 * ((props.value - props.min) / (props.max - props.min))\n              }%`\n            }}\n          ></div>\n          <div className=\"big-thermometer-bulb\">\n            <span>{props.value}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TutorialThermometer;\n","class GCodeBuilder {\n  constructor() {\n    this._actions = [];\n  }\n\n  build() {\n    let retString = \"\";\n    for (let i = 0; i < this._actions.length; i++) {\n      retString += this._actions[i] + \"\\n\";\n    }\n    return retString;\n  }\n\n  addCommand(command) {\n    this._actions.push(command);\n  }\n}\n\nfunction GSetZProbeOffset(offset) {\n  return `M851 Z${offset}`;\n}\n\nfunction GStoreParams() {\n  return `M500`;\n}\n\nfunction GLoadParams() {\n  return `M501`;\n}\n\nfunction Home() {\n  return `G28`;\n}\n\nfunction BlLevel() {\n  return `G29 T`;\n}\n\n/**\n *\n * @param {Boolean} x Home the X axis?\n * @param {Boolean} y Home the Y axis?\n * @param {Boolean} z Home the Z axis?\n */\nfunction GMoveToOrigin(x, y, z) {\n  if (x && y && z) {\n    return `G28`;\n  } else {\n    return `G28${x ? \"X \" : \"\"}${y ? \"Y \" : \"\"}${x ? \"Z \" : \"\"}`;\n  }\n}\n\nfunction GSetToAbsolutePositioning() {\n  return \"G90\";\n}\n\nfunction GSetSoftwareEndstops(enabled) {\n  if (enabled) {\n    return \"M211 S1\";\n  } else {\n    return \"M211 S0\";\n  }\n}\n\nfunction GLinearMove(doX, doY, doZ, xPos, yPos, zPos) {\n  if (doX || doY || doZ) {\n    return `G1${doX ? ` X${xPos}` : \"\"}${doY ? ` Y${yPos}` : \"\"}${\n      doZ ? ` Z${zPos}` : \"\"\n    }`;\n  } else {\n    return \"\";\n  }\n}\n\nfunction GSetExtruderTemp(temp) {\n  return `M104 S${temp}`;\n}\n\nfunction GSetBedTemp(temp) {\n  return `M140 S${temp}`;\n}\n\nfunction GDisableAllMotors() {\n  return `M18`;\n}\n\nfunction GEnableAllMotors() {\n  return `M17`;\n}\n\nexport {\n  GCodeBuilder,\n  GSetZProbeOffset,\n  GStoreParams,\n  GLoadParams,\n  GMoveToOrigin,\n  GSetToAbsolutePositioning,\n  GSetSoftwareEndstops,\n  Home,\n  BlLevel,\n  GLinearMove,\n  GSetExtruderTemp,\n  GSetBedTemp,\n  GEnableAllMotors,\n  GDisableAllMotors\n};\n","import React from \"react\";\nconst TempContext = React.createContext({\n  bedTarget: 0,\n  nozzleTarget: 0,\n  bed: 0,\n  nozzle: 0,\n  setBedTarget: (temp) => {},\n  setNozzleTarget: (temp) => {},\n  setBed: (temp) => {},\n  setNozzle: (temp) => {},\n  steppersEnabled: true,\n  setSteppersEnabled: (val) => {}\n});\n\nexport default TempContext;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TutorialDefinitions from \"../TutorialDefinitions\";\nimport TutorialLayouts from \"../TutorialLayouts\";\nimport {\n  Button,\n  Container,\n  Grid,\n  IconButton,\n  Typography,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n  AppBar\n} from \"@material-ui/core\";\nimport { ArrowDownward, ArrowUpward, CloseSharp } from \"@material-ui/icons\";\nimport TutorialThermometer from \"../TutorialThermometer/TutorialThermometer\";\nimport {\n  GCodeBuilder,\n  GSetZProbeOffset,\n  GStoreParams,\n  GLoadParams,\n  GMoveToOrigin,\n  GSetToAbsolutePositioning,\n  GSetSoftwareEndstops,\n  GLinearMove,\n  GSetExtruderTemp,\n  GSetBedTemp,\n  Home,\n  BlLevel\n} from \"../GCodeBuilder\";\n\nimport TempContext from \"../../../TempContext\";\n\nconst styles = (theme) => ({\n  tutorialWindow: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 1250,\n    backgroundColor: \"#303030\"\n  },\n  tutorialButton: {\n    // backgroundColor: \"rgb(42, 57, 131)\",\n    fontSize: \"20px\"\n  },\n  tutorialCloseButton: {\n    float: \"right\",\n    marginRight: -8\n  },\n  tutorialText: {\n    fontSize: \"20px\"\n  },\n  tutorialContainer: {\n    padding: \"8px\",\n    height: \"calc(100% - 48px)\"\n  },\n  tutorialHeading: {\n    paddingTop: \"8px\"\n  },\n  layoutSingleGrid: {\n    height: \"100%\",\n    paddingLeft: \"16px\",\n    paddingRight: \"16px\"\n  },\n  layoutSingleGridText: {\n    // height: \"50%\"\n    flexGrow: 1\n  },\n  layoutSingleGridButton: {\n    height: \"80px\",\n    textAlign: \"center\"\n  },\n  layoutSingleGridTop: {\n    height: \"50px\"\n  },\n  layoutSingleGridAxisControl: {\n    height: \"550px\"\n  },\n  layoutSingleGridThermalControl: {\n    height: \"550px\"\n  },\n  axisButton: {\n    marginTop: \"2px\",\n    marginBottom: \"2px\",\n    fontSize: \"20px\",\n    textTransform: \"none\",\n    width: \"120px\"\n  },\n  thermoLabel: {\n    textAlign: \"center\",\n    fontSize: \"26px\"\n  }\n});\n\nclass Tutorial extends React.Component {\n  constructor(props) {\n    super(props);\n    this.evTutorialClose =\n      props.onTutorialClose ||\n      (() => {\n        console.log(\"Unhandled tutorial close event\");\n      });\n    this.state = {\n      tutorialId: this.props.tutorialName || null,\n      tutorialReady: false,\n      currentStep: 0,\n      exitWarning: false\n    };\n    this.tutorial = null;\n    this.offset = 0;\n  }\n\n  static contextType = TempContext;\n\n  componentDidMount() {\n    if (this.state.tutorialId && TutorialDefinitions[this.state.tutorialId]) {\n      this.tutorial = TutorialDefinitions[this.state.tutorialId];\n      this.setState({ tutorialReady: true, currentStep: 0 });\n    } else {\n      console.log(\n        `Unknown tutorial id \"${this.state.tutorialId}\", closing tutorial`\n      );\n      this.evTutorialClose();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.tutorial) {\n      const currentStep = this.tutorial.steps[this.state.currentStep];\n      if (currentStep.layout === TutorialLayouts.ThermalGate) {\n        //We only need to trigger ThermalGates when they are displayed\n      }\n    }\n  }\n\n  attemptExitActions() {\n    this.processButtonActions(this.tutorial.exitActions);\n  }\n\n  attemptCloseTutorial(reason) {\n    if (\n      this.state.currentStep === 0 ||\n      this.currentStep === this.tutorial.steps.length - 1\n    ) {\n      //This is the first or last step of the tutorial, so we can just close without any warnings\n      this.evTutorialClose(reason);\n    } else {\n      //The tutorial is in-progress, confirm that the user really wishes to exit\n      this.setState({ exitWarning: true });\n    }\n  }\n\n  attemptAxisMove(axis, amount) {\n    console.log(`Attempting to move on the ${axis} axis by ${amount}mm`);\n    if (axis.toLowerCase() === \"z\") {\n      this.offset += amount;\n      let codeBuilder = new GCodeBuilder();\n      codeBuilder.addCommand(GSetToAbsolutePositioning());\n      codeBuilder.addCommand(\n        GLinearMove(false, false, true, null, null, this.offset)\n      );\n      this.sendGcode(codeBuilder.build());\n    }\n  }\n\n  attemptHome() {\n    console.log(`Attempting to home`);\n    let codeBuilder = new GCodeBuilder();\n    codeBuilder.addCommand(Home());\n    this.sendGcode(codeBuilder.build());\n  }\n\n  attemptBlLevel() {\n    console.log(`Attempting to BL Level`);\n    let codeBuilder = new GCodeBuilder();\n    codeBuilder.addCommand(BlLevel());\n    this.sendGcode(codeBuilder.build());\n  }\n\n  attemptXYMoveTo(x, y) {\n    console.log(`Attempting to move print head to x:${x}, y: ${y}`);\n    let codeBuilder = new GCodeBuilder();\n    codeBuilder.addCommand(GSetToAbsolutePositioning());\n    codeBuilder.addCommand(GLinearMove(true, true, true, 150, 150, 30));\n    codeBuilder.addCommand(GLinearMove(true, true, true, x, y, 0));\n    this.sendGcode(codeBuilder.build());\n  }\n\n  attemptZOffsetStart() {\n    console.log(`Attempting to start z offset process`);\n    let codeBuilder = new GCodeBuilder();\n    codeBuilder.addCommand(GSetZProbeOffset(0.0));\n    codeBuilder.addCommand(GStoreParams());\n    codeBuilder.addCommand(GLoadParams());\n    codeBuilder.addCommand(GMoveToOrigin(true, true, true));\n    codeBuilder.addCommand(GSetToAbsolutePositioning());\n    codeBuilder.addCommand(GSetSoftwareEndstops(false));\n    codeBuilder.addCommand(GLinearMove(true, true, true, 150, 150, 0.0));\n    this.sendGcode(codeBuilder.build());\n    this.offset = 0;\n  }\n\n  attemptSaveZOffset() {\n    console.log(`Attempting to save z offset`);\n    let codeBuilder = new GCodeBuilder();\n    codeBuilder.addCommand(GSetToAbsolutePositioning());\n    codeBuilder.addCommand(GSetZProbeOffset(this.offset));\n    codeBuilder.addCommand(GSetSoftwareEndstops(true));\n    codeBuilder.addCommand(GStoreParams());\n    codeBuilder.addCommand(GLoadParams());\n    codeBuilder.addCommand(GMoveToOrigin(true, true, true));\n    this.sendGcode(codeBuilder.build());\n  }\n\n  attemptSetBedTemp(temp) {\n    console.log(`Attempting to set bed temperature to ${temp} °C`);\n    this.context.setBedTarget(temp);\n    let codeBuilder = new GCodeBuilder();\n    codeBuilder.addCommand(GSetBedTemp(temp));\n    this.sendGcode(codeBuilder.build());\n  }\n\n  attemptSetExtruderTemp(temp) {\n    console.log(`Attempting to set extruder temperature to ${temp} °C`);\n    this.context.setNozzleTarget(temp);\n    let codeBuilder = new GCodeBuilder();\n    codeBuilder.addCommand(GSetExtruderTemp(temp));\n    this.sendGcode(codeBuilder.build());\n  }\n\n  attemptTestPrint() {\n    fetch(\n      `http://localhost:8080/api/v1/job/BLTouchCalibrationTest.gcode`,\n      {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" }\n      }\n    );\n  }\n\n  tutorialButtonPressed(id) {\n    const currentStep = this.tutorial.steps[this.state.currentStep];\n    if (\n      currentStep.layout === TutorialLayouts.ButtonSingle ||\n      currentStep.layout === TutorialLayouts.AxisManipulation ||\n      currentStep.layout === TutorialLayouts.ThermalGate ||\n      currentStep.layout === TutorialLayouts.DualThermalGate\n    ) {\n      this.processButtonActions(currentStep.buttonActions);\n    } else if (currentStep.layout === TutorialLayouts.ButtonMulti) {\n      this.processButtonActions(\n        currentStep.buttons.find((b) => {\n          return b.id === id;\n        }).buttonActions\n      );\n    } else {\n      //Do correct button selection logic\n    }\n  }\n\n  sendGcode(gcode) {\n    fetch(`http://localhost:8080/api/v1/send`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        gcode: gcode\n      })\n    });\n  }\n\n  processButtonActions(actions) {\n    for (const action of actions) {\n      switch (action.type) {\n        case \"continue\":\n          this.actionContinue();\n          break;\n        case \"home\":\n          //Attempt to move the extruder on the x and y axis\n          this.attemptHome();\n          break;\n        case \"bl_level\":\n          //Attempt to move the extruder on the x and y axis\n          this.attemptBlLevel();\n          break;\n        case \"movexy\":\n          //Attempt to move the extruder on the x and y axis\n          this.attemptXYMoveTo(action.params[0], action.params[1]);\n          break;\n        case \"jumpto\":\n          this.actionJumpTo(action.params[0]);\n          break;\n        case \"exit\":\n          this.evTutorialClose(\n            action.params.length > 0 ? action.params[0] : \"\"\n          );\n          break;\n        case \"savezoffset\":\n          //Attempt to set the z offset from the current z position\n          this.attemptSaveZOffset();\n          break;\n        case \"nozzletemp\":\n          //Attempt to set extruder temp\n          this.attemptSetExtruderTemp(action.params[0]);\n          break;\n        case \"bedtemp\":\n          //Attempt to set bed temperature\n          this.attemptSetBedTemp(action.params[0]);\n          break;\n        case \"printtest\":\n          //Attempt to print test article\n          this.attemptTestPrint();\n          break;\n        case \"zoffsetstart\":\n          //Zero out the printer to start zoffset\n          this.attemptZOffsetStart();\n          break;\n        default:\n          console.log(\n            `Warning! Unhandled tutorial action type: \"${action.type}\"`\n          );\n      }\n    }\n  }\n\n  /**\n   * Attempts to continue to the next tutorial step\n   */\n  actionContinue() {\n    if (this.state.currentStep < this.tutorial.steps.length - 1) {\n      this.setState({ currentStep: this.state.currentStep + 1 });\n    }\n  }\n\n  /**\n   * Jumps the tutorial back (or forward) to a specific step\n   * @param {Number} step The index of the step\n   */\n  actionJumpTo(step) {\n    this.setState({ currentStep: step });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.tutorialWindow}>\n        <AppBar position=\"sticky\">\n          <Typography variant=\"h6\" style={{ paddingLeft: 8 }}>\n            300x\n          </Typography>\n        </AppBar>\n        {this.state.tutorialReady && (\n          <Container className={classes.tutorialContainer}>\n            <Grid container>\n              <Grid item xs={10}>\n                <Typography variant=\"h5\" className={classes.tutorialHeading}>\n                  {this.tutorial.name}\n                </Typography>\n              </Grid>\n              <Grid item xs={2}>\n                <IconButton\n                  className={classes.tutorialCloseButton}\n                  onClick={() => {\n                    this.attemptCloseTutorial(\n                      this.props.firstBoot ? \"skip\" : null\n                    );\n                  }}\n                >\n                  <CloseSharp />\n                </IconButton>\n              </Grid>\n            </Grid>\n            {this.renderTutorialPage(classes)}\n          </Container>\n        )}\n        <Dialog open={this.state.exitWarning}>\n          <DialogTitle>Exit Tutorial</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Are you sure you want to exit this tutorial?\n            </DialogContentText>\n            <DialogActions>\n              <Button\n                onClick={() => {\n                  this.attemptExitActions();\n                  this.evTutorialClose();\n                }}\n              >\n                Yes\n              </Button>\n              <Button\n                autoFocus\n                onClick={() => {\n                  this.setState({ exitWarning: false });\n                }}\n              >\n                No\n              </Button>\n            </DialogActions>\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n\n  renderTutorialPage(classes) {\n    const currentStep = this.tutorial.steps[this.state.currentStep];\n\n    if (currentStep.layout === TutorialLayouts.ButtonSingle) {\n      return (\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"stretch\"\n          alignContent=\"stretch\"\n          justify=\"space-between\"\n          className={classes.layoutSingleGrid}\n        >\n          <Grid item className={classes.layoutSingleGridTop}></Grid>\n          <Grid item className={classes.layoutSingleGridText}>\n            {currentStep.text.split(\"%BREAK%\").map((textSegment) => {\n              return (\n                <Typography variant=\"body1\" className={classes.tutorialText}>\n                  {textSegment}\n                </Typography>\n              );\n            })}\n          </Grid>\n          <Grid item className={classes.layoutSingleGridButton}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              className={classes.tutorialButton}\n              onClick={() => {\n                this.tutorialButtonPressed();\n              }}\n            >\n              {currentStep.buttonText}\n            </Button>\n          </Grid>\n        </Grid>\n      );\n    } else if (currentStep.layout === TutorialLayouts.AxisManipulation) {\n      return (\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"stretch\"\n          alignContent=\"stretch\"\n          justify=\"space-between\"\n          className={classes.layoutSingleGrid}\n        >\n          <Grid item className={classes.layoutSingleGridTop}></Grid>\n          <Grid item className={classes.layoutSingleGridText}>\n            {currentStep.text.split(\"%BREAK%\").map((textSegment) => {\n              return (\n                <Typography variant=\"body1\" className={classes.tutorialText}>\n                  {textSegment}\n                </Typography>\n              );\n            })}\n          </Grid>\n          <Grid item className={classes.layoutSingleGridAxisControl}>\n            <Grid container justify=\"center\">\n              {currentStep.axisX && this.renderAxisControl(\"X\", classes)}\n              {currentStep.axisY && this.renderAxisControl(\"Y\", classes)}\n              {currentStep.axisZ && this.renderAxisControl(\"Z\", classes)}\n            </Grid>\n          </Grid>\n          <Grid item className={classes.layoutSingleGridButton}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              className={classes.tutorialButton}\n              onClick={() => {\n                this.tutorialButtonPressed();\n              }}\n            >\n              {currentStep.buttonText}\n            </Button>\n          </Grid>\n        </Grid>\n      );\n    } else if (currentStep.layout === TutorialLayouts.ButtonMulti) {\n      return (\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"stretch\"\n          alignContent=\"stretch\"\n          justify=\"space-between\"\n          className={classes.layoutSingleGrid}\n        >\n          <Grid item className={classes.layoutSingleGridTop}></Grid>\n          <Grid item className={classes.layoutSingleGridText}>\n            {currentStep.text.split(\"%BREAK%\").map((textSegment) => {\n              return (\n                <Typography variant=\"body1\" className={classes.tutorialText}>\n                  {textSegment}\n                </Typography>\n              );\n            })}\n          </Grid>\n          <Grid item className={classes.layoutSingleGridButton}>\n            <Grid container justify=\"space-around\">\n              {currentStep.buttons.map((button) => {\n                return (\n                  <Grid item xs={6}>\n                    <Button\n                      color=\"primary\"\n                      variant=\"contained\"\n                      className={classes.tutorialButton}\n                      onClick={() => {\n                        this.tutorialButtonPressed(button.id);\n                      }}\n                      id={button.id}\n                    >\n                      {button.buttonText}\n                    </Button>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </Grid>\n        </Grid>\n      );\n    } else if (currentStep.layout === TutorialLayouts.ThermalGate) {\n      return (\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"stretch\"\n          alignContent=\"stretch\"\n          justify=\"space-between\"\n          className={classes.layoutSingleGrid}\n        >\n          <Grid item className={classes.layoutSingleGridTop}></Grid>\n          <Grid item className={classes.layoutSingleGridText}>\n            {this.context.nozzle >= currentStep.minimumTemp\n              ? currentStep.gateText.split(\"%BREAK%\").map((textSegment) => {\n                  return (\n                    <Typography\n                      variant=\"body1\"\n                      className={classes.tutorialText}\n                    >\n                      {textSegment}\n                    </Typography>\n                  );\n                })\n              : currentStep.text.split(\"%BREAK%\").map((textSegment) => {\n                  return (\n                    <Typography\n                      variant=\"body1\"\n                      className={classes.tutorialText}\n                    >\n                      {textSegment}\n                    </Typography>\n                  );\n                })}\n          </Grid>\n          <Grid item className={classes.layoutSingleGridThermalControl}>\n            <Grid container justify=\"center\">\n              <TutorialThermometer\n                min={0}\n                max={400}\n                value={this.context.nozzle}\n              ></TutorialThermometer>\n            </Grid>\n          </Grid>\n          <Grid item className={classes.layoutSingleGridButton}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={!(this.context.nozzle >= currentStep.minimumTemp)}\n              className={classes.tutorialButton}\n              onClick={() => {\n                this.tutorialButtonPressed();\n              }}\n            >\n              {currentStep.buttonText}\n            </Button>\n          </Grid>\n        </Grid>\n      );\n    } else if (currentStep.layout === TutorialLayouts.DualThermalGate) {\n      return (\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"stretch\"\n          alignContent=\"stretch\"\n          justify=\"space-between\"\n          className={classes.layoutSingleGrid}\n        >\n          <Grid item className={classes.layoutSingleGridTop}></Grid>\n          <Grid item className={classes.layoutSingleGridText}>\n            {this.context.nozzle >= currentStep.minimumExtruderTemp &&\n            this.context.bed >= currentStep.minimumBedTemp\n              ? currentStep.gateText.split(\"%BREAK%\").map((textSegment) => {\n                  return (\n                    <Typography\n                      variant=\"body1\"\n                      className={classes.tutorialText}\n                    >\n                      {textSegment}\n                    </Typography>\n                  );\n                })\n              : currentStep.text.split(\"%BREAK%\").map((textSegment) => {\n                  return (\n                    <Typography\n                      variant=\"body1\"\n                      className={classes.tutorialText}\n                    >\n                      {textSegment}\n                    </Typography>\n                  );\n                })}\n          </Grid>\n          <Grid item className={classes.layoutSingleGridThermalControl}>\n            <Grid container justify=\"center\">\n              <Grid item>\n                <TutorialThermometer\n                  min={0}\n                  max={400}\n                  value={this.context.bed}\n                ></TutorialThermometer>\n                <Typography variant=\"body1\" className={classes.thermoLabel}>\n                  Bed\n                </Typography>\n              </Grid>\n              <Grid item>\n                <TutorialThermometer\n                  min={0}\n                  max={400}\n                  value={this.context.nozzle}\n                ></TutorialThermometer>\n                <Typography variant=\"body1\" className={classes.thermoLabel}>\n                  Extruder\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item className={classes.layoutSingleGridButton}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={\n                !(\n                  this.context.nozzle >= currentStep.minimumExtruderTemp &&\n                  this.context.bed >= currentStep.minimumBedTemp\n                )\n              }\n              className={classes.tutorialButton}\n              onClick={() => {\n                this.tutorialButtonPressed();\n              }}\n            >\n              {currentStep.buttonText}\n            </Button>\n          </Grid>\n        </Grid>\n      );\n    }\n  }\n\n  renderAxisControl(axis, classes) {\n    return (\n      <Grid item container direction=\"column\" alignItems=\"center\" xs={4}>\n        <Grid item>\n          <IconButton disabled>\n            <ArrowUpward></ArrowUpward>\n          </IconButton>\n          {/* <Button disabled>\n            {(axis === \"X\" && \"Left\") ||\n              (axis === \"Y\" && \"Further\") ||\n              (axis === \"Z\" && \"Up\")}\n          </Button> */}\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            className={classes.axisButton}\n            onClick={() => {\n              this.attemptAxisMove(axis, 1.0);\n            }}\n          >\n            +1.0mm\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            className={classes.axisButton}\n            onClick={() => {\n              this.attemptAxisMove(axis, 0.1);\n            }}\n          >\n            +0.1mm\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            className={classes.axisButton}\n            onClick={() => {\n              this.attemptAxisMove(axis, 0.05);\n            }}\n          >\n            +0.05mm\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            className={classes.axisButton}\n            onClick={() => {\n              this.attemptAxisMove(axis, 0.01);\n            }}\n          >\n            +0.01mm\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button disabled>{axis}</Button>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            className={classes.axisButton}\n            onClick={() => {\n              this.attemptAxisMove(axis, -0.01);\n            }}\n          >\n            -0.01mm\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            className={classes.axisButton}\n            onClick={() => {\n              this.attemptAxisMove(axis, -0.05);\n            }}\n          >\n            -0.05mm\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            className={classes.axisButton}\n            onClick={() => {\n              this.attemptAxisMove(axis, -0.1);\n            }}\n          >\n            -0.1mm\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            className={classes.axisButton}\n            onClick={() => {\n              this.attemptAxisMove(axis, -1.0);\n            }}\n          >\n            -1.0mm\n          </Button>\n        </Grid>\n        <Grid item>\n          {/* <Button disabled>\n            {(axis === \"X\" && \"Right\") ||\n              (axis === \"Y\" && \"Closer\") ||\n              (axis === \"Z\" && \"Down\")}\n          </Button> */}\n          <IconButton disabled>\n            <ArrowDownward></ArrowDownward>\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Tutorial);\n","import { Button, Grid, Typography } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport OptionCard from \"../../Common/OptionCard/OptionCard\";\nimport HotspotConnect from \"../NetworkType/HotspotConnect\";\nimport {\n  setStorage,\n  getStorage,\n  removeStorage\n} from \"../../../Utility/helpers\";\nimport WifiConnect from \"../NetworkType/WifiConnect\";\nimport {\n  ArrowForward,\n  Language,\n  SettingsInputHdmi,\n  SettingsRemote\n} from \"@material-ui/icons\";\n\nclass NetworkSelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stage: \"internet-enable\",\n      enableInternet: false,\n      selectedInterface: null,\n      enableHotspot: false\n    };\n  }\n\n  componentDidMount() {\n    if (getStorage(\"initialUpdate\") === 1) {\n      setStorage(\"initialUpdate\", 2);\n      this.props.setStep(2);\n    }\n  }\n\n  complete() {\n    setStorage(\"hotspot\", this.state.enableHotspot);\n    setStorage(\"internet\", this.state.enableInternet);\n    setStorage(\"networkProfile\", this.state.selectedInterface);\n    // if (this.state.enableHotspot) {\n    //   fetch(`http://localhost:8990/hotspot/connect`, {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\"\n    //     }\n    //   });\n    // } else {\n    //   fetch(`http://localhost:8990/hotspot/disconnect`, {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\"\n    //     }\n    //   });\n    // }\n    if (this.props.setNewType) {\n      this.props.setNewType(this.state.selectedInterface);\n      this.props.setStep(0);\n    } else {\n      if (this.state.enableInternet) {\n        this.props.setStep(1);\n      } else {\n        this.props.setStep(2);\n      }\n    }\n  }\n\n  render() {\n    if (this.state.stage === \"internet-enable\") {\n      return (\n        <>\n          {this.renderHeader()}\n          <Language\n            style={{\n              fontSize: 100,\n              width: \"100%\",\n              textAlign: \"center\",\n              marginBottom: 20\n            }}\n          />\n          <Typography variant=\"h5\">\n            Would you like to connect this printer to the internet?\n          </Typography>\n\n          <Typography variant=\"h6\">\n            Connecting to the internet enables updates.\n          </Typography>\n          <OptionCard\n            title=\"Yes\"\n            onClick={() => {\n              this.setState({ enableInternet: true, stage: \"internet-select\" });\n            }}\n          ></OptionCard>\n          <OptionCard\n            title=\"No\"\n            onClick={() => {\n              this.setState({\n                enableInternet: false,\n                stage: \"hotspot-enable\",\n                selectedInterface: \"none\"\n              });\n            }}\n          ></OptionCard>\n        </>\n      );\n    }\n    if (this.state.stage === \"internet-select\") {\n      return (\n        <>\n          {this.renderHeader()}\n          <Language\n            style={{\n              fontSize: 100,\n              width: \"100%\",\n              textAlign: \"center\",\n              marginBottom: 20\n            }}\n          />\n          <Typography variant=\"h5\">\n            How would you like to connect this printer?\n          </Typography>\n          <OptionCard\n            title=\"Wi-Fi\"\n            onClick={() => {\n              this.setState({\n                selectedInterface: \"wifi\",\n                stage: \"wifi-select\"\n              });\n            }}\n          ></OptionCard>\n          <OptionCard\n            title=\"Ethernet\"\n            onClick={() => {\n              this.setState({\n                selectedInterface: \"ethernet\",\n                stage: \"ethernet-check\"\n              });\n            }}\n          ></OptionCard>\n        </>\n      );\n    }\n    if (this.state.stage === \"ethernet-check\") {\n      return (\n        <>\n          {this.renderHeader()}\n          <SettingsInputHdmi\n            style={{\n              fontSize: 100,\n              width: \"100%\",\n              textAlign: \"center\",\n              marginBottom: 20\n            }}\n          />\n          <Typography variant=\"h5\">\n            Please verify that the ethernet cable is properly connected to your\n            device.\n          </Typography>\n          <OptionCard\n            title=\"Done\"\n            onClick={() => {\n              this.setState({ stage: \"hotspot-enable\" });\n            }}\n          ></OptionCard>\n        </>\n      );\n    }\n    if (this.state.stage === \"wifi-select\") {\n      return (\n        <>\n          {this.renderHeader()}\n          <WifiConnect\n            setStep={(step) => {\n              this.complete();\n            }}\n            setShowSnack={this.props.setShowSnack}\n            setSnackMessage={this.props.setSnackMessage}\n            handleSnackClose={this.props.handleSnackClose}\n            setConnectWifi={() => {}}\n            onGoBack={() => {\n              this.setState({ stage: \"internet-select\" });\n            }}\n          ></WifiConnect>\n        </>\n      );\n    }\n\n    if (this.state.stage === \"hotspot-enable\") {\n      return (\n        <>\n          {this.renderHeader()}\n          <SettingsRemote\n            style={{\n              fontSize: 100,\n              width: \"100%\",\n              textAlign: \"center\",\n              marginBottom: 20\n            }}\n          />\n          <Typography variant=\"h5\">\n            Would you like to enable the printer's wireless hotspot?\n          </Typography>\n          <Typography variant=\"h6\">\n            This allows you to remotely connect/control your printer.\n          </Typography>\n          <OptionCard\n            title=\"Yes\"\n            onClick={() => {\n              this.setState({ enableHotspot: true, stage: \"config-hotspot\" });\n            }}\n          ></OptionCard>\n          <OptionCard\n            title=\"No\"\n            onClick={() => {\n              this.complete();\n            }}\n          ></OptionCard>\n        </>\n      );\n    }\n    if (this.state.stage === \"config-hotspot\") {\n      return (\n        <HotspotConnect\n          setStep={() => {\n            this.complete();\n          }}\n          setConnectWifi={() => {}}\n        />\n      );\n    }\n  }\n\n  renderHeader() {\n    return (\n      <Grid\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n        style={{ display: \"flex\", marginBottom: 20 }}\n      >\n        <h2 style={{ fontSize: 28 }}>Network</h2>\n        <Button\n          aria-label=\"skip\"\n          endIcon={<ArrowForward />}\n          onClick={() => {\n            this.setState(\n              {\n                enableInternet: false,\n                stage: \"hotspot-enable\",\n                selectedInterface: \"none\"\n              },\n              () => {\n                this.complete();\n              }\n            );\n          }}\n        >\n          Skip\n        </Button>\n      </Grid>\n    );\n  }\n}\n\n// setStep={setStep}\n// setShowSnack={setShowSnack}\n// setSnackMessage={setSnackMessage}\n// handleSnackClose={handleSnackClose}\n// setConnectWifi={setConnectWifi}\n// />\n\nexport default NetworkSelect;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Container,\n  Grid,\n  Snackbar,\n  Typography\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport PrinterType from \"./PrinterType/PrinterType\";\nimport NetworkSettings from \"./NetworkType/NetworkSettings\";\nimport NetworkType from \"./NetworkType/NetworkType\";\nimport UserLevel from \"./UserLevel/UserLevel\";\nimport Update from \"../Menu/MenuTabs/Update\";\nimport Tutorial from \"../Tutorials/Tutorial/Tutorial\";\nimport { setStorage, getStorage } from \"../../Utility/helpers\";\nimport NetworkSelect from \"./NetworkSelect/NetworkSelect\";\nconst useStyles = makeStyles({\n  container: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  welcome: {\n    textAlign: \"center\",\n    height: \"100%\",\n    \"& h2\": {\n      fontSize: \"92px\"\n    },\n    \"& h3\": {\n      fontSize: \"32px\",\n      marginTop: \"16px\"\n    }\n  }\n});\nconst Setup = ({ handleOnboarding }) => {\n  const classes = useStyles();\n\n  const [step, setStep] = useState(null);\n  const [showSnack, setShowSnack] = useState(false);\n  const [snackMessage, setSnackMessage] = useState(\"\");\n  const handleSnackClose = () => {\n    setShowSnack(() => false);\n    setSnackMessage(\"\");\n  };\n\n  return (\n    <Container className={classes.container}>\n      {step === null && (\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"space-around\"\n          alignItems=\"center\"\n          spacing={3}\n          className={classes.welcome}\n        >\n          <Grid\n            item\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{ flex: 1 }}\n          >\n            <Typography variant=\"h2\">Welcome</Typography>\n            <Typography variant=\"h3\">Let's get you set up</Typography>\n          </Grid>\n          <Grid\n            item\n            container\n            alignItems=\"flex-start\"\n            justify=\"center\"\n            style={{ flex: 1 }}\n          >\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color=\"secondary\"\n              style={{ width: \"190px\", height: \"65px\", fontSize: \"18px\" }}\n              onClick={() => setStep(0)}\n            >\n              Get Started\n            </Button>\n          </Grid>\n        </Grid>\n      )}\n      {step === 0 && (\n        <NetworkSelect\n          setStep={setStep}\n          setShowSnack={setShowSnack}\n          setSnackMessage={setSnackMessage}\n          handleSnackClose={handleSnackClose}\n        />\n        // <NetworkType\n        //   setStep={setStep}\n        //   setShowSnack={setShowSnack}\n        //   setSnackMessage={setSnackMessage}\n        //   handleSnackClose={handleSnackClose}\n        //   setNewType={() => {}}\n        // />\n      )}\n      {step === 1 && (\n        <Update\n          autoCheck={false}\n          handleOnboarding={handleOnboarding}\n          firstBoot={true}\n          setStep={setStep}\n        />\n      )}\n      {step === 2 && <PrinterType setStep={setStep} />}\n      {step === 3 && (\n        <NetworkSettings\n          setStep={setStep}\n          setShowSnack={setShowSnack}\n          setSnackMessage={setSnackMessage}\n          handleSnackClose={handleSnackClose}\n          setNewType={() => {}}\n        />\n      )}\n      {step === 4 && (\n        <UserLevel handleOnboarding={handleOnboarding} setStep={setStep} />\n      )}\n      {step === 5 && (\n        <Tutorial\n          tutorialName=\"bedLevelCornerCalibration\"\n          handleOnboarding={handleOnboarding}\n          firstBoot={true}\n          setStep={setStep}\n          onTutorialClose={(reason) => {\n            setStep(6);\n          }}\n        />\n      )}\n      {step === 6 && (\n        <Tutorial\n          tutorialName=\"loadFilament\"\n          handleOnboarding={handleOnboarding}\n          firstBoot={true}\n          setStep={setStep}\n          onTutorialClose={(reason) => {\n            handleOnboarding(getStorage(\"userMode\"));\n          }}\n        />\n      )}\n      <Snackbar\n        open={showSnack}\n        autoHideDuration={6000}\n        message={snackMessage}\n        onClose={handleSnackClose}\n      ></Snackbar>\n    </Container>\n  );\n};\n\nexport default Setup;\n","import React from 'react';\nimport { Tabs, Tab } from '@material-ui/core';\n\nimport './TabList.css';\nconst TabList = ({ tabList, handleTabClick, activeTab, disabledNav }) => {\n  return (\n    <Tabs value={activeTab} onChange={handleTabClick} centered>\n      {tabList.map((tab) => (\n        <Tab\n          style={{ height: '70px', fontSize: '20px', minWidth: '140px' }}\n          label={tab}\n          key={`tab - ${tab}`}\n          disabled={disabledNav}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nexport default TabList;\n","import React, { useState, useEffect } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Container, Grid, Typography } from \"@material-ui/core\";\nimport { Button, LinearProgress } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPause, faPlay, faStop } from \"@fortawesome/free-solid-svg-icons\";\nimport { PlayArrow, Pause, Stop } from \"@material-ui/icons\";\n\nimport TutorialThermometer from \"../../Tutorials/TutorialThermometer/TutorialThermometer\";\nimport TempContext from \"../../../TempContext\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles({\n  buttonContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"10px\"\n  },\n  textCenter: {\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  }\n});\n\nconst PrintStatus = ({\n  lastMessage,\n  progressState,\n  setDisabledNav,\n  state,\n  statusText,\n  fileName\n}) => {\n  const classes = useStyles();\n  const [paused, setPaused] = useState(false);\n  const [value, setValue] = useState(0);\n\n  let sendGcode = function (gcode) {\n    fetch(`http://localhost:8080/api/v1/send`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        gcode: gcode\n      })\n    });\n  };\n\n  useEffect(() => {\n    if (progressState.completion !== value) {\n      setValue(progressState.completion);\n      console.log(value);\n    }\n  }, [progressState]);\n\n  return (\n    <>\n      <Container>\n        <Typography\n          variant=\"h4\"\n          style={{ marginTop: 35, width: \"100%\", textAlign: \"center\" }}\n        >\n          {statusText}: {fileName}\n        </Typography>\n        <div className=\"print-status-bar\" style={{ marginTop: 25 }}>\n          <BorderLinearProgress variant=\"determinate\" value={value} />\n          <Typography\n            variant=\"h6\"\n            style={{ width: \"100%\", textAlign: \"center\" }}\n          >\n            {value ? value.toFixed(1) : \"0\"}%\n          </Typography>\n        </div>\n        <div style={{ marginTop: 50 }}>\n          <TempContext.Consumer>\n            {({ bed, nozzle, bedTarget, nozzleTarget }) => (\n              <Grid container>\n                <Grid item container xs={6} direction=\"column\">\n                  <Grid item style={{ marginBottom: -100 }}>\n                    <div style={{ transform: \"scale(.6)\" }}>\n                      <TutorialThermometer min={0} max={120} value={bed} />\n                    </div>\n                  </Grid>\n                  <Grid item style={{ textAlign: \"center\" }}>\n                    <h4>Target: {bedTarget}</h4>\n                    <h4>Bed</h4>\n                  </Grid>\n                </Grid>\n                <Grid item container xs={6} direction=\"column\">\n                  <Grid item style={{ marginBottom: -100 }}>\n                    <div style={{ transform: \"scale(.6)\" }}>\n                      <TutorialThermometer min={0} max={300} value={nozzle} />\n                    </div>\n                  </Grid>\n                  <Grid item style={{ textAlign: \"center\" }}>\n                    <h4>Target: {nozzleTarget}</h4>\n                    <h4>Nozzle</h4>\n                  </Grid>\n                </Grid>\n              </Grid>\n            )}\n          </TempContext.Consumer>\n        </div>\n        <div className=\"print-btn-container\" style={{ marginTop: 50 }}>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => {\n              setPaused((prevState) => !prevState);\n              fetch(`http://localhost:8080/api/v1/job`, {\n                method: \"PATCH\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                  file: state.files[state.file]\n                })\n              });\n            }}\n            startIcon={!paused ? <Pause /> : <PlayArrow />}\n          >\n            {!paused ? \"Pause\" : \"Play\"}\n          </Button>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={() => {\n              fetch(`http://localhost:8080/api/v1/job`, {\n                method: \"DELETE\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                  file: state.files[state.file]\n                })\n              });\n            }}\n            startIcon={<Stop />}\n          >\n            Stop\n          </Button>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 14,\n    borderRadius: 7\n  },\n  colorPrimary: {\n    backgroundColor: \"#606060\"\n  },\n  bar: {\n    borderRadius: 7,\n    backgroundColor: \"#ACC12F\"\n  }\n}))(LinearProgress);\n\nexport default PrintStatus;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Backdrop,\n  Button,\n  CircularProgress,\n  Drawer,\n  Grid,\n  IconButton,\n  List,\n  ListItemText,\n  Modal,\n  Paper,\n  Select,\n  Slider,\n  Switch,\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  TextField,\n  Tooltip,\n  Typography,\n  AppBar\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport moment from \"moment\";\nimport { formatBytes } from \"../../../Utility/helpers\";\n\nimport imgPrint from \"../../../img/mm-print.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  drawerContainer: {\n    width: \"100%\"\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  item: {\n    height: \"100px\",\n    padding: \"0 22px\"\n  },\n  modal: {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"75%\",\n    height: \"60%\"\n  },\n  modalContainer: {\n    height: \"100%\",\n    padding: \"25px\",\n    \"& h2\": {\n      fontSize: \"2.5rem\",\n      marginTop: \"10px\"\n    }\n  },\n  printButton: {\n    width: \"120px\",\n    height: \"40px\",\n    alignSelf: \"center\",\n    marginTop: \"20px\",\n    marginBottom: \"100px\"\n  },\n  sliceDropdown: {\n    border: \"1px solid #ced4da\",\n    borderRadius: 4,\n    width: \"175px\",\n    padding: \"0 10px\"\n  },\n  slider: {\n    maxWidth: \"60px\",\n    marginLeft: \"20px\",\n    \"& input\": {\n      padding: \"8px\",\n      textAlign: \"center\"\n    }\n  },\n  summary: {\n    height: \"56px\",\n    cursor: \"pointer\",\n    \"&$selected, &$selected:hover\": {\n      backgroundColor: theme.palette.secondary.main\n    }\n  },\n  selected: {},\n  hover: {},\n  text: {\n    fontSize: \"1.5em\",\n    fontWeight: \"bold\"\n  },\n  fileLocation: {\n    overflow: \"scroll\",\n    height: \"400px\"\n  }\n}));\n\nfunction setProfileSettings(slicer, type) {\n  switch (type) {\n    case \"good\":\n      slicer.metadata.preferred_quality_type = \"fast\";\n      slicer.settings.resolution.children.layer_height.default_value = 0.32;\n      slicer.settings.speed.children.speed_print.default_value = 60;\n      slicer.settings.speed.children.speed_print.children.speed_infill.default_value = 60;\n      slicer.settings.speed.children.speed_print.children.speed_wall.default_value = 60;\n      slicer.settings.speed.children.speed_print.children.speed_wall.children.speed_wall_0.default_value = 60;\n      slicer.settings.speed.children.speed_print.children.speed_wall.children.speed_wall_x.default_value = 60;\n      return slicer;\n    case \"better\":\n      slicer.metadata.preferred_quality_type = \"normal\";\n      slicer.settings.resolution.children.layer_height.default_value = 0.16;\n      slicer.settings.speed.children.speed_print.default_value = 50;\n      slicer.settings.speed.children.speed_print.children.speed_infill.default_value = 60;\n      slicer.settings.speed.children.speed_print.children.speed_wall.default_value = 30;\n      slicer.settings.speed.children.speed_print.children.speed_wall.children.speed_wall_0.default_value = 30;\n      slicer.settings.speed.children.speed_print.children.speed_wall.children.speed_wall_x.default_value = 60;\n      return slicer;\n    case \"best\":\n      slicer.metadata.preferred_quality_type = \"best\";\n      slicer.settings.resolution.children.layer_height.default_value = 0.08;\n      slicer.settings.speed.children.speed_print.default_value = 40;\n      slicer.settings.speed.children.speed_print.children.speed_infill.default_value = 50;\n      slicer.settings.speed.children.speed_print.children.speed_wall.default_value = 30;\n      slicer.settings.speed.children.speed_print.children.speed_wall.children.speed_wall_0.default_value = 30;\n      slicer.settings.speed.children.speed_print.children.speed_wall.children.speed_wall_x.default_value = 40;\n      return slicer;\n    case \"petg\":\n      slicer.settings.travel.children.retraction_enable.default_value = true;\n      slicer.settings.speed.children.speed_print.default_value = 50;\n      slicer.settings.speed.children.speed_print.children.speed_infill.default_value = 60;\n      slicer.settings.speed.children.speed_print.children.speed_wall.default_value = 30;\n      slicer.settings.speed.children.speed_print.children.speed_wall.children.speed_wall_0.default_value = 30;\n      slicer.settings.speed.children.speed_print.children.speed_wall.children.speed_wall_x.default_value = 60;\n      slicer.settings.material.children.default_material_print_temperature.default_value = 245;\n      slicer.settings.material.children.material_print_temperature.default_value = 245;\n      slicer.settings.material.children.material_print_temperature_layer_0.default_value = 245;\n      slicer.settings.material.children.material_initial_print_temperature.default_value = 245;\n      slicer.settings.material.children.material_final_print_temperature.default_value = 245;\n      slicer.settings.material.children.default_material_bed_temperature.default_value = 70;\n      slicer.settings.material.children.material_bed_temperature.default_value = 70;\n      return slicer;\n    case \"tpu\":\n      slicer.settings.travel.children.retraction_enable.default_value = false;\n      slicer.settings.speed.children.speed_print.default_value = 30;\n      slicer.settings.speed.children.speed_print.children.speed_infill.default_value = 30;\n      slicer.settings.speed.children.speed_print.children.speed_wall.default_value = 30;\n      slicer.settings.speed.children.speed_print.children.speed_wall.children.speed_wall_0.default_value = 30;\n      slicer.settings.speed.children.speed_print.children.speed_wall.children.speed_wall_x.default_value = 30;\n      slicer.settings.material.children.default_material_print_temperature.default_value = 230;\n      slicer.settings.material.children.material_print_temperature.default_value = 230;\n      slicer.settings.material.children.material_print_temperature_layer_0.default_value = 230;\n      slicer.settings.material.children.material_initial_print_temperature.default_value = 230;\n      slicer.settings.material.children.material_final_print_temperature.default_value = 230;\n      slicer.settings.material.children.default_material_bed_temperature.default_value = 50;\n      slicer.settings.material.children.material_bed_temperature.default_value = 50;\n      return slicer;\n    case \"pla\":\n      slicer.settings.travel.children.retraction_enable.default_value = true;\n      slicer.settings.speed.children.speed_print.default_value = 50;\n      slicer.settings.speed.children.speed_print.children.speed_infill.default_value = 60;\n      slicer.settings.speed.children.speed_print.children.speed_wall.default_value = 30;\n      slicer.settings.speed.children.speed_print.children.speed_wall.children.speed_wall_0.default_value = 30;\n      slicer.settings.speed.children.speed_print.children.speed_wall.children.speed_wall_x.default_value = 60;\n      slicer.settings.material.children.default_material_print_temperature.default_value = 220;\n      slicer.settings.material.children.material_print_temperature.default_value = 220;\n      slicer.settings.material.children.material_print_temperature_layer_0.default_value = 220;\n      slicer.settings.material.children.material_initial_print_temperature.default_value = 220;\n      slicer.settings.material.children.material_final_print_temperature.default_value = 220;\n      slicer.settings.material.children.default_material_bed_temperature.default_value = 50;\n      slicer.settings.material.children.material_bed_temperature.default_value = 50;\n      return slicer;\n    default:\n      return slicer;\n  }\n}\n\nfunction setInfillMultiplier(infill_pattern) {\n  switch (infill_pattern) {\n    case \"triangles\":\n    case \"trihexagon\":\n    case \"cubic\":\n    case \"cubicsubdiv\":\n      return 3;\n    case \"grid\":\n    case \"tetrahedral\":\n    case \"quarter_cubic\":\n      return 2;\n    default:\n      return 1;\n  }\n}\n\nfunction setInfillLineDistance(slicer, percent_density) {\n  // infill line distance is what we really need to set\n  if (percent_density == 0) {\n    slicer.settings.infill.children.infill_sparse_density.children.infill_line_distance.default_value = 0;\n  } else {\n    let multiplier = setInfillMultiplier(\n      slicer.settings.infill.children.infill_pattern.default_value\n    );\n    let infillLineWidth =\n      slicer.settings.resolution.children.line_width.children.infill_line_width\n        .default_value;\n    let infillLineDistance =\n      ((infillLineWidth * 100) / percent_density) * multiplier;\n    slicer.settings.infill.children.infill_sparse_density.children.infill_line_distance.default_value = infillLineDistance;\n  }\n  return slicer;\n}\n\nconst FileManager = ({ drawerOpen, setDrawerOpen, fileLocation }) => {\n  const classes = useStyles();\n  const [selected, setSelected] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [files, setFiles] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [filament, setFilament] = useState(\"\");\n  const [quality, setQuality] = useState(\"good\");\n  const [infill, setInfill] = useState(20);\n  const [vase, setVase] = useState(false);\n  const [supports, setSupports] = useState(true);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [settings, setSettings] = useState({});\n\n  const [sliceLoad, setSliceLoad] = useState(false);\n\n  useEffect(() => {\n    if (drawerOpen) {\n      setLoading(true);\n      //make api call to fetch files\n      //use fileLocation (usb or local) to determine which call to make\n      //TODO:REMOVE TIMEOUT\n      async function getFiles() {\n        // Default options are marked with *\n        let response = null;\n\n        if (fileLocation === \"local\") {\n          response = await fetch(`http://localhost:8080/api/v1/files`, {\n            method: \"GET\"\n          });\n        } else {\n          await fetch(\"http://localhost:8080/api/v1/usb/refresh\", {\n            method: \"POST\"\n          });\n          response = await fetch(\n            `http://localhost:8080/api/v1/usb/files`,\n            { method: \"GET\" }\n          );\n        }\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n      getFiles().then((data) => {\n        setFiles(data.files);\n        setLoading(false);\n      });\n\n      async function getSettings() {\n        // Default options are marked with *\n        let onboardSettings = await fetch(\n          `http://localhost:8080/api/v1/settings`,\n          {\n            method: \"GET\"\n          }\n        );\n\n        return onboardSettings.json(); // parses JSON response into native JavaScript objects\n      }\n\n      if (fileLocation === \"usb\") {\n        getSettings().then((data) => {\n          setSettings(data);\n          setSupports(\n            data.settings.support.children.support_enable.default_value\n          );\n          setInfill(\n            data.settings.infill.children.infill_sparse_density.default_value\n          );\n\n          if (\n            data.settings.travel.children.retraction_enable.default_value ==\n            false\n          ) {\n            setFilament(\"tpu\");\n          } else {\n            if (\n              data.settings.material.children.default_material_print_temperature\n                .default_value == 245\n            ) {\n              setFilament(\"petg\");\n            } else {\n              setFilament(\"pla\");\n            }\n          }\n\n          if (\n            data.settings.resolution.children.layer_height.default_value == 0.32\n          ) {\n            setQuality(\"good\");\n          } else if (\n            data.settings.resolution.children.layer_height.default_value == 0.08\n          ) {\n            setQuality(\"best\");\n          } else {\n            // 0.16\n            setQuality(\"better\");\n          }\n        });\n      }\n    }\n  }, [drawerOpen]);\n\n  const handleSelect = () => {\n    console.log(selected);\n    setLoading(true);\n    if (fileLocation === \"local\") {\n      //call api to print file\n      fetch(`http://localhost:8080/api/v1/job/${selected}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" }\n      }).then((data) => {\n        setLoading(false);\n        setDrawerOpen(() => false);\n        //call function or swap to status screen\n        setSelected(\"\");\n        setShowTooltip(false);\n        setShowModal(false);\n      });\n    } else {\n      fetch(`http://localhost:8080/api/v1/usb/copy/${selected}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" }\n      }).then((data) => {\n        fetch(`http://localhost:8080/api/v1/job/${selected}`, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" }\n        }).then((data) => {\n          setLoading(false);\n          setDrawerOpen(() => false);\n          //call function or swap to status screen\n          setSelected(\"\");\n          setShowTooltip(false);\n          setShowModal(false);\n        });\n      });\n    }\n  };\n  const handleSlice = () => {\n    let newSettings = settings;\n\n    if (filament === \"tpu\") {\n      newSettings = setProfileSettings(newSettings, quality);\n      newSettings = setProfileSettings(newSettings, filament);\n    } else {\n      newSettings = setProfileSettings(newSettings, filament);\n      newSettings = setProfileSettings(newSettings, quality);\n    }\n\n    newSettings = setInfillLineDistance(newSettings, infill);\n    newSettings.settings.infill.children.infill_sparse_density.default_value = infill;\n    newSettings.settings.support.children.support_enable.default_value = supports;\n\n    newSettings.settings.blackmagic.children.magic_spiralize.default_value = vase;\n\n    setSettings(newSettings);\n    //api logic to slice\n    //call api to copy and print file\n    setLoading(true);\n    fetch(`http://localhost:8080/api/v1/usb/copy/${selected}`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newSettings) // send updated settings\n    }).then((data) => {\n      //call handleSelect once you have gcode file\n      handleSelect();\n    });\n  };\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={drawerOpen}\n      onClose={() => setDrawerOpen(false)}\n      classes={{\n        paper: classes.drawerContainer\n      }}\n    >\n      <AppBar position=\"sticky\">\n        <Typography variant=\"h6\" style={{ paddingLeft: 8 }}>\n          300x\n        </Typography>\n      </AppBar>\n      <div className={classes.header}>\n        <IconButton aria-label=\"back\" onClick={() => setDrawerOpen(false)}>\n          <ArrowBackIcon />\n        </IconButton>\n        <h2>{fileLocation.toUpperCase()}</h2>\n      </div>\n      {loading ? (\n        <Backdrop className={classes.backdrop} open={true}>\n          <img\n            src={imgPrint}\n            style={{ width: 200, height: 200, zIndex: 99999999 }}\n          ></img>\n        </Backdrop>\n      ) : (\n        <TableContainer className={classes.fileList}>\n          <Table stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Size</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {files &&\n                files.map((file) => {\n                  return (\n                    <TableRow\n                      key={file.display}\n                      onClick={() => setSelected(file.display)}\n                      selected={selected === file.display}\n                      className={classes.summary}\n                      classes={{\n                        selected: classes.selected,\n                        hover: classes.hover\n                      }}\n                    >\n                      <TableCell>{file.display}</TableCell>\n                      <TableCell>\n                        {moment(file.date * 1000).format(\"MM/DD/YYYY LTS\")}\n                      </TableCell>\n                      <TableCell>{formatBytes(file.size)}</TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n      {!selected.endsWith(\".stl\") ? (\n        <Button\n          variant=\"contained\"\n          disabled={selected.length <= 0}\n          onClick={() => handleSelect()}\n          className={classes.printButton}\n        >\n          Print\n        </Button>\n      ) : (\n        <Button\n          variant=\"contained\"\n          disabled={selected.length <= 0}\n          onClick={() => setShowModal(true)}\n          className={classes.printButton}\n        >\n          Slice\n        </Button>\n      )}\n      <Modal open={showModal} onClose={() => setShowModal(false)}>\n        <Paper className={classes.modal}>\n          <Grid container direction=\"column\" className={classes.modalContainer}>\n            <Grid item style={{ alignSelf: \"center\" }}>\n              <Typography variant=\"h2\">Slice Menu</Typography>\n            </Grid>\n            <Grid item>\n              <List className={classes.root}>\n                <ListItemText primary=\"Filament Type\" />\n                <Tooltip\n                  PopperProps={{\n                    disablePortal: true\n                  }}\n                  onClose={() => setShowTooltip(false)}\n                  open={showTooltip}\n                  disableFocusListener\n                  disableHoverListener\n                  title=\"Must select filament type\"\n                  onOpen={() => setShowTooltip(() => false)}\n                >\n                  <Select\n                    native\n                    value={filament}\n                    onChange={(e) => {\n                      if (e.target && e.target.value) {\n                        setFilament(e.target.value);\n                      }\n                    }}\n                    MenuProps={{\n                      anchorOrigin: {\n                        vertical: \"bottom\",\n                        horizontal: \"left\"\n                      },\n                      getContentAnchorEl: null\n                    }}\n                    className={classes.sliceDropdown}\n                  >\n                    <option value=\"\" />\n                    <option value=\"pla\">PLA</option>\n                    <option value=\"petg\">PETG</option>\n                    <option value=\"tpu\">TPU</option>\n                  </Select>\n                </Tooltip>\n              </List>\n            </Grid>\n            <Grid item>\n              <List className={classes.root}>\n                <ListItemText primary=\"Print Quality\" />\n                <Select\n                  native\n                  value={quality}\n                  onChange={(e) => {\n                    if (e.target && e.target.value) {\n                      setQuality(e.target.value);\n                    }\n                  }}\n                  MenuProps={{\n                    anchorOrigin: {\n                      vertical: \"bottom\",\n                      horizontal: \"left\"\n                    },\n                    getContentAnchorEl: null\n                  }}\n                  className={classes.sliceDropdown}\n                >\n                  <option value=\"good\">Fastest Print</option>\n                  <option value=\"better\">Normal Quality</option>\n                  <option value=\"best\">Best Quality</option>\n                </Select>\n              </List>\n            </Grid>\n            <Grid item>\n              <List className={classes.root}>\n                <ListItemText primary=\"Infill\" />\n                <Grid container item>\n                  <Slider\n                    defaultValue={infill}\n                    color=\"secondary\"\n                    onChange={(e, newVal) => setInfill(newVal)}\n                    getAriaValueText={() => `${infill}%`}\n                    valueLabelDisplay=\"auto\"\n                    step={5}\n                    min={0}\n                    max={100}\n                    style={{ maxWidth: \"200px\" }}\n                  />\n                  <TextField\n                    value={`${infill}%`}\n                    InputProps={{\n                      readOnly: true\n                    }}\n                    variant=\"outlined\"\n                    className={classes.slider}\n                  />\n                </Grid>\n              </List>\n            </Grid>\n            <Grid item>\n              <List className={classes.root}>\n                <ListItemText primary=\"Supports\" />\n                <Switch\n                  checked={supports}\n                  onChange={(e) => setSupports(e.target.checked)}\n                  name=\"supports\"\n                />\n              </List>\n            </Grid>\n            <Grid item>\n              <List className={classes.root}>\n                <ListItemText primary=\"Vase Mode\" />\n                <Switch\n                  checked={vase}\n                  onChange={(e) => setVase(e.target.checked)}\n                  name=\"vase\"\n                />\n              </List>\n            </Grid>\n            <Grid\n              item\n              container\n              justify=\"space-around\"\n              alignItems=\"center\"\n              style={{ flex: 1 }}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => setShowModal(false)}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  if (filament.length > 0) {\n                    handleSlice();\n                  } else {\n                    setShowTooltip(true);\n                  }\n                }}\n              >\n                Print\n              </Button>\n            </Grid>\n          </Grid>\n          {loading && (\n            <>\n              <img\n                src={imgPrint}\n                style={{\n                  width: 200,\n                  height: 200,\n                  zIndex: 99999999,\n                  position: \"absolute\",\n                  left: \"calc(50% - 100px)\",\n                  top: \"calc(50% - 100px)\"\n                }}\n              ></img>\n              <h4\n                style={{\n                  width: 200,\n                  zIndex: 99999999,\n                  position: \"absolute\",\n                  left: \"calc(50% - 100px)\",\n                  top: \"calc(50% + 120px)\",\n                  textAlign: \"center\"\n                }}\n              >\n                Preparing File\n              </h4>\n            </>\n          )}\n        </Paper>\n      </Modal>\n    </Drawer>\n  );\n};\n\nexport default FileManager;\n","import React, { useState } from \"react\";\nimport { Grid, Card, CardContent, CardActionArea } from \"@material-ui/core\";\nimport PrintStatus from \"./PrintStatus/PrintStatus\";\n\nimport FileManager from \"../Common/FileManager/FileManager\";\nimport \"./Print.css\";\n\nimport { Button, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  buttonContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"10px\"\n  },\n  textCenter: {\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  },\n  card: {\n    margin: \"32px\",\n    border: \"2px solid rgba(0, 0, 0, 0.12)\",\n    textAlign: \"center\"\n  },\n  cardContent: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\n\nconst Print = ({ lastMessage, setDisabledNav }) => {\n  const classes = useStyles();\n  let [state, setState] = useState({\n    extruder: 0,\n    bed: 0,\n    connected: false,\n    feed: \"1\",\n    file: -1,\n    files: [],\n    printing: false,\n    progress: 0,\n    paused: false\n  });\n  const [file, uploadedFile] = useState(false);\n  const [status, setStatus] = useState(null);\n  const [printState, setPrintState] = useState(null);\n  const [jobState, setJobState] = useState(null);\n  const [progressState, setProgressState] = useState(null);\n  const [fileDrawerOpen, setFileDrawerOpen] = useState(false);\n  const [fileLocation, setFileLocation] = useState(\"\");\n\n  const fetchFiles = (location) => {\n    setFileLocation(location);\n    setFileDrawerOpen(true);\n  };\n\n  React.useEffect(() => {\n    if (\n      typeof lastMessage !== \"undefined\" &&\n      lastMessage &&\n      typeof lastMessage.data !== \"undefined\" &&\n      lastMessage.data.length > 1\n    ) {\n      let json = JSON.parse(lastMessage.data.substring(1));\n      console.log(json);\n      if (json[0].hasOwnProperty(\"current\") && json[0].current.state) {\n        console.log(json[0].current.state);\n        setPrintState(json[0].current.state);\n        console.log(printState);\n      }\n\n      if (json[0].hasOwnProperty(\"current\") && json[0].current.job) {\n        console.log(json[0].current.job);\n        setJobState(json[0].current.job);\n        console.log(jobState);\n      }\n\n      if (json[0].hasOwnProperty(\"current\") && json[0].current.progress) {\n        setProgressState(json[0].current.progress);\n        console.log(progressState);\n      }\n    }\n  }, [lastMessage]);\n\n  return (\n    <Grid>\n      {progressState &&\n      jobState &&\n      jobState.file.name &&\n      progressState.completion < 100 &&\n      printState &&\n      printState.text !== \"Operational\" ? (\n        <PrintStatus\n          lastMessage={lastMessage}\n          progressState={progressState}\n          setDisabledNav={setDisabledNav}\n          statusText={printState.text}\n          fileName={jobState.file.display}\n          state={state}\n        />\n      ) : (\n        <Grid>\n          <Card className={classes.card} onClick={() => fetchFiles(\"local\")}>\n            <CardActionArea>\n              <CardContent className={classes.cardContent}>\n                <Typography variant=\"h4\">Printer Storage</Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n          <Card className={classes.card} onClick={() => fetchFiles(\"usb\")}>\n            <CardActionArea>\n              <CardContent className={classes.cardContent}>\n                <Typography variant=\"h4\">USB Media</Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n          <FileManager\n            setDrawerOpen={setFileDrawerOpen}\n            drawerOpen={fileDrawerOpen}\n            fileLocation={fileLocation}\n          />\n          {/*<div className=\"Files\">\n            <label className=\"Files-Upload\">\n              <span>Upload</span>\n              <input\n                type=\"file\"\n                onChange={async (e) => {\n                  let data = new FormData();\n                  console.log(e.target.files);\n                  e.persist();\n                  data.append('file', e.target.files[0]);\n                  // Upload the file\n                  await fetch(\n                    `http://localhost:8080/api/v1/files/${e.target.files[0].name}`,\n                    { method: 'POST', body: data }\n                  );\n                  // Print the file\n                  await fetch(\n                    `http://localhost:8080/api/v1/job/${e.target.files[0].name}`,\n                    {\n                      method: 'POST',\n                      headers: { 'Content-Type': 'application/json' },\n                    }\n                  );\n                  state.printing = true;\n                  uploadedFile(true);\n                  setState({\n                    files: [...state.files, e.target.files[0].name],\n                    file: 0,\n                  });\n                }}\n              ></input>\n            </label>\n              </div>*/}\n        </Grid>\n      )}\n      <div>\n        <Grid>\n          {printState &&\n            jobState &&\n            (jobState.file && typeof jobState.file.display !== \"undefined\" ? (\n              <div>\n                <div className={classes.buttonContainer}>\n                  {progressState &&\n                    (progressState.completion == null ||\n                      progressState.completion == 100) &&\n                    jobState &&\n                    jobState.file.display && (\n                      <>\n                        <div className={classes.textCenter}>\n                          {/*`${printState.text} : ${jobState.file.display}`*/}\n                        </div>\n                        {/* <Button\n                          color=\"primary\"\n                          variant=\"contained\"\n                          onClick={() => {\n                            fetch(\n                              `http://localhost:8080/api/v1/job/${jobState.file.name}`,\n                              {\n                                method: \"POST\",\n                                headers: { \"Content-Type\": \"application/json\" },\n                              }\n                            );\n                          }}\n                        >\n                          Print\n                        </Button> */}\n                      </>\n                    )}\n                </div>\n              </div>\n            ) : (\n              <span>Not Printing</span>\n            ))}\n        </Grid>\n      </div>\n    </Grid>\n  );\n};\n\nexport default Print;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Tab,\n  Tabs,\n  Typography\n} from \"@material-ui/core\";\nimport {\n  ArrowDownward,\n  ArrowForward,\n  ArrowUpward,\n  ArrowBack,\n  Home\n} from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport \"./Moving.css\";\n\nconst useStyles = makeStyles({\n  btnContainer: {\n    marginTop: \"14px\",\n    marginBottom: \"28px\",\n    textAlign: \"center\"\n  },\n  centerBtns: {\n    \"& button\": {\n      margin: \"0 12px\"\n    }\n  },\n  tabs: {\n    \"& button\": {\n      textTransform: \"none\"\n    }\n  }\n});\n\nconst units = [0.1, 1.0, 10, 20];\n\nconst Moving = ({ position }) => {\n  const classes = useStyles();\n\n  const [unit, setUnit] = useState(1);\n\n  let sendGcode = function (gcode) {\n    fetch(`http://localhost:8080/api/v1/send`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        gcode: gcode\n      })\n    });\n  };\n  const homeAxis = (axis) => {\n    //homing commands\n    // const x = 'G28 X\\nM114\\n';\n    // const y = 'G28 Y\\nM114\\n';\n    // const z = 'G28 Z\\nM114\\n';\n    fetch(`http://localhost:8080/api/v1/send`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        gcode: `G28 ${axis}\\nM114\\n`\n      })\n    });\n  };\n\n  const moveAxis = (axis, negative) => {\n    //example move commands\n    // const x = 'G91\\nG0 X-10\\nM114\\n';\n    // const y = 'G91\\nG0 Y-1\\nM114\\n';\n    // const z = 'G91\\nG0 Z10\\nM114\\n';\n    const command = `${axis}${negative ? -units[unit] : units[unit]}`;\n    fetch(`http://localhost:8080/api/v1/send`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        gcode: `M220 S200\\nG91\\nG0 ${command}\\nM220 S100\\nM114\\n`\n      })\n    });\n  };\n\n  return (\n    <Box style={{ textAlign: \"center\" }}>\n      <Typography variant=\"h4\" style={{ marginTop: 15 }}>\n        Movement\n      </Typography>\n      <Grid container justify=\"center\" style={{ marginTop: 30 }}>\n        <Grid item justifyContent=\"center\" alignItems=\"center\">\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => {\n              sendGcode(\"G28\\nM240 S1\\nM114\\n\");\n            }}\n          >\n            Home All\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        justify=\"center\"\n        className={classes.btnContainer}\n        spacing={0}\n        direction=\"row\"\n      >\n        <Grid item xs={12}>\n          <Paper>\n            <Tabs\n              value={unit}\n              className={classes.tabs}\n              onChange={(e, val) => setUnit(val)}\n            >\n              {units.map((u) => (\n                <Tab label={`${u}mm`} key={u} style={{ minWidth: \"150px\" }} />\n              ))}\n            </Tabs>\n          </Paper>\n        </Grid>\n        <Grid item container xs={12} style={{ marginTop: 20 }}>\n          <Grid\n            container\n            item\n            xs={6}\n            justify=\"center\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            <Grid item xs={12} alignItems=\"flex-start\">\n              <Typography variant=\"body1\">X</Typography>\n            </Grid>\n            <Grid item xs={3}>\n              <Button\n                item\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => moveAxis(\"X\", true)}\n                style={{ margin: 3 }}\n              >\n                <ArrowBack />\n              </Button>\n            </Grid>\n            <Grid item xs={3}>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => homeAxis(\"X\")}\n                style={{ margin: 3 }}\n              >\n                <Home />\n              </Button>\n            </Grid>\n            <Grid item xs={3}>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => moveAxis(\"X\", false)}\n                style={{ margin: 3 }}\n              >\n                <ArrowForward />\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            item\n            xs\n            direction=\"column\"\n            alignItems=\"center\"\n            spacing={0}\n          >\n            <Grid item xs={12}>\n              <Typography variant=\"body1\">Y</Typography>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => moveAxis(\"Y\", true)}\n                style={{ margin: 3 }}\n              >\n                <ArrowUpward />\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => homeAxis(\"Y\")}\n                style={{ margin: 3 }}\n              >\n                <Home />\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => moveAxis(\"Y\", false)}\n                style={{ margin: 3 }}\n              >\n                <ArrowDownward />\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            item\n            xs\n            direction=\"column\"\n            alignItems=\"center\"\n            spacing={0}\n          >\n            <Grid item xs={12}>\n              <Typography variant=\"body1\">Z</Typography>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => moveAxis(\"Z\", false)}\n                style={{ margin: 3 }}\n              >\n                <ArrowUpward />\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => homeAxis(\"Z\")}\n                style={{ margin: 3 }}\n              >\n                <Home />\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                size=\"large\"\n                variant=\"contained\"\n                onClick={() => moveAxis(\"Z\", true)}\n                style={{ margin: 3 }}\n              >\n                <ArrowDownward />\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Moving;\n","import React, { useState } from \"react\";\nimport { Button, Box, Grid, Slider, Typography } from \"@material-ui/core\";\nimport \"./Heating.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport TempContext from \"../../../TempContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  drawerContainer: {\n    width: \"100%\"\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  item: {\n    height: \"100px\",\n    padding: \"0 22px\"\n  },\n  modal: {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"75%\",\n    height: \"60%\"\n  },\n  modalContainer: {\n    height: \"100%\",\n    padding: \"25px\",\n    \"& h2\": {\n      fontSize: \"2.5rem\",\n      marginTop: \"10px\"\n    }\n  },\n  printButton: {\n    width: \"120px\",\n    height: \"40px\",\n    alignSelf: \"center\",\n    marginTop: \"auto\",\n    marginBottom: \"100px\"\n  },\n  sliceDropdown: {\n    border: \"1px solid #ced4da\",\n    borderRadius: 4,\n    width: \"150px\",\n    padding: \"0 10px\"\n  },\n  slider: {\n    maxWidth: \"60px\",\n    marginLeft: \"20px\",\n    \"& input\": {\n      padding: \"8px\",\n      textAlign: \"center\"\n    }\n  },\n  summary: {\n    height: \"56px\",\n    cursor: \"pointer\",\n    \"&$selected, &$selected:hover\": {\n      backgroundColor: theme.palette.secondary.main\n    }\n  },\n  selected: {},\n  hover: {},\n  text: {\n    fontSize: \"1.5em\",\n    fontWeight: \"bold\"\n  },\n  gauges: {\n    display: \"flex\"\n  },\n  nozzleSlider: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: 250\n  },\n  tempOutputs: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n}));\n\nconst Heating = () => {\n  let sendGcode = function (gcode) {\n    fetch(`http://localhost:8080/api/v1/send`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        gcode: gcode\n      })\n    });\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Box style={{ textAlign: \"center\", marginTop: 40 }}>\n      <Typography variant=\"h4\">Heating</Typography>\n      <Grid container justify=\"center\">\n        <Grid item xs={3}>\n          <h4>Preheat</h4>\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <TempContext.Consumer>\n              {({ setBedTarget, setNozzleTarget }) => (\n                <>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ margin: 3 }}\n                    onClick={() => {\n                      sendGcode(\"M104 S220\\nM140 S50\");\n                      setBedTarget(50);\n                      setNozzleTarget(220);\n                    }}\n                  >\n                    PLA\n                  </Button>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ margin: 3 }}\n                    onClick={() => {\n                      sendGcode(\"M104 S245\\nM140 S70\");\n                      setBedTarget(70);\n                      setNozzleTarget(245);\n                    }}\n                  >\n                    PETG\n                  </Button>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ margin: 3 }}\n                    onClick={() => {\n                      sendGcode(\"M104 S230\\nM140 S50\");\n                      setBedTarget(50);\n                      setNozzleTarget(230);\n                    }}\n                  >\n                    TPU\n                  </Button>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ margin: 3 }}\n                    onClick={() => {\n                      sendGcode(\"M104 S0\\nM140 S0\");\n                      setBedTarget(0);\n                      setNozzleTarget(0);\n                    }}\n                  >\n                    Cooldown\n                  </Button>\n                </>\n              )}\n            </TempContext.Consumer>\n          </div>\n        </Grid>\n        <Grid item xs={7}>\n          <h4></h4>\n          <Grid container direction=\"column\">\n            <Grid item style={{ marginTop: 40 }}>\n              <span>Nozzle</span>\n            </Grid>\n            <Grid item container justify=\"center\">\n              <Grid item xs={9}>\n                <TempContext.Consumer>\n                  {({ nozzleTarget, setNozzleTarget }) => (\n                    <Slider\n                      defaultValue={0}\n                      color=\"secondary\"\n                      onChange={(e, newVal) => {\n                        setNozzleTarget(newVal);\n                      }}\n                      onChangeCommitted={(e, newVal) => {\n                        setNozzleTarget(newVal);\n                        sendGcode(`M104 S${newVal}\\n`);\n                      }}\n                      getAriaValueText={() => `${nozzleTarget}C`}\n                      valueLabelDisplay=\"auto\"\n                      step={5}\n                      min={0}\n                      max={260}\n                      style={{ maxWidth: \"200px\" }}\n                      value={nozzleTarget}\n                    />\n                  )}\n                </TempContext.Consumer>\n              </Grid>\n              <Grid item>\n                <TempContext.Consumer>\n                  {({ nozzle, nozzleTarget }) => (\n                    <div className={classes.tempOutputs}>\n                      <span\n                        style={{ color: \"#aaaaaa\", width: 30 }}\n                      >{`${nozzle}C`}</span>\n                      <span\n                        style={{ color: \"#ffffff\", width: 30 }}\n                      >{`${nozzleTarget}C`}</span>\n                    </div>\n                  )}\n                </TempContext.Consumer>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <span>Bed</span>\n            </Grid>\n            <Grid container justify=\"center\">\n              <Grid item xs={9}>\n                <TempContext.Consumer>\n                  {({ bedTarget, setBedTarget }) => (\n                    <Slider\n                      defaultValue={0}\n                      color=\"secondary\"\n                      onChange={(e, newVal) => {\n                        setBedTarget(newVal);\n                      }}\n                      onChangeCommitted={(e, newVal) => {\n                        setBedTarget(newVal);\n                        sendGcode(`M140 S${newVal}\\n`);\n                      }}\n                      getAriaValueText={() => `${bedTarget}C`}\n                      valueLabelDisplay=\"auto\"\n                      step={5}\n                      min={0}\n                      max={100}\n                      style={{ maxWidth: \"200px\" }}\n                      value={bedTarget}\n                    />\n                  )}\n                </TempContext.Consumer>\n              </Grid>\n              <Grid item>\n                <TempContext.Consumer>\n                  {({ bed, bedTarget }) => (\n                    <div className={classes.tempOutputs}>\n                      <span\n                        style={{ color: \"#aaaaaa\", width: 30 }}\n                      >{`${bed}C`}</span>\n                      <span\n                        style={{ color: \"#ffffff\", width: 30 }}\n                      >{`${bedTarget}C`}</span>\n                    </div>\n                  )}\n                </TempContext.Consumer>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Heating;\n","import React from \"react\";\nimport \"./style.css\";\n\nimport TempContext from \"../../../TempContext\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport { Power, PowerOff } from \"@material-ui/icons\";\n\nimport {\n  GCodeBuilder,\n  GEnableAllMotors,\n  GDisableAllMotors\n} from \"../../Tutorials/GCodeBuilder\";\n\nclass StepperDisable extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static contextType = TempContext;\n\n  disableMotors() {\n    let gcode = new GCodeBuilder();\n    gcode.addCommand(GDisableAllMotors());\n    this.sendGcode(gcode.build());\n    this.context.setSteppersEnabled(false);\n  }\n\n  enableMotors() {\n    let gcode = new GCodeBuilder();\n    gcode.addCommand(GEnableAllMotors());\n    this.sendGcode(gcode.build());\n    this.context.setSteppersEnabled(true);\n  }\n\n  sendGcode(gcode) {\n    fetch(`http://localhost:8080/api/v1/send`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        gcode: gcode\n      })\n    });\n  }\n\n  render() {\n    if (!this.context.steppersEnabled) {\n      return (\n        <div style={{ width: \"100%\", textAlign: \"center\", marginTop: 50 }}>\n          <EnableButton\n            startIcon={<Power />}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => {\n              this.enableMotors();\n            }}\n          >\n            Enable Motors\n          </EnableButton>\n        </div>\n      );\n    } else {\n      return (\n        <div style={{ width: \"100%\", textAlign: \"center\", marginTop: 50 }}>\n          <DisableButton\n            startIcon={<PowerOff />}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => {\n              this.disableMotors();\n            }}\n          >\n            Disable Motors\n          </DisableButton>\n        </div>\n      );\n    }\n  }\n}\n\nconst DisableButton = withStyles({\n  root: {\n    width: 200,\n    backgroundColor: \"#B01C34\",\n    \"&:hover\": {\n      backgroundColor: \"#B01C34\"\n    }\n  }\n})(Button);\n\nconst EnableButton = withStyles({\n  root: {\n    width: 200,\n    backgroundColor: \"#679436\",\n    \"&:hover\": {\n      backgroundColor: \"#679436\"\n    }\n  }\n})(Button);\n\nexport default StepperDisable;\n","import React from \"react\";\nimport Moving from \"./Moving/Moving\";\nimport Heating from \"./Heating/Heating\";\nimport StepperDisable from \"./StepperDisable/StepperDisable\";\n\nimport \"./Control.css\";\n\nconst Control = (lastMessage) => {\n  const [position, setPosition] = React.useState({ x: 0, y: 0, z: 0 });\n\n  React.useEffect(() => {\n    if (\n      typeof lastMessage !== \"undefined\" &&\n      typeof lastMessage.lastMessage !== \"undefined\" &&\n      lastMessage.lastMessage &&\n      typeof lastMessage.lastMessage.data !== \"undefined\" &&\n      lastMessage.lastMessage.data.length > 1\n    ) {\n      let json = JSON.parse(lastMessage.lastMessage.data.substring(1));\n      console.log(json);\n      // if (json[0].hasOwnProperty(\"current\") && json[0].current.temps[0]) {\n      //   if (json[0].current.temps[0]) {\n      //     let temps = json[0].current.temps[0];\n      //     setExtruder(parseInt(temps.tool0.actual));\n      //     setBed(parseInt(temps.bed.actual));\n      //   }\n      // }\n\n      if (\n        json[0].hasOwnProperty(\"event\") &&\n        json[0].event.hasOwnProperty(\"payload\")\n      ) {\n        if (json[0].event.payload) {\n          setPosition({\n            x: json[0].event.payload.x,\n            y: json[0].event.payload.y,\n            z: json[0].event.payload.z\n          });\n        }\n      }\n    }\n  }, [lastMessage]);\n\n  return (\n    <>\n      <Moving position={position} />\n      <Heating />\n      <StepperDisable />\n    </>\n  );\n};\n\nexport default Control;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  ListSubheader,\n  Select,\n  Snackbar,\n  Switch,\n  Typography\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Class,\n  LocalLibrary,\n  Wifi,\n  WifiTethering,\n  SettingsEthernet,\n  SignalCellularNull\n} from \"@material-ui/icons/\";\n\nimport { useMountEffect } from \"../../../Utility/useMountEffect\";\nimport { getStorage, setStorage } from \"../../../Utility/helpers\";\nimport NetworkSettings from \"../../Setup/NetworkType/NetworkSettings\";\nimport NetworkType from \"../../Setup/NetworkType/NetworkType\";\n\nimport NetworkSelect from \"../../Setup/NetworkSelect/NetworkSelect\";\n\nimport WifiConnect from \"../../Setup/NetworkType/WifiConnect\";\n\nconst networkOptions = {\n  wifi: {\n    name: \"Wi-Fi\",\n    icon: <Wifi />\n  },\n  hotspot: {\n    name: \"Hotspot\",\n    icon: <WifiTethering />\n  },\n  ethernet: {\n    name: \"Ethernet\",\n    icon: <SettingsEthernet />\n  },\n  none: {\n    name: \"None\",\n    icon: <SignalCellularNull />\n  }\n};\n\nconst useStyles = makeStyles({});\nconst Settings = () => {\n  const [networkExpanded, setNetworkExpanded] = useState(false);\n  const [networkType, setNetworkType] = useState(\"none\");\n  const [printerMode, setPrinterMode] = useState(\"\");\n  const [userMode, setUserMode] = useState(\"\");\n  const [displayWifi, setDisplayWifi] = useState(false);\n  const [displaySSID, setDisplaySSID] = useState(false);\n  const [step, setStep] = useState(0);\n\n  const [showSnack, setShowSnack] = useState(false);\n  const [snackMessage, setSnackMessage] = useState(\"\");\n  const handleSnackClose = () => {\n    setShowSnack(() => false);\n    setSnackMessage(\"\");\n  };\n\n  const classes = useStyles();\n\n  useMountEffect(() => {\n    setNetworkType(() => {\n      const networkProfile = getStorage(\"networkProfile\");\n      return networkProfile !== null ? networkProfile : \"none\";\n    });\n    setPrinterMode(() => getStorage(\"printerProfile\"));\n    setUserMode(() => getStorage(\"userMode\"));\n  });\n\n  const handleNetworkToggle = (value) => {\n    const network = value.toLowerCase();\n    setNetworkExpanded(false);\n    setNetworkType(network);\n    setStorage(\"networkProfile\", network);\n    setStep(0);\n  };\n\n  const setNewType = (value) => {\n    const network = value.toLowerCase();\n    setNetworkType(network);\n  };\n  return (\n    <>\n      <Grid container direction=\"column\" className={classes.container}>\n        <Grid>\n          <List\n            subheader={<ListSubheader>Network</ListSubheader>}\n            className={classes.root}\n          >\n            <ListItem\n              button\n              onClick={() => {\n                if (networkType === \"wi-fi\") {\n                  setDisplayWifi((prev) => !prev);\n                } else if (\n                  networkType === \"hotspot\" ||\n                  networkType === \"ethernet\"\n                ) {\n                  setDisplaySSID((prev) => !prev);\n                } else {\n                  return;\n                }\n              }}\n            >\n              <ListItemIcon>\n                {networkOptions[networkType].icon || <Wifi />}\n              </ListItemIcon>\n              <ListItemText primary={networkOptions[networkType].name} />\n              <ListItemSecondaryAction>\n                <Button\n                  variant=\"contained\"\n                  color={networkExpanded ? \"secondary\" : \"primary\"}\n                  onClick={() => {\n                    setStep(2);\n                  }}\n                  size={networkExpanded ? \"small\" : \"medium\"}\n                >\n                  {networkExpanded ? \"Select\" : \"Change\"}\n                </Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n            {networkExpanded && (\n              <>\n                {Object.entries(networkOptions).map((option) => {\n                  const obj = option[1];\n                  if (networkType !== option[0]) {\n                    return (\n                      <ListItem key={`${option[0]}-exanded-network`}>\n                        <ListItemIcon>{obj.icon}</ListItemIcon>\n                        <ListItemText primary={obj.name} />\n                        <ListItemSecondaryAction>\n                          <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={() => handleNetworkToggle(obj.name)}\n                            size=\"small\"\n                          >\n                            Select\n                          </Button>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    );\n                  }\n                })}\n              </>\n            )}\n          </List>\n        </Grid>\n        {displaySSID && (\n          <Grid>\n            Your SSID is\n            <Typography color=\"secondary\" variant=\"body1\">\n              {getStorage(\"printerName\")}\n            </Typography>\n            Your password is\n            <Typography color=\"secondary\" variant=\"body1\">\n              makermade\n            </Typography>\n            {networkType === \"ethernet\" && (\n              <Typography variant=\"body2\">\n                Don't forget to connect your cable!\n              </Typography>\n            )}\n          </Grid>\n        )}\n        {displayWifi && (\n          <Grid item xs>\n            <WifiConnect\n              setShowSnack={setShowSnack}\n              setSnackMessage={setSnackMessage}\n              handleSnackClose={handleSnackClose}\n              settingsScreen={true}\n            />\n          </Grid>\n        )}\n\n        <Grid>\n          <List\n            subheader={<ListSubheader>User Type</ListSubheader>}\n            className={classes.root}\n          >\n            <ListItem>\n              <ListItemIcon>\n                <LocalLibrary />\n              </ListItemIcon>\n              <ListItemText primary=\"Experience Level\" />\n              <Select\n                native\n                value={userMode}\n                onChange={(e) => {\n                  if (e.target && e.target.value) {\n                    setUserMode(e.target.value);\n                    setStorage(\"userMode\", e.target.value);\n                  }\n                }}\n                MenuProps={{\n                  anchorOrigin: {\n                    vertical: \"bottom\",\n                    horizontal: \"left\"\n                  },\n                  getContentAnchorEl: null\n                }}\n              >\n                <option value=\"beginner\">Beginner</option>\n                <option value=\"standard\">Standard</option>\n              </Select>\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid>\n          <List\n            subheader={<ListSubheader>Printer</ListSubheader>}\n            className={classes.root}\n          >\n            <ListItem>\n              <ListItemIcon>\n                <Class />\n              </ListItemIcon>\n              <ListItemText primary=\"Classroom Mode\" />\n              <ListItemSecondaryAction>\n                <Switch\n                  edge=\"end\"\n                  onChange={(e) => {\n                    const checkedValue = e.target.checked\n                      ? \"classroom\"\n                      : \"home\";\n                    setPrinterMode(() => checkedValue);\n                    setStorage(\"printerProfile\", checkedValue);\n                  }}\n                  checked={printerMode !== \"home\"}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n            <ListItem>\n              <ListItemIcon>\n                <Class />\n              </ListItemIcon>\n              <ListItemText\n                primary={`Printer Name: ${getStorage(\"printerName\")}`}\n              />\n              <ListItemSecondaryAction>\n                <Button\n                  variant=\"contained\"\n                  color={networkExpanded ? \"secondary\" : \"primary\"}\n                  onClick={() => {\n                    setStep(1);\n                  }}\n                  size={networkExpanded ? \"small\" : \"medium\"}\n                >\n                  {networkExpanded ? \"Select\" : \"Change\"}\n                </Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          </List>\n        </Grid>\n        <Snackbar\n          open={showSnack}\n          autoHideDuration={6000}\n          message={snackMessage}\n          onClose={handleSnackClose}\n        ></Snackbar>\n      </Grid>\n      {step === 2 && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: \"rgb(66,66,66)\",\n            zIndex: 8000,\n            paddingLeft: 24,\n            paddingRight: 24\n          }}\n        >\n          <NetworkSelect\n            setStep={setStep}\n            setShowSnack={setShowSnack}\n            setSnackMessage={setSnackMessage}\n            handleSnackClose={handleSnackClose}\n            setNewType={(type) => {\n              setNewType(type);\n            }}\n          />\n        </div>\n      )}\n      {step === 1 && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: \"rgb(66,66,66)\",\n            zIndex: 8000,\n            paddingLeft: 24,\n            paddingRight: 24\n          }}\n        >\n          <NetworkSettings\n            setStep={setStep}\n            setShowSnack={setShowSnack}\n            setSnackMessage={setSnackMessage}\n            handleSnackClose={handleSnackClose}\n            setNewType={(type) => {\n              setNewType(type);\n            }}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Settings;\nconst test = {\n  message: \"scanning networks...\",\n  status: \"Scanned networks!\",\n  refresh: true,\n  networks: [\n    {\n      bssid: \"cc:be:59:c1:d8:eb\",\n      frequency: 2462,\n      signalLevel: -52,\n      flags: \"[WPA-PSK-CCMP][WPA2-PSK-CCMP][WPS][ESS]\",\n      ssid: \"Wiliams\"\n    },\n    {\n      bssid: \"cc:be:59:c1:d8:ec\",\n      frequency: 5680,\n      signalLevel: -67,\n      flags: \"[WPA-PSK-CCMP][WPA2-PSK-CCMP][WPS][ESS]\",\n      ssid: \"Wiliams\"\n    },\n    {\n      bssid: \"44:65:7f:e7:94:b7\",\n      frequency: 2437,\n      signalLevel: -60,\n      flags: \"[WPA-PSK-CCMP][WPA2-PSK-CCMP][WPS][ESS]\",\n      ssid: \"Marshall 2.4G\"\n    },\n    {\n      bssid: \"88:6a:e3:a5:e2:1d\",\n      frequency: 2437,\n      signalLevel: -61,\n      flags: \"[WPA2-PSK-CCMP][WPS][ESS]\",\n      ssid: \"tla5e21d\"\n    },\n    {\n      bssid: \"42:65:7f:e7:94:b8\",\n      frequency: 5240,\n      signalLevel: -76,\n      flags: \"[WPA-PSK-CCMP][WPA2-PSK-CCMP][WPS][ESS]\"\n    },\n    {\n      bssid: \"44:65:7f:e7:94:b8\",\n      frequency: 5240,\n      signalLevel: -76,\n      flags: \"[WPA-PSK-CCMP][WPA2-PSK-CCMP][WPS][ESS]\",\n      ssid: \"Marshall 5G\"\n    },\n    {\n      bssid: \"46:65:7f:e7:94:b8\",\n      frequency: 5240,\n      signalLevel: -76,\n      flags: \"[WPA-PSK-CCMP][WPA2-PSK-CCMP][WPS][ESS]\"\n    },\n    {\n      bssid: \"cc:be:59:82:e5:be\",\n      frequency: 5805,\n      signalLevel: -77,\n      flags: \"[WPA-PSK-CCMP][WPA2-PSK-CCMP][WPS][ESS]\",\n      ssid: \"gArteag 5G\"\n    },\n    {\n      bssid: \"cc:be:59:82:e5:bd\",\n      frequency: 2462,\n      signalLevel: -68,\n      flags: \"[WPA-PSK-CCMP][WPA2-PSK-CCMP][WPS][ESS]\",\n      ssid: \"gArteag 2.4G\"\n    },\n    {\n      bssid: \"88:b4:a6:f5:0e:66\",\n      frequency: 2412,\n      signalLevel: -70,\n      flags: \"[WPA2-PSK-CCMP][WPS][ESS]\",\n      ssid: \"Bucks_in_6\"\n    },\n    {\n      bssid: \"fa:8f:ca:5d:92:cf\",\n      frequency: 5680,\n      signalLevel: -71,\n      flags: \"[ESS]\"\n    },\n    {\n      bssid: \"fa:8f:ca:86:46:6d\",\n      frequency: 5680,\n      signalLevel: -82,\n      ssid: \"[ESS]\"\n    }\n  ]\n};\n","import React from \"react\";\nimport {\n  AppBar,\n  Card,\n  CardContent,\n  Container,\n  Typography\n} from \"@material-ui/core\";\nimport TutorialDefinitions from \"../../Tutorials/TutorialDefinitions\";\nimport Tutorial from \"../../Tutorials/Tutorial/Tutorial\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = (theme) => ({\n  tutorialContainer: {\n    maxHeight: \"950px\",\n    overflow: \"auto\"\n  },\n  tutorialCard: {\n    backgroundColor: \"rgb(46,46,46)\",\n    marginBottom: \"8px\"\n  },\n  updateContainer: {\n    flex: 3,\n    \"& h3\": {\n      fontSize: \"28px\",\n      textAlign: \"center\"\n    }\n  }\n});\nclass Tutorials extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { currentTutorial: null };\n  }\n  selectTutorial(id) {\n    this.setState({ currentTutorial: id });\n  }\n  closeTutorial(reason) {\n    this.setState({ currentTutorial: null });\n    if (reason && reason === \"request-calibration\") {\n      setTimeout(() => {\n        this.selectTutorial(\"bedLevelSensorCalibration\");\n      }, 1000);\n    }\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <Container className={classes.tutorialContainer}>\n          {Object.getOwnPropertyNames(TutorialDefinitions).map((tutName) => {\n            if (TutorialDefinitions[tutName].userVisable) {\n              return (\n                <>\n                  <Card\n                    className={classes.tutorialCard}\n                    onClick={() => {\n                      this.selectTutorial(tutName);\n                    }}\n                  >\n                    <CardContent>\n                      <Typography variant=\"h6\">\n                        {TutorialDefinitions[tutName].name}\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        {TutorialDefinitions[tutName].description}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </>\n              );\n            } else {\n              return <></>;\n            }\n          })}\n        </Container>\n        {this.state.currentTutorial && (\n          <Tutorial\n            tutorialName={this.state.currentTutorial}\n            showClose={true}\n            onTutorialClose={(reason) => {\n              this.closeTutorial(reason);\n            }}\n          ></Tutorial>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(Tutorials);\n","import React, { useRef, useState } from \"react\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setStorage, getStorage } from \"../../../Utility/helpers\";\nimport \"react-simple-keyboard/build/css/index.css\";\n\nconst useStyles = makeStyles({\n  backdrop: {\n    zIndex: 10000,\n    color: \"#fff\"\n  },\n  buttonContainer: {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-around\",\n    marginTop: \"56px\"\n  },\n  connecting: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    \"& h4\": {\n      marginBottom: \"24px\"\n    }\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  item: {\n    padding: (props) => (props.settingsScreen ? \"10px\" : \"30px 15px\"),\n    fontSize: (props) => (props.settingsScreen ? \"18px\" : \"24px\"),\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  keyboard: {\n    position: \"fixed\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    color: \"#000\"\n  }\n});\n\nconst ResetPrinter = ({\n  setStep,\n  setShowSnack,\n  setSnackMessage,\n  settingsScreen\n}) => {\n  const classes = useStyles();\n  const [layout, setLayout] = useState(\"default\");\n  const [input, setInput] = useState(\"\");\n  const [connecting, setConnecting] = useState(false);\n  const type = \"configure\";\n  const keyboard = useRef();\n  const old_name = getStorage(\"hostname\");\n\n  const handleReset = () => {\n    console.log(\"reset\");\n    localStorage.clear();\n    window.location.reload(false);\n  }   \n\n  return (\n    <Grid\n      container\n      item\n      spacing={6}\n      direction=\"column\"\n      alignItems=\"center\"\n      className={classes.container}\n    >\n      {type === \"configure\" && (\n        <div>\n          <Grid\n            item\n            spacing={6}\n            direction=\"column\"\n            alignItems=\"center\"\n            style={{ paddingTop: 140 }}\n          >\n            <Typography variant=\"h4\" style={{textAlign: 'center'}}>Warning!</Typography>\n            <Typography variant=\"h6\" style={{textAlign: 'center'}}>This will reset your printer to factory settings.</Typography>\n            <Typography variant=\"h6\" style={{textAlign: 'center'}}>All gcode and stl files will be preserved.</Typography>\n            </Grid>\n          <Grid\n            item\n            spacing={6}\n            direction=\"column\"\n            alignItems=\"center\"\n            style={{ marginTop: 200 }}\n          >\n            <Grid container style={{flexDirection:'row', justifyContent: 'center'}}>\n              {/*<Grid item xs={9}>\n                <TextField\n                  id=\"input\"\n                  label=\"Printer Name\"\n                  type=\"text\"\n                  color=\"secondary\"\n                  value={input}\n                  onChange={onChangeInput}\n                  style={{ width: \"100%\" }}\n      />\n              </Grid>*/}\n              <Grid item>\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  className={classes.button}\n                  style={{ marginTop: 10 }}\n                  onClick={() => {\n                      handleReset()\n                  }}\n                    >\n                  Reset\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n      )}\n      \n    </Grid>\n  );\n};\n\nexport default ResetPrinter;\n","import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Container,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Typography\n} from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Update from \"./MenuTabs/Update\";\nimport About from \"./MenuTabs/About\";\nimport Settings from \"./MenuTabs/Settings\";\nimport Tutorials from \"./MenuTabs/Tutorials\";\nimport ResetPrinter from \"./MenuTabs/ResetPrinter\";\n\nconst useStyles = makeStyles({\n  componentContainer: {\n    display: \"flex\",\n    flex: 1\n  },\n  drawerContainer: {\n    width: \"100%\"\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  item: {\n    height: \"100px\",\n    padding: \"0 22px\"\n  },\n  text: {\n    fontSize: \"1.5em\",\n    fontWeight: \"bold\"\n  }\n});\n\nconst Menu = (lastMessage) => {\n  const classes = useStyles();\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [activeComponent, setActiveComponent] = useState({});\n\n  const handleDrawer = (item) => {\n    //call setActiveComponent\n    setActiveComponent(item);\n    setDrawerOpen(true);\n  };\n  const MenuArray = [\n    {\n      name: \"Tutorials\",\n      component: <Tutorials />\n    },\n    {\n      name: \"Settings\",\n      component: <Settings />\n    },\n    //{ name: \"Manage Storage\", component: <ManageStorage /> },\n    //{ name: \"Troubleshooting\", component: null },\n    { name: \"Update\", component: <Update firstBoot={false} /> },\n    { name: \"Reset\", component: <ResetPrinter /> },\n    //{ name: \"About\", component: <About /> }\n  ];\n  return (\n    <div>\n      <List>\n        {MenuArray.map((item) => {\n          return (\n            <React.Fragment key={`${item.name}-item`}>\n              <ListItem\n                button\n                onClick={() => handleDrawer(item)}\n                className={classes.item}\n              >\n                <ListItemText\n                  primary={\n                    <Typography className={classes.text}>\n                      {item.name}\n                    </Typography>\n                  }\n                />\n                <ArrowForwardIosIcon />\n              </ListItem>\n              <Divider />\n            </React.Fragment>\n          );\n        })}\n      </List>\n      <Drawer\n        anchor=\"right\"\n        open={drawerOpen}\n        onClose={() => setDrawerOpen(false)}\n        classes={{\n          paper: classes.drawerContainer\n        }}\n      >\n        <AppBar position=\"sticky\">\n          <Typography variant=\"h6\" style={{ paddingLeft: 8 }}>\n            300x\n          </Typography>\n        </AppBar>\n        <div className={classes.header}>\n          <IconButton aria-label=\"back\" onClick={() => setDrawerOpen(false)}>\n            <ArrowBackIcon />\n          </IconButton>\n          <h2>{activeComponent.name}</h2>\n        </div>\n        <Container className={classes.componentContainer}>\n          {activeComponent.component}\n        </Container>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default Menu;\n","import { Card, CardContent, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport TutorialDefinitions from \"../TutorialDefinitions\";\nimport Tutorial from \"./Tutorial\";\n\nconst styles = (theme) => ({\n  tutorialContainer: {\n    maxHeight: \"950px\",\n    overflow: \"auto\"\n  },\n  tutorialCard: {\n    backgroundColor: \"rgb(46,46,46)\",\n    marginBottom: \"8px\"\n  },\n  updateContainer: {\n    flex: 3,\n    \"& h3\": {\n      fontSize: \"28px\",\n      textAlign: \"center\"\n    }\n  }\n});\n\nclass TutorialButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { tutorialShown: false };\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <Card\n          className={classes.tutorialCard}\n          onClick={() => {\n            this.setState({ tutorialShown: true });\n          }}\n        >\n          <CardContent>\n            <Typography variant=\"h6\">\n              {TutorialDefinitions[this.props.tutorialName].name}\n            </Typography>\n            <Typography variant=\"body2\">\n              {TutorialDefinitions[this.props.tutorialName].description}\n            </Typography>\n          </CardContent>\n        </Card>\n        {this.state.tutorialShown && (\n          <Tutorial\n            tutorialName={this.props.tutorialName}\n            extruderTemp={this.props.extruderTemp}\n            bedTemp={this.props.bedTemp}\n            showClose={true}\n            onTutorialClose={(reason) => {\n              this.setState({ tutorialShown: false });\n            }}\n          ></Tutorial>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(TutorialButton);\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TutorialButton from \"../Tutorials/Tutorial/TutorialButton\";\n\nconst Tune = (lastMessage) => {\n  const [offset, setOffset] = useState(0);\n  const units = [0.01, 0.05, 0.1, 1.0, 10];\n  const [unit, setUnit] = useState(1);\n  const [extruder, setExtruder] = useState(0);\n  const [bed, setBed] = useState(0);\n\n  React.useEffect(() => {\n    if (\n      typeof lastMessage !== \"undefined\" &&\n      lastMessage &&\n      typeof lastMessage.data !== \"undefined\" &&\n      lastMessage.data.length > 1\n    ) {\n      let json = JSON.parse(lastMessage.data.substring(1));\n      console.log(json);\n      if (json[0].hasOwnProperty(\"current\") && json[0].current.temps[0]) {\n        if (json[0].current.temps[0]) {\n          let temps = json[0].current.temps[0];\n          setExtruder(parseInt(temps.tool0.actual));\n          setBed(parseInt(temps.bed.actual));\n        }\n      }\n    }\n  }, [lastMessage]);\n\n  const useStyles = makeStyles({\n    btnContainer: {\n      marginTop: \"14px\",\n      marginBottom: \"28px\",\n      textAlign: \"center\"\n    },\n    centerBtns: {\n      \"& button\": {\n        margin: \"0 12px\"\n      }\n    },\n    tabs: {\n      \"& button\": {\n        textTransform: \"none\"\n      }\n    }\n  });\n  const classes = useStyles();\n\n  let sendGcode = function (gcode) {\n    fetch(`http://localhost:8080/api/v1/send`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        gcode: gcode\n      })\n    });\n  };\n  let position = { x: 0, y: 0, z: 0 };\n\n  return (\n    <div>\n      <TutorialButton\n        tutorialName={\"blTouchCalibration\"}\n        extruderTemp={extruder}\n        bedTemp={bed}\n      ></TutorialButton>\n      <TutorialButton\n        tutorialName={\"bedLevelCornerCalibration\"}\n        extruderTemp={extruder}\n        bedTemp={bed}\n      ></TutorialButton>\n      {/*<Button\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={() => {\n          sendGcode(\"G29 T\\nM114\\n\");\n        }}\n      >\n        Generate Mesh\n      </Button>*/}\n      <TutorialButton\n        tutorialName={\"loadFilament\"}\n        extruderTemp={extruder}\n        bedTemp={bed}\n      ></TutorialButton>\n      <TutorialButton\n        tutorialName={\"unloadFilament\"}\n        extruderTemp={extruder}\n        bedTemp={bed}\n      ></TutorialButton>\n    </div>\n  );\n};\n\nexport default Tune;\n","import React, { useState } from \"react\";\nimport { AppBar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TabList from \"../Common/Tabs/TabList\";\nimport Print from \"../Print/Print\";\nimport Control from \"../Control/Control\";\nimport Menu from \"../Menu/Menu\";\nimport Tune from \"../Tune/Tune\";\n\nimport \"./Home.css\";\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    top: \"auto\",\n    bottom: 0\n  }\n}));\nconst tabList = [\"Print\", \"Control\", \"Tune\", \"Menu\"];\nconst Home = ({ lastMessage, mode, setActiveMode }) => {\n  const classes = useStyles();\n  const [activeTab, setActiveTab] = useState(\"Print\");\n  const [disabledNav, setDisabledNav] = useState(false);\n\n  const handleTabClick = (event, val) => {\n    setActiveTab(tabList[val]);\n  };\n  const Components = {\n    Print: <Print lastMessage={lastMessage} setDisabledNav={setDisabledNav} />,\n    Control: <Control lastMessage={lastMessage} />,\n    Menu: <Menu lastMessage={lastMessage} />,\n    Tune: <Tune lastMessage={lastMessage} />\n  };\n  return (\n    <div className=\"home-container\">\n      <AppBar\n        position=\"fixed\"\n        color=\"primary\"\n        className={classes.appBar}\n        disabled={true}\n      >\n        <TabList\n          tabList={tabList}\n          handleTabClick={handleTabClick}\n          activeTab={tabList.indexOf(activeTab)}\n          disabledNav={disabledNav}\n        />\n      </AppBar>\n      <div className=\"component-container\">{Components[activeTab]}</div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useMemo, useRef } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Setup from \"./components/Setup/Setup\";\nimport Home from \"./components/Home/Home\";\nimport {\n  createMuiTheme,\n  MuiThemeProvider\n  // makeStyles,\n} from \"@material-ui/core/styles\";\nimport { AppBar, Box, Typography } from \"@material-ui/core\";\nimport { getStorage, setStorage } from \"./Utility/helpers\";\nimport { useMountEffect } from \"./Utility/useMountEffect\";\nimport useWebSocket, { ReadyState } from \"react-use-websocket\";\nimport TempContext from \"./TempContext\";\nimport imgPrint from \"./img/mm-print.svg\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"rgb(42, 57, 131)\"\n    },\n    secondary: {\n      main: \"#CD6930\"\n    },\n    type: \"dark\"\n  }\n});\n// const useStyles = makeStyles({});\nconst App = () => {\n  // const classes = useStyles();\n\n  const [mode, setActiveMode] = useState(null);\n  const [onboarded, setOnboarded] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [bedTemp, setBedTemp] = useState(0);\n  const [bedTargetTemp, setBedTargetTemp] = useState(0);\n  const [nozzleTemp, setNozzleTemp] = useState(0);\n  const [nozzleTargetTemp, setNozzleTargetTemp] = useState(0);\n  const [machineName, setMachineName] = useState(\"\");\n  const [steppersEnabled, setSteppersEnabled] = useState(true);\n\n  useMountEffect(() => {\n    const isOnboarded = getStorage(\"onboarded\");\n    const userMode = getStorage(\"userMode\");\n    const networkType = getStorage(\"networkProfile\");\n    const printerName = getStorage(\"printerName\");\n\n    if (networkType === \"hotspot\") {\n      fetch(`http://localhost:8990/hotspot/connect`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    }\n\n    if (networkType === \"wifi\") {\n      fetch(`http://localhost:8990/hotspot/disconnect`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    }\n\n    if (printerName === null) {\n      setStorage(\"printerName\", \"300x\");\n      setMachineName(\"300x\");\n    } else {\n      setMachineName(printerName);\n    }\n\n    setOnboarded(isOnboarded);\n    setActiveMode(userMode);\n    setLoading(true);\n  });\n\n  const handleOnboarding = (val) => {\n    setActiveMode(val);\n    setOnboarded(true);\n  };\n  const [socketUrl, setSocketUrl] = useState(\n    \"ws://localhost:9000/sockjs/718/qerksnvm/websocket\"\n  );\n  const messageHistory = useRef([]);\n\n  const { sendMessage, lastMessage, readyState } = useWebSocket(socketUrl, {\n    //Will attempt to reconnect on all close events, such as server shutting down\n    shouldReconnect: (closeEvent) => true,\n    reconnectAttempts: 999999, // default: 20\n    reconnectInterval: 0, // default: 5000\n    onOpen: () => {\n      console.log(\"socket opened\");\n    },\n    onError: () => {\n      console.log(\"socket error\");\n    },\n    onClose: () => {\n      // force reconnect somehow like sending message?\n      console.log(\"socket closed\");\n    },\n    onMessage: (msg) => {\n      // console.log(\"MESSAGE EVENT\");\n      try {\n        let json = JSON.parse(msg.data.substring(1));\n        if (json.length && json.length > 0) {\n          if (json[0].hasOwnProperty(\"current\") && json[0].current.temps[0]) {\n            let temps = json[0].current.temps[0];\n            console.log(\"setting temps\");\n            setNozzleTemp(parseInt(temps.tool0.actual));\n            setBedTemp(parseInt(temps.bed.actual));\n            setNozzleTargetTemp(parseInt(temps.tool0.target));\n            setBedTargetTemp(parseInt(temps.bed.target));\n          }\n        }\n      } catch (error) {}\n      // console.log(msg);\n    }\n  });\n\n  messageHistory.current = useMemo(() => {\n    try {\n      messageHistory.current.concat(lastMessage);\n      // let json = JSON.parse(lastMessage.data.substring(1));\n      // if (json[0].hasOwnProperty(\"current\") && json[0].current.temps[0]) {\n      //   if (json[0].current.temps[0]) {\n      //     let temps = json[0].current.temps[0];\n      //     setNozzleTemp(parseInt(temps.tool0.actual));\n      //     setBedTemp(parseInt(temps.bed.actual));\n      //   }\n      // }\n    } catch (error) {}\n  }, [lastMessage]);\n\n  const connectionStatus = {\n    [ReadyState.CONNECTING]: \"Connecting\",\n    [ReadyState.OPEN]: \"Open\",\n    [ReadyState.CLOSING]: \"Closing\",\n    [ReadyState.CLOSED]: \"Closed\",\n    [ReadyState.UNINSTANTIATED]: \"Uninstantiated\"\n  }[readyState];\n\n  React.useEffect(() => {\n    console.log(connectionStatus);\n    if (connectionStatus == \"Open\") {\n      sendMessage('{ \"auth\": \"E7BFE47F2DBF489B9E78A3D9D042874A\" }');\n      sendMessage('{ \"throttle\": 2 }');\n      sendMessage('{ \"current\": \"state\" }');\n      setLoading(false);\n    }\n  }, [connectionStatus]);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <TempContext.Provider\n        value={{\n          bedTarget: bedTargetTemp,\n          bed: bedTemp,\n          nozzleTarget: nozzleTargetTemp,\n          nozzle: nozzleTemp,\n          setBedTarget: setBedTargetTemp,\n          setNozzleTarget: setNozzleTargetTemp,\n          setBed: setBedTemp,\n          setNozzle: setNozzleTemp,\n          steppersEnabled: steppersEnabled,\n          setSteppersEnabled: setSteppersEnabled\n        }}\n      >\n        <CssBaseline />\n        <Box height=\"100vh\" display=\"flex\" flexDirection=\"column\">\n          {onboarded && (\n            <AppBar position=\"sticky\">\n              <Typography variant=\"h6\" style={{ paddingLeft: 8 }}>\n                {machineName}\n              </Typography>\n            </AppBar>\n          )}\n          {loading ? (\n            <>\n              <img\n                src={imgPrint}\n                style={{\n                  width: 200,\n                  height: 200,\n                  zIndex: 99999999,\n                  position: \"absolute\",\n                  left: \"calc(50% - 100px)\",\n                  top: \"calc(50% - 100px)\"\n                }}\n              ></img>\n              <h4\n                style={{\n                  width: 200,\n                  zIndex: 99999999,\n                  position: \"absolute\",\n                  left: \"calc(50% - 100px)\",\n                  top: \"calc(50% + 120px)\",\n                  textAlign: \"center\"\n                }}\n              >\n                Loading ...\n              </h4>\n            </>\n          ) : !onboarded ? (\n            <Setup handleOnboarding={handleOnboarding} />\n          ) : (\n            <Home\n              mode={mode}\n              lastMessage={lastMessage}\n              setActiveMode={setActiveMode}\n            />\n          )}\n        </Box>\n      </TempContext.Provider>\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mm-print.01cf77d4.svg\";"],"sourceRoot":""}