{"version":3,"sources":["components/MainMenu/MainMenu.js","components/Common/Tabs/TabList.js","components/Print/PrintStatus/PrintStatus.js","components/Print/PrintComplete/PrintComplete.js","components/Print/Print.js","components/Control/Moving/Moving.js","components/Control/Heating/thermometer/index.js","components/Control/Heating/Heating.js","components/Common/ComingSoon.js","components/Control/Filament/Filament.js","components/Control/Control.js","components/Help/Settings/Settings.js","components/Help/About/About.js","components/Help/Help.js","components/Tune/Tune.js","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["MainMenu","setActiveMode","className","Card","onClick","style","margin","border","CardActionArea","CardContent","Typography","variant","TabList","tabList","handleTabClick","activeTab","disabledNav","Tabs","value","onChange","fullWidth","centered","map","tab","Tab","height","fontSize","minWidth","label","key","disabled","PrintStatus","lastMessage","setStatus","state","setDisabledNav","useState","paused","setPaused","setValue","useEffect","data","length","json","JSON","parse","substring","hasOwnProperty","current","progress","completion","Button","color","prevState","fetch","method","headers","body","stringify","file","files","icon","faPlay","faPause","gcode","faStop","LinearProgress","PrintComplete","size","marginTop","Print","extruder","bed","connected","feed","printing","setState","uploadedFile","status","type","e","a","FormData","console","log","target","persist","append","name","Moving","position","sendGcode","Accordion","AccordionSummary","classes","content","faHome","AccordionDetails","readOnly","x","ButtonGroup","aria-label","y","z","Thermometer","props","min","max","Heating","display","ComingSoon","Filament","Control","React","setBed","setExtruder","setPosition","temps","parseInt","tool0","actual","event","payload","Settings","resetMode","About","Help","Tune","offset","setOffset","useStyles","makeStyles","theme","appBar","top","bottom","Home","mode","setActiveTab","setTabList","Components","AppBar","val","indexOf","App","createMuiTheme","palette","primary","main","secondary","socketUrl","messageHistory","useRef","useWebSocket","shouldReconnect","closeEvent","reconnectAttempts","reconnectInterval","onOpen","onError","onClose","sendMessage","readyState","useMemo","concat","connectionStatus","ReadyState","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8a6f3eca.chunk.js","sourcesContent":["import React from 'react';\n// import Card from '../Common/Card/Card';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  CardActionArea,\n} from '@material-ui/core';\n\nimport './MainMenu.css';\nconst MainMenu = ({ setActiveMode }) => {\n  return (\n    <div className=\"menu-container\">\n      <h1>Welcome to {'{app name}'}!</h1>\n      <h3>Please choose a mode</h3>\n      <div className=\"menu-options-container\">\n        <Card\n          onClick={() => setActiveMode(0)}\n          style={{ margin: '12px', border: '2px solid rgba(0, 0, 0, 0.12)' }}\n        >\n          <CardActionArea>\n            <CardContent>\n              <Typography variant=\"h3\">Education</Typography>\n              <Typography variant=\"p\">\n                For beginners and will walk you through how to operate your 3D\n                printer, step by step\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n        <Card\n          onClick={() => setActiveMode(1)}\n          style={{ margin: '12px', border: '2px solid rgba(0, 0, 0, 0.12)' }}\n        >\n          <CardActionArea>\n            <CardContent>\n              <Typography variant=\"h3\">Standard</Typography>\n              <Typography variant=\"p\">\n                For users familiar with 3D printing\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n        <Card\n          onClick={() => setActiveMode(2)}\n          style={{ margin: '12px', border: '2px solid rgba(0, 0, 0, 0.12)' }}\n        >\n          <CardActionArea>\n            <CardContent>\n              <Typography variant=\"h3\">Expert</Typography>\n              <Typography variant=\"p\">\n                For advanced users, unlocks features to customize your printer\n                firmware any way you like!\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default MainMenu;\n","import React from 'react';\nimport { Tabs, Tab } from '@material-ui/core';\n\nimport './TabList.css';\nconst TabList = ({ tabList, handleTabClick, activeTab, disabledNav }) => {\n  return (\n    <Tabs value={activeTab} onChange={handleTabClick} fullWidth={true} centered>\n      {tabList.map((tab) => (\n        <Tab\n          style={{ height: '70px', fontSize: '20px', minWidth: '140px' }}\n          label={tab}\n          key={`tab - ${tab}`}\n          disabled={disabledNav}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nexport default TabList;\n","import React, { useState, useEffect } from 'react';\nimport { Button, LinearProgress } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPause, faPlay, faStop } from '@fortawesome/free-solid-svg-icons';\n\nconst PrintStatus = ({ lastMessage, setStatus, setDisabledNav, state }) => {\n  const [paused, setPaused] = useState(false);\n  const [value, setValue] = useState(0);\n\n  let sendGcode = function(gcode) {\n    fetch(`http://makerhub.local:8080/api/v1/send`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        gcode: gcode\n      })\n    });\n  }\n\n\n  useEffect(() => {\n    if(\n      typeof lastMessage !== 'undefined' &&\n      typeof lastMessage.lastMessage !== 'undefined' &&\n      lastMessage.lastMessage &&\n      typeof lastMessage.lastMessage.data !== 'undefined' &&\n      lastMessage.lastMessage.data.length > 1\n    ) {\n      let json = JSON.parse(lastMessage.lastMessage.data.substring(1));\n      //console.log(json);\n      if (json[0].hasOwnProperty('current') && json[0].current.progress) {\n        if (value !== json[0].current.progress.completion) {\n          setValue(json[0].current.progress.completion);\n          setStatus(json[0].current.progress.completion);\n        }\n      }\n    }\n  }, [lastMessage]);\n\n  return (\n    <>\n      <div className=\"print-btn-container\">\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => {\n            setPaused((prevState) => !prevState);\n            fetch(`http://makerhub.local:8080/api/v1/job`, {\n              method: \"PATCH\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({\n                file: state.files[state.file]\n              })\n            });\n          }}\n        >\n          {!paused ? (\n            <span>\n              <FontAwesomeIcon icon={faPause} /> Pause\n            </span>\n          ) : (\n            <span>\n              <FontAwesomeIcon icon={faPlay} /> Play\n            </span>\n          )}\n        </Button>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => {\n            setStatus(1);\n            sendGcode(\"M77\\n\");\n          }}\n        >\n          <span>\n            <FontAwesomeIcon icon={faStop} /> Stop\n          </span>\n        </Button>\n      </div>\n      <div className=\"print-status-bar\">\n        <LinearProgress variant=\"determinate\" value={value} />\n      </div>\n    </>\n  );\n};\n\nexport default PrintStatus;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\n\nconst PrintComplete = ({ setStatus, setActiveMode }) => {\n  return (\n    <>\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={() => setStatus(0)}\n        size=\"large\"\n      >\n        Print Again\n      </Button>\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        size=\"large\"\n        onClick={() => setActiveMode(null)}\n        style={{ marginTop: '12px' }}\n      >\n        Exit\n      </Button>\n    </>\n  );\n};\n\nexport default PrintComplete;\n","import React, { useState } from 'react';\n\nimport PrintStatus from './PrintStatus/PrintStatus';\nimport PrintComplete from './PrintComplete/PrintComplete';\n\nimport './Print.css';\n\nconst Print = ({ lastMessage, setActiveMode, setDisabledNav }) => {\n  let [state, setState] = useState({\n    extruder: 0,\n    bed: 0,\n    connected: false,\n    feed: \"1\",\n    file: -1,\n    files: [],\n    printing: false,\n    progress: 0,\n    paused: false\n  });\n  const [file, uploadedFile] = useState(false);\n  const [status, setStatus] = useState(0);\n  return (\n    <div className=\"print-container\">\n      {file ? (\n        status === 0 ? (\n          <PrintStatus lastMessage={lastMessage} setStatus={setStatus} setDisabledNav={setDisabledNav} state={state} />\n        ) : (\n          <PrintComplete setStatus={setStatus} setActiveMode={setActiveMode} />\n        )\n      ) : (\n        <div>\n\n        <div className=\"Files\">\n          <label className=\"Files-Upload\">\n            <span>Upload</span>\n            <input\n              type=\"file\"\n              onChange={async e => {\n                let data = new FormData();\n                console.log(e.target.files);\n                e.persist();\n                data.append(\"file\", e.target.files[0]);\n                // Upload the file\n                await fetch(\n                  `http://makerhub.local:8080/api/v1/files/${e.target.files[0].name}`,\n                  { method: \"POST\", body: data }\n                );\n                // Print the file\n                await fetch(`http://makerhub.local:8080/api/v1/job/${e.target.files[0].name}`, {\n                  method: \"POST\",\n                  headers: { \"Content-Type\": \"application/json\" }\n                });\n                state.printing = true;\n                uploadedFile(true)\n                setState({\n                  files: [...state.files, e.target.files[0].name],\n                  file: 0\n                });\n              }}\n            ></input>\n          </label>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Print;\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Button,\n  ButtonGroup,\n} from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nimport './Moving.css';\n\nconst Moving = ({position}) => {\n\n  let sendGcode = function(gcode) {\n    fetch(`http://makerhub.local:8080/api/v1/send`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        gcode: gcode\n      })\n    });\n  }\n\n  return (\n    <Accordion>\n      <AccordionSummary classes={{ content: 'accordion-style' }}>\n        <h3 style={{ margin: '0' }}>Moving</h3>\n        <Button color=\"primary\" variant=\"contained\"\n                onClick={() => {\n                  sendGcode(\"G28\\nM114\\n\");\n                }}\n        >\n          Home All <FontAwesomeIcon icon={faHome} />\n        </Button>\n        <Button color=\"primary\" variant=\"contained\"\n                onClick={() => {\n                  sendGcode(\"G29\\nM114\\n\");\n                }}\n        >\n          Level Bed <FontAwesomeIcon />\n        </Button>\n        <span>></span>\n      </AccordionSummary>\n      <AccordionDetails>\n        <div className=\"control-moving-container\">\n          <div className=\"control-moving-sub-container\">\n            <div className=\"control-moving-sub-header\">\n              <h4>X</h4>\n              <input readOnly value={position.x ? position.x : 0 + \"mm\"}></input>\n            </div>\n            <ButtonGroup\n              color=\"primary\"\n              aria-label=\"outlined primary button group\"\n            >\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 X-10\\nM114\\n\");\n                      }}\n              >\n              -10\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 X-1\\nM114\\n\");\n                      }}\n              >\n              -1\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 X-0.1\\nM114\\n\");\n                      }}\n              >\n              -0.1\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G28 X\\nM114\\n\");\n                      }}\n              >\n                <FontAwesomeIcon icon={faHome} />\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 X0.1\\nM114\\n\");\n                      }}\n              >\n              +0.1\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 X1\\nM114\\n\");\n                      }}\n              >\n              +1\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 X10\\nM114\\n\");\n                      }}\n              >\n              +10\n              </Button>\n            </ButtonGroup>\n          </div>\n          <div className=\"control-moving-sub-container\">\n            <div className=\"control-moving-sub-header\">\n              <h4>Y</h4>\n              <input readOnly value={position.y ? position.y : 0 + \"mm\"}></input>\n            </div>\n            <ButtonGroup\n              color=\"primary\"\n              aria-label=\"outlined primary button group\"\n            >\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 Y-10\\nM114\\n\");\n                      }}\n              >\n              -10\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 Y-1\\nM114\\n\");\n                      }}\n              >\n              -1\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 Y-0.1\\nM114\\n\");\n                      }}\n              >\n              -0.1\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G28 Y\\nM114\\n\");\n                      }}\n              >\n                <FontAwesomeIcon icon={faHome} />\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 Y0.1\\nM114\\n\");\n                      }}\n              >\n              +0.1\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 Y1\\nM114\\n\");\n                      }}\n              >\n              +1\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 Y10\\nM114\\n\");\n                      }}\n              >\n              +10\n              </Button>\n            </ButtonGroup>\n          </div>\n          <div className=\"control-moving-sub-container\">\n            <div className=\"control-moving-sub-header\">\n              <h4>Z</h4>\n              <input readOnly value={position.z ? position.z : 0 + \"mm\"}></input>\n            </div>\n            <ButtonGroup\n              color=\"primary\"\n              aria-label=\"outlined primary button group\"\n            >\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 Z-10\\nM114\\n\");\n                      }}\n              >\n              -10\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 Z-1\\nM114\\n\");\n                      }}\n              >\n              -1\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 Z-0.1\\nM114\\n\");\n                      }}\n              >\n              -0.1\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G28 Z\\nM114\\n\");\n                      }}\n              >\n                <FontAwesomeIcon icon={faHome} />\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 Z0.1\\nM114\\n\");\n                      }}\n              >\n              +0.1\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 Z1\\nM114\\n\");\n                      }}\n              >\n              +1\n              </Button>\n              <Button size=\"large\"\n                      onClick={() => {\n                        sendGcode(\"G91\\nG0 Z10\\nM114\\n\");\n                      }}\n              >\n              +10\n              </Button>\n            </ButtonGroup>\n          </div>\n          <Button color=\"secondary\"\n                  onClick={() => {\n                    sendGcode(\"M18\\nM114\\n\");\n                  }}\n          >\n          Disable Motors\n          </Button>\n        </div>\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default Moving;\n","import React from \"react\";\n\nimport \"./style.css\";\n\nexport default function Thermometer(props) {\n  return (\n    <div className=\"Thermometer\">\n      {props.label}\n      <div className=\"Thermometer-Container\">\n        <div className=\"Thermometer-Bulb-Container\"></div>\n        <div className=\"Thermometer-Indicator-Container\">\n          <div\n            className=\"Thermometer-Indicator\"\n            style={{\n              height: `${25 +\n                100 * ((props.value - props.min) / (props.max - props.min))}%`\n            }}\n          ></div>\n          <div className=\"Thermometer-Bulb\">\n            <span>{props.value}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Button,\n} from '@material-ui/core';\n\nimport Thermometer from \"./thermometer\";\nimport './Heating.css';\n\nconst Heating = ({bed, extruder}) => {\n\n  let sendGcode = function(gcode) {\n    fetch(`http://makerhub.local:8080/api/v1/send`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        gcode: gcode\n      })\n    });\n  }\n\n  return (\n    <Accordion>\n      <AccordionSummary classes={{ content: 'accordion-style' }}>\n        <h3 style={{ margin: 0 }}>Heating</h3>\n        <Button color=\"primary\" variant=\"contained\"\n                onClick={() => {\n                  sendGcode(\"M104 S0\\nM140 S0\\n\");\n                }}\n        >\n          Cooldown All\n        </Button>\n        <span>></span>\n      </AccordionSummary>\n      <AccordionDetails>\n        <div className=\"control-heating-container\">\n          <h4>Nozzle</h4>\n          <div>\n            <Button variant=\"outlined\"\n                    onClick={() => {\n                      sendGcode(\"M104 S220\\n\");\n                    }}\n            >\n            Preheat PLA\n            </Button>\n            <Button variant=\"outlined\" color=\"primary\"\n                    onClick={() => {\n                      sendGcode(\"M104 S0\\n\");\n                    }}\n            >\n              Cooldown\n            </Button>\n          </div>\n          <h4>Bed</h4>\n          <div style={{ display: 'flex' }}>\n            <Button variant=\"outlined\"\n                    onClick={() => {\n                      sendGcode(\"M140 S50\\n\");\n                    }}\n            >\n            Preheat PLA\n            </Button>\n            <Button variant=\"outlined\" color=\"primary\"\n                    onClick={() => {\n                      sendGcode(\"M140 S0\\n\");\n                    }}\n            >\n              Cooldown\n            </Button>\n          </div>\n        </div>\n        <div className=\"monitor-heating-container\">\n          <div className=\"Guages\">\n            <div>\n              <Thermometer\n                label=\"Nozzle\"\n                value={extruder}\n                min={0}\n                max={400}\n              ></Thermometer>\n              {/*<input placeholder=\"N/A\"></input>*/}\n            </div>\n            <div>\n              <Thermometer\n                label=\"Bed\"\n                value={bed}\n                min={0}\n                max={150}\n              ></Thermometer>\n              {/*<input placeholder=\"N/A\"></input>*/}\n            </div>\n          </div>\n        </div>\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default Heating;\n","import React from 'react';\n\nconst ComingSoon = () => {\n  return (\n    <>\n      <p style={{ 'font-style': 'italic' }}>Coming Soon</p>\n    </>\n  );\n};\n\nexport default ComingSoon;\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@material-ui/core';\nimport ComingSoon from '../../Common/ComingSoon';\n\nconst Filament = () => {\n  return (\n    <Accordion>\n      <AccordionSummary>\n        <h3>Filament</h3>\n      </AccordionSummary>\n      <AccordionDetails>\n        <ComingSoon />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default Filament;\n","import React from 'react';\nimport Moving from './Moving/Moving';\nimport Heating from './Heating/Heating';\nimport Filament from './Filament/Filament';\n\nimport './Control.css';\n\nconst Control = (lastMessage) => {\n\n  const [bed, setBed] = React.useState(0);\n  const [extruder, setExtruder] = React.useState(0);\n  const [position, setPosition] = React.useState({ x:0, y:0, z:0 });\n\n  React.useEffect(() => {\n    if(\n      typeof lastMessage !== 'undefined' &&\n      typeof lastMessage.lastMessage !== 'undefined' &&\n      lastMessage.lastMessage &&\n      typeof lastMessage.lastMessage.data !== 'undefined' &&\n      lastMessage.lastMessage.data.length > 1\n    ) {\n      let json = JSON.parse(lastMessage.lastMessage.data.substring(1));\n      //console.log(json);\n      if (json[0].hasOwnProperty('current') && json[0].current.temps[0]) {\n        if (json[0].current.temps[0]) {\n          let temps = json[0].current.temps[0];\n          setExtruder(parseInt(temps.tool0.actual));\n          setBed(parseInt(temps.bed.actual));\n        }\n      }\n\n      if (json[0].hasOwnProperty('event') && json[0].event.hasOwnProperty(\"payload\")) {\n        if(json[0].event.payload) {\n          setPosition({\n            x: json[0].event.payload.x,\n            y: json[0].event.payload.y,\n            z: json[0].event.payload.z\n          });\n        }\n      }\n    }\n  }, [lastMessage]);\n\n  return (\n    <div>\n      <Moving position = {position} />\n      <Heating extruder = {extruder} bed = {bed} />\n      <Filament />\n    </div>\n  );\n};\n\nexport default Control;\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Button,\n} from '@material-ui/core';\nconst Settings = ({ resetMode }) => {\n  return (\n    <Accordion>\n      <AccordionSummary classes={{ content: 'accordion-style' }}>\n        <h3 style={{ margin: '0' }}>Settings</h3>\n        <span>></span>\n      </AccordionSummary>\n      <AccordionDetails>\n        <div>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => resetMode()}\n          >\n            Change Mode\n          </Button>\n        </div>\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Button,\n} from '@material-ui/core';\nconst About = () => {\n  return (\n    <Accordion>\n      <AccordionSummary classes={{ content: 'accordion-style' }}>\n        <h3 style={{ margin: '0' }}>About</h3>\n        <span>></span>\n      </AccordionSummary>\n      <AccordionDetails>\n        <div>\n          <h3>List Hardware Stats</h3>\n          <h3>Firmware Version</h3>\n        </div>\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport Settings from './Settings/Settings';\nimport About from './About/About';\nconst Help = ({ setActiveMode }) => {\n  const resetMode = () => {\n    setActiveMode(null);\n  };\n  return (\n    <div>\n      <Settings resetMode={resetMode} />\n      <About />\n    </div>\n  );\n};\n\nexport default Help;\n","import React, { useState } from 'react';\nimport ComingSoon from '../Common/ComingSoon';\nimport Moving from '../Control/Moving/Moving';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nconst Tune = () => {\n\n  const [offset, setOffset] = useState(0);\n\n  let sendGcode = function(gcode) {\n    fetch(`http://makerhub.local:8080/api/v1/send`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        gcode: gcode\n      })\n    });\n  };\n  let position = {x:0,y:0,z:0};\n\n  return (\n    <div>\n    <Button color=\"primary\" variant=\"contained\"\n            onClick={() => {\n              sendGcode(\"M851 Z0.00\\nM500\\nM501\\nG28\\nG90\\nM211 S0\\nG1 Z0\\n\");\n            }}\n    >\n      Start Z Offset <FontAwesomeIcon />\n    </Button>\n    <hr />\n    <ButtonGroup\n      color=\"primary\"\n      aria-label=\"outlined primary button group\"\n    >\n      <Button size=\"large\"\n              onClick={() => {\n                sendGcode(\"G91\\nG0 Z-1\\nM114\\n\");\n                setOffset(offset - 1);\n                console.log(offset);\n              }}\n      >\n      -1\n      </Button>\n      <Button size=\"large\"\n              onClick={() => {\n                sendGcode(\"G91\\nG0 Z-0.1\\nM114\\n\");\n                setOffset(offset - 0.1);\n                console.log(offset);\n              }}\n      >\n      -0.1\n      </Button>\n      <Button size=\"large\"\n              onClick={() => {\n                sendGcode(\"G90\\nG1 Z0\\n\");\n                setOffset(0);\n                console.log(offset);\n              }}\n      >\n        0\n      </Button>\n      <Button size=\"large\"\n              onClick={() => {\n                sendGcode(\"G91\\nG0 Z0.1\\nM114\\n\");\n                setOffset(offset + 0.1);\n                console.log(offset);\n              }}\n      >\n      +0.1\n      </Button>\n      <Button size=\"large\"\n              onClick={() => {\n                sendGcode(\"G91\\nG0 Z1\\nM114\\n\");\n                setOffset(offset + 1);\n                console.log(offset);\n              }}\n      >\n      +1\n      </Button>\n    </ButtonGroup>\n    <hr />\n    <Button color=\"primary\" variant=\"contained\"\n            onClick={() => {\n              sendGcode(\"G90\\nM851 Z\"+offset+\"\\nM211 S1\\nM500\\nM501\\nG28\\n\");\n              console.log(offset);\n            }}\n    >\n      Complete Z Offset <FontAwesomeIcon />\n    </Button>\n    </div>\n  );\n};\n\nexport default Tune;\n","import React, { useState, useEffect } from 'react';\nimport { AppBar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TabList from '../Common/Tabs/TabList';\nimport Print from '../Print/Print';\nimport Control from '../Control/Control';\nimport Help from '../Help/Help';\nimport Tune from '../Tune/Tune';\n\nimport './Home.css';\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n}));\nconst Home = ({ lastMessage, mode, setActiveMode }) => {\n  const classes = useStyles();\n  const [activeTab, setActiveTab] = useState('Print');\n  const [tabList, setTabList] = useState([]);\n  const [disabledNav, setDisabledNav] = useState(false);\n  useEffect(() => {\n    switch (mode) {\n      case 0:\n        setTabList(['Print', 'Control', 'Help']);\n        break;\n      case 1:\n        setTabList(['Print', 'Control', 'Tune', 'Help']);\n        break;\n      case 2:\n        setTabList(['Print', 'Control', 'Tune', 'Help']);\n        break;\n      default:\n        setTabList(['Print', 'Control', 'Help']);\n    }\n  }, []);\n  const handleTabClick = (event, val) => {\n    setActiveTab(tabList[val]);\n  };\n  const Components = {\n    Print: (\n      <Print lastMessage={lastMessage} setActiveMode={setActiveMode} setDisabledNav={setDisabledNav} />\n    ),\n    Control: <Control lastMessage={lastMessage} />,\n    Help: <Help setActiveMode={setActiveMode} />,\n    Tune: <Tune />,\n  };\n  return (\n    <div className=\"home-container\">\n      <AppBar\n        position=\"fixed\"\n        color=\"primary\"\n        className={classes.appBar}\n        disabled=\"true\"\n      >\n        <TabList\n          tabList={tabList}\n          handleTabClick={handleTabClick}\n          activeTab={tabList.indexOf(activeTab)}\n          disabledNav={disabledNav}\n        />\n      </AppBar>\n      <div className=\"component-container\">{Components[activeTab]}</div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useCallback, useMemo, useRef } from 'react';\nimport MainMenu from './components/MainMenu/MainMenu';\nimport Home from './components/Home/Home';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\n\n\nconst App = () => {\n  const [mode, setActiveMode] = useState(1);\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: 'rgb(42, 57, 131)',\n      },\n      secondary: {\n        main: '#CD6930',\n      },\n    },\n  });\n\n  const [socketUrl, setSocketUrl] = useState('ws://makerhub.local:9000/sockjs/718/qerksnvm/websocket');\n  const messageHistory = useRef([]);\n\n  const {\n    sendMessage,\n    lastMessage,\n    readyState,\n  } = useWebSocket(socketUrl, {\n    //Will attempt to reconnect on all close events, such as server shutting down\n    shouldReconnect: (closeEvent) => true,\n    reconnectAttempts: 999999, // default: 20\n    reconnectInterval: 0, // default: 5000\n    onOpen: () => {\n        console.log('socket opened');\n    },\n    onError: () => {\n        console.log('socket error');\n    },\n    onClose: () => { // force reconnect somehow like sending message?\n        console.log('socket closed');\n      }\n  });\n\n  messageHistory.current = useMemo(\n    () => messageHistory.current.concat(lastMessage),[lastMessage]\n  );\n\n  const connectionStatus = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\n  }[readyState];\n\n  React.useEffect(() => {\n    console.log(connectionStatus);\n  }, [connectionStatus]);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"main-container\">\n        {mode === null ? (\n          <MainMenu setActiveMode={setActiveMode} />\n        ) : (\n          <Home lastMessage={lastMessage} mode={mode} setActiveMode={setActiveMode} />\n        )}\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}