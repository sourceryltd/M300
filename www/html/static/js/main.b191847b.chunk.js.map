{"version":3,"sources":["components/Common/OptionCard/OptionCard.js","components/Setup/PrinterType/PrinterType.js","components/Setup/NetworkType/WifiConnect/WifiConnect.js","Utility/useMountEffect.js","components/Setup/NetworkType/HotspotConnect/HotspotConnect.js","components/Setup/NetworkType/NetworkType.js","components/Setup/UserLevel/UserLevel.js","components/Setup/Setup.js","components/Common/Tabs/TabList.js","components/Print/PrintStatus/PrintStatus.js","components/Print/PrintComplete/PrintComplete.js","components/Print/Print.js","components/Control/Moving/Moving.js","components/Control/Heating/thermometer/index.js","components/Control/Heating/Heating.js","components/Common/ComingSoon.js","components/Control/Filament/Filament.js","components/Control/Control.js","components/Help/Help.js","components/Tune/Tune.js","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","card","margin","border","textAlign","OptionCard","title","description","onClick","classes","Card","className","CardActionArea","CardContent","Typography","variant","header","fontSize","PrinterType","setStep","handleClick","val","accordion","display","justifyContent","backdrop","zIndex","color","button","alignSelf","height","marginLeft","connecting","flexDirection","alignItems","marginBottom","container","item","padding","keyboard","position","bottom","left","right","WifiConnect","fun","setShowSnack","setSnackMessage","setConnectWifi","handleSnackClose","useState","expanded","setExpanded","layout","setLayout","input","setInput","wifiArr","setWifiArr","setConnecting","useRef","ssid","useEffect","handleSubmit","a","body","password","console","log","fakeResponse","status","setTimeout","onChangeInput","event","target","value","current","IconButton","aria-label","List","map","network","Accordion","key","AccordionSummary","content","ListItem","Button","panel","AccordionDetails","TextField","id","label","type","onChange","length","Backdrop","open","CircularProgress","keyboardRef","r","layoutName","onKeyPress","buttonContainer","marginTop","HotspotConnect","NetworkType","connectWifi","UserLevel","setActiveMode","top","Setup","step","showSnack","snackMessage","Snackbar","autoHideDuration","message","onClose","TabList","tabList","handleTabClick","activeTab","disabledNav","Tabs","centered","tab","Tab","style","minWidth","disabled","PrintStatus","lastMessage","setStatus","state","setDisabledNav","paused","setPaused","setValue","data","json","JSON","parse","substring","hasOwnProperty","progress","completion","prevState","fetch","method","headers","stringify","file","files","icon","faPlay","faPause","gcode","faStop","LinearProgress","PrintComplete","size","Print","extruder","bed","connected","feed","printing","setState","uploadedFile","e","FormData","persist","append","name","Moving","sendGcode","faHome","readOnly","x","ButtonGroup","y","z","Thermometer","props","min","max","Heating","ComingSoon","Filament","Control","React","setBed","setExtruder","setPosition","temps","parseInt","tool0","actual","payload","drawerContainer","width","text","fontWeight","MenuArray","Help","drawerOpen","setDrawerOpen","ListItemText","primary","Divider","Drawer","anchor","paper","Tune","offset","setOffset","theme","appBar","Home","mode","setActiveTab","setTabList","Components","Menu","AppBar","indexOf","createMuiTheme","palette","main","secondary","overflowX","App","socketUrl","messageHistory","useWebSocket","shouldReconnect","closeEvent","reconnectAttempts","reconnectInterval","onOpen","onError","sendMessage","readyState","useMemo","concat","connectionStatus","ReadyState","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","CssBaseline","Container","fixed","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.b191847b.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  CardActionArea,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  card: {\n    margin: '32px',\n    border: '2px solid rgba(0, 0, 0, 0.12)',\n    textAlign: 'center',\n  },\n});\nconst OptionCard = ({ title, description, onClick }) => {\n  const classes = useStyles();\n\n  return (\n    <Card onClick={onClick} className={classes.card}>\n      <CardActionArea>\n        <CardContent>\n          <Typography variant=\"h2\">{title}</Typography>\n          <p>{description}</p>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default OptionCard;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport OptionCard from '../../Common/OptionCard/OptionCard';\n\nconst useStyles = makeStyles({\n  header: {\n    textAlign: 'center',\n    fontSize: '32px',\n  },\n});\n\nconst PrinterType = ({ setStep }) => {\n  const classes = useStyles();\n  const handleClick = (val) => {\n    //TODO: ADD LOGIC BASED ON CLICK VAL\n    setStep(1);\n  };\n  return (\n    <div>\n      <h2 className={classes.header}>Where will this printer be used?</h2>\n      <OptionCard title=\"Home\" onClick={() => handleClick('Home')} />\n      <OptionCard title=\"Classroom\" onClick={() => handleClick('Classroom')} />\n    </div>\n  );\n};\n\nexport default PrinterType;\n","import React, { useRef, useState } from 'react';\nimport { useMountEffect } from '../../../../Utility/useMountEffect';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Backdrop,\n  Button,\n  CircularProgress,\n  IconButton,\n  List,\n  ListItem,\n  TextField,\n  Snackbar,\n} from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Keyboard from 'react-simple-keyboard';\nimport 'react-simple-keyboard/build/css/index.css';\n\nconst useStyles = makeStyles({\n  accordion: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  backdrop: {\n    zIndex: 10000,\n    color: '#fff',\n  },\n  button: {\n    alignSelf: 'flex-end',\n    height: '36px',\n    marginLeft: '25px',\n  },\n  connecting: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& h4': {\n      marginBottom: '24px',\n    },\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  item: {\n    padding: '30px 15px',\n    fontSize: '24px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  keyboard: {\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    color: '#000',\n  },\n});\nconst WifiConnect = ({\n  setStep,\n  setShowSnack,\n  setSnackMessage,\n  handleSnackClose,\n  setConnectWifi,\n}) => {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = useState(false);\n  const [layout, setLayout] = useState('default');\n  const [input, setInput] = useState('');\n  const [wifiArr, setWifiArr] = useState([]);\n  const [connecting, setConnecting] = useState(false);\n\n  const keyboard = useRef();\n\n  useMountEffect(() => {\n    //Fetch http://makerhub.local:8990/networks/scan\n    //setWifiArr response.networks\n    setWifiArr([{ ssid: '1234' }, { ssid: '2345' }, { ssid: '3456' }]);\n  });\n\n  const handleSubmit = async () => {\n    const body = {\n      ssid: expanded,\n      password: input,\n    };\n    console.log(body);\n    //set loading screen\n    setExpanded(false);\n    setConnecting(true);\n    setInput('');\n    //await POST body to http://makerhub.local:8990/connect\n    //after, display success or failure\n    let fakeResponse = { status: 200 };\n    setTimeout(() => {\n      setConnecting(false);\n      if (fakeResponse.status === 200) {\n        setSnackMessage('Successfully Connected');\n        //Go to next screen\n        setStep(2);\n      } else {\n        setSnackMessage('Connection Failed');\n        // show snack message \"Failure\"\n      }\n      setShowSnack(() => true);\n    }, 3000);\n  };\n  const onChange = (input) => {\n    setInput(input);\n    console.log('Input changed', input);\n  };\n  const handleShift = () => {\n    const newLayoutName = layout === 'default' ? 'shift' : 'default';\n    setLayout(newLayoutName);\n  };\n  const onKeyPress = (button) => {\n    /**\n     * If you want to handle the shift and caps lock buttons\n     */\n    (button === '{shift}' || button === '{lock}') && handleShift();\n    button === '{enter}' && handleSubmit();\n  };\n  const handleExpand = (panel) => {\n    setExpanded(panel);\n  };\n  const onChangeInput = (event) => {\n    const input = event.target.value;\n    setInput(input);\n    keyboard.current.setInput(input);\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.header}>\n        <IconButton\n          aria-label=\"back\"\n          onClick={() => setConnectWifi(() => null)}\n        >\n          <ArrowBackIcon />\n        </IconButton>\n        <h2>Wi-Fi</h2>\n      </div>\n\n      <List>\n        {wifiArr.map((network) => {\n          return (\n            <Accordion\n              expanded={expanded === network.ssid}\n              key={`${network.ssid}-list-item`}\n            >\n              <AccordionSummary classes={{ content: 'accordion-style' }}>\n                <ListItem className={classes.item}>\n                  {network.ssid}\n                  <Button\n                    color={expanded === network.ssid ? 'secondary' : 'primary'}\n                    variant=\"contained\"\n                    onClick={() => {\n                      if (expanded === network.ssid) {\n                        setExpanded(() => false);\n                        setInput('');\n                      } else {\n                        handleExpand(network.ssid);\n                      }\n                    }}\n                  >\n                    {expanded === network.ssid ? 'Close' : 'Join'}\n                  </Button>\n                </ListItem>\n              </AccordionSummary>\n              <AccordionDetails className={classes.accordion}>\n                <TextField\n                  id=\"standard-password-input\"\n                  label=\"Password\"\n                  type=\"password\"\n                  color=\"secondary\"\n                  value={input}\n                  onChange={onChangeInput}\n                />\n                <Button\n                  color=\"primary\"\n                  variant=\"contained\"\n                  className={classes.button}\n                  onClick={() => {\n                    if (input.length > 0) {\n                      handleSubmit();\n                    } else {\n                      setSnackMessage('Password required');\n                      setShowSnack(true);\n                    }\n                  }}\n                >\n                  Connect\n                </Button>\n              </AccordionDetails>\n            </Accordion>\n          );\n        })}\n      </List>\n      {connecting && (\n        <Backdrop className={classes.backdrop} open={connecting}>\n          <div className={classes.connecting}>\n            <h4>Connecting</h4>\n            <CircularProgress color=\"inherit\" />\n          </div>\n        </Backdrop>\n      )}\n      {expanded && (\n        <div className={classes.keyboard}>\n          <Keyboard\n            keyboardRef={(r) => (keyboard.current = r)}\n            layoutName={layout}\n            onChange={onChange}\n            onKeyPress={onKeyPress}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WifiConnect;\n","import { useEffect } from 'react';\n\nexport const useMountEffect = (fun) => useEffect(fun, []);\n","import React from 'react';\nimport { Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    marginTop: '56px',\n  },\n});\nconst HotspotConnect = ({ setStep, setConnectWifi }) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <h2>\n        Your SSID is{' '}\n        <Typography color=\"secondary\" variant=\"h4\">\n          Maker300X\n        </Typography>\n      </h2>\n      <h2>\n        Your password is{' '}\n        <Typography color=\"secondary\" variant=\"h4\">\n          makermade\n        </Typography>\n      </h2>\n      <div className={classes.buttonContainer}>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => setConnectWifi(null)}\n        >\n          Back\n        </Button>\n        <Button color=\"primary\" variant=\"contained\" onClick={() => setStep(2)}>\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default HotspotConnect;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport OptionCard from '../../Common/OptionCard/OptionCard';\nimport WifiConnect from './WifiConnect/WifiConnect';\nimport HotspotConnect from './HotspotConnect/HotspotConnect';\n\nconst useStyles = makeStyles({\n  header: {\n    textAlign: 'center',\n    fontSize: '32px',\n  },\n});\nconst NetworkType = ({\n  setStep,\n  setSnackMessage,\n  setShowSnack,\n  handleSnackClose,\n}) => {\n  const classes = useStyles();\n  const [connectWifi, setConnectWifi] = useState(null);\n  const handleClick = (val) => {\n    //TODO: ADD LOGIC BASED ON CLICK VAL\n    setConnectWifi(() => (val === 'wifi' ? true : false));\n  };\n  return (\n    <div>\n      {connectWifi === null && (\n        <>\n          <h2 className={classes.header}>Network</h2>\n          <OptionCard\n            title=\"Connect Wi-Fi\"\n            onClick={() => handleClick('wifi')}\n          />\n          <OptionCard\n            title=\"Use Hotspot\"\n            onClick={() => handleClick('hotspot')}\n          />\n        </>\n      )}\n      {connectWifi === true && (\n        <WifiConnect\n          setStep={setStep}\n          setShowSnack={setShowSnack}\n          setSnackMessage={setSnackMessage}\n          handleSnackClose={handleSnackClose}\n          setConnectWifi={setConnectWifi}\n        />\n      )}\n      {connectWifi === false && (\n        <HotspotConnect setStep={setStep} setConnectWifi={setConnectWifi} />\n      )}\n    </div>\n  );\n};\n\nexport default NetworkType;\n","import React from 'react';\nimport OptionCard from '../../Common/OptionCard/OptionCard';\n\nimport './UserLevel.css';\nconst UserLevel = ({ setActiveMode }) => {\n  return (\n    <div className=\"menu-container\">\n      <h3>Please choose a mode</h3>\n      <div className=\"menu-options-container\">\n        <OptionCard\n          title=\"Beginner\"\n          description=\"For beginners. We will walk you through how to operate your 3D\n                printer, step by step.\"\n          onClick={() => setActiveMode(0)}\n        />\n        <OptionCard\n          title=\"Standard\"\n          description=\"For users familiar with 3D printing.\"\n          onClick={() => setActiveMode(1)}\n        />\n        <OptionCard\n          title=\"Advanced\"\n          description=\"For advanced users, unlocks features to customize your printer\n          firmware any way you like!\"\n          onClick={() => setActiveMode(2)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default UserLevel;\n","import React, { useState } from 'react';\nimport { Snackbar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport PrinterType from './PrinterType/PrinterType';\nimport NetworkType from './NetworkType/NetworkType';\nimport UserLevel from './UserLevel/UserLevel';\n\nconst useStyles = makeStyles({\n  container: {\n    textAlign: 'center',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\nconst Setup = ({ setActiveMode }) => {\n  const classes = useStyles();\n\n  const [step, setStep] = useState(0);\n  const [showSnack, setShowSnack] = useState(false);\n  const [snackMessage, setSnackMessage] = useState('');\n  const handleSnackClose = () => {\n    setShowSnack(() => false);\n    setSnackMessage('');\n  };\n  return (\n    <div className={classes.container}>\n      {step === 0 && <PrinterType setStep={setStep} />}\n      {step === 1 && (\n        <NetworkType\n          setStep={setStep}\n          setShowSnack={setShowSnack}\n          setSnackMessage={setSnackMessage}\n          handleSnackClose={handleSnackClose}\n        />\n      )}\n      {step === 2 && <UserLevel setActiveMode={setActiveMode} />}\n      <Snackbar\n        open={showSnack}\n        autoHideDuration={6000}\n        message={snackMessage}\n        onClose={handleSnackClose}\n      ></Snackbar>\n    </div>\n  );\n};\n\nexport default Setup;\n","import React from 'react';\nimport { Tabs, Tab } from '@material-ui/core';\n\nimport './TabList.css';\nconst TabList = ({ tabList, handleTabClick, activeTab, disabledNav }) => {\n  return (\n    <Tabs value={activeTab} onChange={handleTabClick} centered>\n      {tabList.map((tab) => (\n        <Tab\n          style={{ height: '70px', fontSize: '20px', minWidth: '140px' }}\n          label={tab}\n          key={`tab - ${tab}`}\n          disabled={disabledNav}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nexport default TabList;\n","import React, { useState, useEffect } from 'react';\nimport { Button, LinearProgress } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPause, faPlay, faStop } from '@fortawesome/free-solid-svg-icons';\n\nconst PrintStatus = ({ lastMessage, setStatus, setDisabledNav, state }) => {\n  const [paused, setPaused] = useState(false);\n  const [value, setValue] = useState(0);\n\n  let sendGcode = function(gcode) {\n    fetch(`http://makerhub.local:8080/api/v1/send`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        gcode: gcode\n      })\n    });\n  }\n\n\n  useEffect(() => {\n    if(\n      typeof lastMessage !== 'undefined' &&\n      typeof lastMessage.lastMessage !== 'undefined' &&\n      lastMessage.lastMessage &&\n      typeof lastMessage.lastMessage.data !== 'undefined' &&\n      lastMessage.lastMessage.data.length > 1\n    ) {\n      let json = JSON.parse(lastMessage.lastMessage.data.substring(1));\n      //console.log(json);\n      if (json[0].hasOwnProperty('current') && json[0].current.progress) {\n        if (value !== json[0].current.progress.completion) {\n          setValue(json[0].current.progress.completion);\n          setStatus(json[0].current.progress.completion);\n        }\n      }\n    }\n  }, [lastMessage]);\n\n  return (\n    <>\n      <div className=\"print-btn-container\">\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => {\n            setPaused((prevState) => !prevState);\n            fetch(`http://makerhub.local:8080/api/v1/job`, {\n              method: \"PATCH\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({\n                file: state.files[state.file]\n              })\n            });\n          }}\n        >\n          {!paused ? (\n            <span>\n              <FontAwesomeIcon icon={faPause} /> Pause\n            </span>\n          ) : (\n            <span>\n              <FontAwesomeIcon icon={faPlay} /> Play\n            </span>\n          )}\n        </Button>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => {\n            setStatus(1);\n            sendGcode(\"M77\\n\");\n          }}\n        >\n          <span>\n            <FontAwesomeIcon icon={faStop} /> Stop\n          </span>\n        </Button>\n      </div>\n      <div className=\"print-status-bar\">\n        <LinearProgress variant=\"determinate\" value={value} />\n      </div>\n    </>\n  );\n};\n\nexport default PrintStatus;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\n\nconst PrintComplete = ({ setStatus, setActiveMode }) => {\n  return (\n    <>\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={() => setStatus(0)}\n        size=\"large\"\n      >\n        Print Again\n      </Button>\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        size=\"large\"\n        onClick={() => setActiveMode(null)}\n        style={{ marginTop: '12px' }}\n      >\n        Exit\n      </Button>\n    </>\n  );\n};\n\nexport default PrintComplete;\n","import React, { useState } from 'react';\n\nimport PrintStatus from './PrintStatus/PrintStatus';\nimport PrintComplete from './PrintComplete/PrintComplete';\n\nimport './Print.css';\n\nconst Print = ({ lastMessage, setActiveMode, setDisabledNav }) => {\n  let [state, setState] = useState({\n    extruder: 0,\n    bed: 0,\n    connected: false,\n    feed: \"1\",\n    file: -1,\n    files: [],\n    printing: false,\n    progress: 0,\n    paused: false\n  });\n  const [file, uploadedFile] = useState(false);\n  const [status, setStatus] = useState(0);\n  return (\n    <div className=\"print-container\">\n      {file ? (\n        status === 0 ? (\n          <PrintStatus lastMessage={lastMessage} setStatus={setStatus} setDisabledNav={setDisabledNav} state={state} />\n        ) : (\n          <PrintComplete setStatus={setStatus} setActiveMode={setActiveMode} />\n        )\n      ) : (\n        <div>\n\n        <div className=\"Files\">\n          <label className=\"Files-Upload\">\n            <span>Upload</span>\n            <input\n              type=\"file\"\n              onChange={async e => {\n                let data = new FormData();\n                console.log(e.target.files);\n                e.persist();\n                data.append(\"file\", e.target.files[0]);\n                // Upload the file\n                await fetch(\n                  `http://makerhub.local:8080/api/v1/files/${e.target.files[0].name}`,\n                  { method: \"POST\", body: data }\n                );\n                // Print the file\n                await fetch(`http://makerhub.local:8080/api/v1/job/${e.target.files[0].name}`, {\n                  method: \"POST\",\n                  headers: { \"Content-Type\": \"application/json\" }\n                });\n                state.printing = true;\n                uploadedFile(true)\n                setState({\n                  files: [...state.files, e.target.files[0].name],\n                  file: 0\n                });\n              }}\n            ></input>\n          </label>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Print;\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Button,\n  ButtonGroup,\n} from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nimport './Moving.css';\n\nconst Moving = ({ position }) => {\n  let sendGcode = function (gcode) {\n    fetch(`http://makerhub.local:8080/api/v1/send`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        gcode: gcode,\n      }),\n    });\n  };\n\n  return (\n    <Accordion>\n      <AccordionSummary classes={{ content: 'accordion-style' }}>\n        <h3 style={{ margin: '0' }}>Moving</h3>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => {\n            sendGcode('G28\\nM114\\n');\n          }}\n        >\n          Home All <FontAwesomeIcon icon={faHome} />\n        </Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => {\n            sendGcode('G29\\nM114\\n');\n          }}\n        >\n          Level Bed <FontAwesomeIcon />\n        </Button>\n        <ArrowForwardIosIcon />\n      </AccordionSummary>\n      <AccordionDetails>\n        <div className=\"control-moving-container\">\n          <div className=\"control-moving-sub-container\">\n            <div className=\"control-moving-sub-header\">\n              <h4>X</h4>\n              <input\n                readOnly\n                value={position.x ? position.x : 0 + 'mm'}\n              ></input>\n            </div>\n            <ButtonGroup aria-label=\"outlined primary button group\">\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 X-10\\nM114\\n');\n                }}\n              >\n                -10\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 X-1\\nM114\\n');\n                }}\n              >\n                -1\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 X-0.1\\nM114\\n');\n                }}\n              >\n                -0.1\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G28 X\\nM114\\n');\n                }}\n              >\n                <FontAwesomeIcon icon={faHome} />\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 X0.1\\nM114\\n');\n                }}\n              >\n                +0.1\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 X1\\nM114\\n');\n                }}\n              >\n                +1\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 X10\\nM114\\n');\n                }}\n              >\n                +10\n              </Button>\n            </ButtonGroup>\n          </div>\n          <div className=\"control-moving-sub-container\">\n            <div className=\"control-moving-sub-header\">\n              <h4>Y</h4>\n              <input\n                readOnly\n                value={position.y ? position.y : 0 + 'mm'}\n              ></input>\n            </div>\n            <ButtonGroup aria-label=\"outlined primary button group\">\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 Y-10\\nM114\\n');\n                }}\n              >\n                -10\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 Y-1\\nM114\\n');\n                }}\n              >\n                -1\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 Y-0.1\\nM114\\n');\n                }}\n              >\n                -0.1\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G28 Y\\nM114\\n');\n                }}\n              >\n                <FontAwesomeIcon icon={faHome} />\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 Y0.1\\nM114\\n');\n                }}\n              >\n                +0.1\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 Y1\\nM114\\n');\n                }}\n              >\n                +1\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 Y10\\nM114\\n');\n                }}\n              >\n                +10\n              </Button>\n            </ButtonGroup>\n          </div>\n          <div className=\"control-moving-sub-container\">\n            <div className=\"control-moving-sub-header\">\n              <h4>Z</h4>\n              <input\n                readOnly\n                value={position.z ? position.z : 0 + 'mm'}\n              ></input>\n            </div>\n            <ButtonGroup aria-label=\"outlined primary button group\">\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 Z-10\\nM114\\n');\n                }}\n              >\n                -10\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 Z-1\\nM114\\n');\n                }}\n              >\n                -1\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 Z-0.1\\nM114\\n');\n                }}\n              >\n                -0.1\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G28 Z\\nM114\\n');\n                }}\n              >\n                <FontAwesomeIcon icon={faHome} />\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 Z0.1\\nM114\\n');\n                }}\n              >\n                +0.1\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 Z1\\nM114\\n');\n                }}\n              >\n                +1\n              </Button>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  sendGcode('G91\\nG0 Z10\\nM114\\n');\n                }}\n              >\n                +10\n              </Button>\n            </ButtonGroup>\n          </div>\n          <Button\n            color=\"secondary\"\n            onClick={() => {\n              sendGcode('M18\\nM114\\n');\n            }}\n          >\n            Disable Motors\n          </Button>\n        </div>\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default Moving;\n","import React from \"react\";\n\nimport \"./style.css\";\n\nexport default function Thermometer(props) {\n  return (\n    <div className=\"Thermometer\">\n      {props.label}\n      <div className=\"Thermometer-Container\">\n        <div className=\"Thermometer-Bulb-Container\"></div>\n        <div className=\"Thermometer-Indicator-Container\">\n          <div\n            className=\"Thermometer-Indicator\"\n            style={{\n              height: `${25 +\n                100 * ((props.value - props.min) / (props.max - props.min))}%`\n            }}\n          ></div>\n          <div className=\"Thermometer-Bulb\">\n            <span>{props.value}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Button,\n} from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport Thermometer from './thermometer';\nimport './Heating.css';\n\nconst Heating = ({ bed, extruder }) => {\n  let sendGcode = function (gcode) {\n    fetch(`http://makerhub.local:8080/api/v1/send`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        gcode: gcode,\n      }),\n    });\n  };\n\n  return (\n    <Accordion>\n      <AccordionSummary classes={{ content: 'accordion-style' }}>\n        <h3 style={{ margin: 0 }}>Heating</h3>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => {\n            sendGcode('M104 S0\\nM140 S0\\n');\n          }}\n        >\n          Cooldown All\n        </Button>\n        <ArrowForwardIosIcon />\n      </AccordionSummary>\n      <AccordionDetails>\n        <div className=\"control-heating-container\">\n          <h4>Nozzle</h4>\n          <div>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                sendGcode('M104 S220\\n');\n              }}\n            >\n              Preheat PLA\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                sendGcode('M104 S0\\n');\n              }}\n            >\n              Cooldown\n            </Button>\n          </div>\n          <h4>Bed</h4>\n          <div style={{ display: 'flex' }}>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                sendGcode('M140 S50\\n');\n              }}\n            >\n              Preheat PLA\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                sendGcode('M140 S0\\n');\n              }}\n            >\n              Cooldown\n            </Button>\n          </div>\n        </div>\n        <div className=\"monitor-heating-container\">\n          <div className=\"Guages\">\n            <div>\n              <Thermometer\n                label=\"Nozzle\"\n                value={extruder}\n                min={0}\n                max={400}\n              ></Thermometer>\n              {/*<input placeholder=\"N/A\"></input>*/}\n            </div>\n            <div>\n              <Thermometer\n                label=\"Bed\"\n                value={bed}\n                min={0}\n                max={150}\n              ></Thermometer>\n              {/*<input placeholder=\"N/A\"></input>*/}\n            </div>\n          </div>\n        </div>\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default Heating;\n","import React from 'react';\n\nconst ComingSoon = () => {\n  return (\n    <>\n      <p style={{ 'font-style': 'italic' }}>Coming Soon</p>\n    </>\n  );\n};\n\nexport default ComingSoon;\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@material-ui/core';\nimport ComingSoon from '../../Common/ComingSoon';\n\nconst Filament = () => {\n  return (\n    <Accordion>\n      <AccordionSummary>\n        <h3>Filament</h3>\n      </AccordionSummary>\n      <AccordionDetails>\n        <ComingSoon />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default Filament;\n","import React from 'react';\nimport Moving from './Moving/Moving';\nimport Heating from './Heating/Heating';\nimport Filament from './Filament/Filament';\n\nimport './Control.css';\n\nconst Control = (lastMessage) => {\n\n  const [bed, setBed] = React.useState(0);\n  const [extruder, setExtruder] = React.useState(0);\n  const [position, setPosition] = React.useState({ x:0, y:0, z:0 });\n\n  React.useEffect(() => {\n    if(\n      typeof lastMessage !== 'undefined' &&\n      typeof lastMessage.lastMessage !== 'undefined' &&\n      lastMessage.lastMessage &&\n      typeof lastMessage.lastMessage.data !== 'undefined' &&\n      lastMessage.lastMessage.data.length > 1\n    ) {\n      let json = JSON.parse(lastMessage.lastMessage.data.substring(1));\n      //console.log(json);\n      if (json[0].hasOwnProperty('current') && json[0].current.temps[0]) {\n        if (json[0].current.temps[0]) {\n          let temps = json[0].current.temps[0];\n          setExtruder(parseInt(temps.tool0.actual));\n          setBed(parseInt(temps.bed.actual));\n        }\n      }\n\n      if (json[0].hasOwnProperty('event') && json[0].event.hasOwnProperty(\"payload\")) {\n        if(json[0].event.payload) {\n          setPosition({\n            x: json[0].event.payload.x,\n            y: json[0].event.payload.y,\n            z: json[0].event.payload.z\n          });\n        }\n      }\n    }\n  }, [lastMessage]);\n\n  return (\n    <div>\n      <Moving position = {position} />\n      <Heating extruder = {extruder} bed = {bed} />\n      <Filament />\n    </div>\n  );\n};\n\nexport default Control;\n","import React, { useState } from 'react';\nimport {\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Settings from './Settings/Settings';\nimport About from './About/About';\n\nconst useStyles = makeStyles({\n  drawerContainer: {\n    width: '100%',\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  item: {\n    height: '100px',\n    padding: '0 22px',\n  },\n  text: {\n    fontSize: '1.5em',\n    fontWeight: 'bold',\n  },\n});\n\nconst MenuArray = [\n  'Tutorials',\n  'Network',\n  'Printer Type',\n  'User Type',\n  'Manage Storage',\n  'Update',\n  'Reset',\n  'About',\n];\n\nconst Help = ({ setActiveMode }) => {\n  const classes = useStyles();\n\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [activeComponent, setActiveComponent] = useState('');\n  // const resetMode = () => {\n  //   setActiveMode(null);\n  // };\n  const handleDrawer = (item) => {\n    //call setActiveComponent\n    setDrawerOpen(true);\n  };\n  return (\n    <div>\n      <List>\n        {MenuArray.map((item) => {\n          return (\n            <>\n              <ListItem\n                button\n                onClick={() => handleDrawer(item)}\n                className={classes.item}\n              >\n                <ListItemText\n                  primary={\n                    <Typography className={classes.text}>{item}</Typography>\n                  }\n                />\n                <ArrowForwardIosIcon />\n              </ListItem>\n              <Divider />\n            </>\n          );\n        })}\n      </List>\n      <Drawer\n        anchor=\"right\"\n        open={drawerOpen}\n        onClose={() => setDrawerOpen(false)}\n        classes={{\n          paper: classes.drawerContainer,\n        }}\n      >\n        <div className={classes.header}>\n          <IconButton aria-label=\"back\" onClick={() => setDrawerOpen(false)}>\n            <ArrowBackIcon />\n          </IconButton>\n          <h2>Component Name</h2>\n        </div>\n        <div>Component Goes Here</div>\n      </Drawer>\n      {/* <Settings resetMode={resetMode} />\n      <About /> */}\n    </div>\n  );\n};\n\nexport default Help;\n","import React, { useState } from 'react';\nimport ComingSoon from '../Common/ComingSoon';\nimport Moving from '../Control/Moving/Moving';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nconst Tune = () => {\n  const [offset, setOffset] = useState(0);\n\n  let sendGcode = function (gcode) {\n    fetch(`http://makerhub.local:8080/api/v1/send`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        gcode: gcode,\n      }),\n    });\n  };\n  let position = { x: 0, y: 0, z: 0 };\n\n  return (\n    <div>\n      <Button\n        onClick={() => {\n          sendGcode('M851 Z0.00\\nM500\\nM501\\nG28\\nG90\\nM211 S0\\nG1 Z0\\n');\n        }}\n      >\n        Start Z Offset <FontAwesomeIcon />\n      </Button>\n      <hr />\n      <ButtonGroup aria-label=\"outlined primary button group\">\n        <Button\n          size=\"large\"\n          onClick={() => {\n            sendGcode('G91\\nG0 Z-1\\nM114\\n');\n            setOffset(offset - 1);\n            console.log(offset);\n          }}\n        >\n          -1\n        </Button>\n        <Button\n          size=\"large\"\n          onClick={() => {\n            sendGcode('G91\\nG0 Z-0.1\\nM114\\n');\n            setOffset(offset - 0.1);\n            console.log(offset);\n          }}\n        >\n          -0.1\n        </Button>\n        <Button\n          size=\"large\"\n          onClick={() => {\n            sendGcode('G90\\nG1 Z0\\n');\n            setOffset(0);\n            console.log(offset);\n          }}\n        >\n          0\n        </Button>\n        <Button\n          size=\"large\"\n          onClick={() => {\n            sendGcode('G91\\nG0 Z0.1\\nM114\\n');\n            setOffset(offset + 0.1);\n            console.log(offset);\n          }}\n        >\n          +0.1\n        </Button>\n        <Button\n          size=\"large\"\n          onClick={() => {\n            sendGcode('G91\\nG0 Z1\\nM114\\n');\n            setOffset(offset + 1);\n            console.log(offset);\n          }}\n        >\n          +1\n        </Button>\n      </ButtonGroup>\n      <hr />\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={() => {\n          sendGcode('G90\\nM851 Z' + offset + '\\nM211 S1\\nM500\\nM501\\nG28\\n');\n          console.log(offset);\n        }}\n      >\n        Complete Z Offset <FontAwesomeIcon />\n      </Button>\n    </div>\n  );\n};\n\nexport default Tune;\n","import React, { useState, useEffect } from 'react';\nimport { AppBar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TabList from '../Common/Tabs/TabList';\nimport Print from '../Print/Print';\nimport Control from '../Control/Control';\nimport Help from '../Help/Help';\nimport Tune from '../Tune/Tune';\n\nimport './Home.css';\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n}));\nconst Home = ({ lastMessage, mode, setActiveMode }) => {\n  const classes = useStyles();\n  const [activeTab, setActiveTab] = useState('Print');\n  const [tabList, setTabList] = useState([]);\n  const [disabledNav, setDisabledNav] = useState(false);\n  useEffect(() => {\n    switch (mode) {\n      case 0:\n        setTabList(['Print', 'Control', 'Menu']);\n        break;\n      case 1:\n        setTabList(['Print', 'Control', 'Tune', 'Menu']);\n        break;\n      case 2:\n        setTabList(['Print', 'Control', 'Tune', 'Menu']);\n        break;\n      default:\n        setTabList(['Print', 'Control', 'Menu']);\n    }\n  }, [mode]);\n  const handleTabClick = (event, val) => {\n    setActiveTab(tabList[val]);\n  };\n  const Components = {\n    Print: (\n      <Print\n        lastMessage={lastMessage}\n        setActiveMode={setActiveMode}\n        setDisabledNav={setDisabledNav}\n      />\n    ),\n    Control: <Control lastMessage={lastMessage} />,\n    Menu: <Help setActiveMode={setActiveMode} />,\n    Tune: <Tune />,\n  };\n  return (\n    <div className=\"home-container\">\n      <AppBar\n        position=\"fixed\"\n        color=\"primary\"\n        className={classes.appBar}\n        disabled={true}\n      >\n        <TabList\n          tabList={tabList}\n          handleTabClick={handleTabClick}\n          activeTab={tabList.indexOf(activeTab)}\n          disabledNav={disabledNav}\n        />\n      </AppBar>\n      <div className=\"component-container\">{Components[activeTab]}</div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useCallback, useMemo, useRef } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Setup from './components/Setup/Setup';\nimport Home from './components/Home/Home';\nimport {\n  createMuiTheme,\n  MuiThemeProvider,\n  makeStyles,\n} from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\n\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: 'rgb(42, 57, 131)',\n    },\n    secondary: {\n      main: '#CD6930',\n    },\n    type: 'dark',\n  },\n});\nconst useStyles = makeStyles({\n  container: {\n    height: '100vh',\n    width: '100vw',\n    overflowX: 'hidden',\n    padding: 0,\n  },\n});\nconst App = () => {\n  const classes = useStyles();\n\n  const [mode, setActiveMode] = useState(null);\n\n  const [socketUrl, setSocketUrl] = useState(\n    'ws://makerhub.local:9000/sockjs/718/qerksnvm/websocket'\n  );\n  const messageHistory = useRef([]);\n\n  const { sendMessage, lastMessage, readyState } = useWebSocket(socketUrl, {\n    //Will attempt to reconnect on all close events, such as server shutting down\n    shouldReconnect: (closeEvent) => true,\n    reconnectAttempts: 999999, // default: 20\n    reconnectInterval: 0, // default: 5000\n    onOpen: () => {\n      console.log('socket opened');\n    },\n    onError: () => {\n      console.log('socket error');\n    },\n    onClose: () => {\n      // force reconnect somehow like sending message?\n      console.log('socket closed');\n    },\n  });\n\n  messageHistory.current = useMemo(\n    () => messageHistory.current.concat(lastMessage),\n    [lastMessage]\n  );\n\n  const connectionStatus = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\n  }[readyState];\n\n  React.useEffect(() => {\n    console.log(connectionStatus);\n  }, [connectionStatus]);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container className={classes.container} fixed>\n        {mode === null ? (\n          <Setup setActiveMode={setActiveMode} />\n        ) : (\n          <Home\n            // lastMessage={lastMessage}\n            mode={mode}\n            setActiveMode={setActiveMode}\n          />\n        )}\n      </Container>\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}